GUI Programming with Python: Buttons in Tkinter Python Tkinter Course Tkinter Tutorial Saying Hello with LabelsMessage WidgetButtonsVariable ClassesRadiobuttonsCheckboxesEntry WidgetsCanvas WidgetsSlidersText WidgetDialogsLayout ManagementBulls and Cows / Mastermind in TKCreating MenusEvents and Binds This website is created by: Python Training Courses in Toronto, Canada On site trainings in Europe, Canada and the US. Various Kinds of Buttons "We made the buttons on the screen look so good you'll want to lick them." (Steve Jobs) "Biographies are but the clothes and buttons of the man. The biography of the man himself cannot be written." (Mark Twain) Of course, Keith Richard didn't mean Tk buttons, when he said that you can't make good music by just pushing some buttons: "Good music comes out of people playing together, knowing what they want to do and going for it. You have to sweat over it and bug it to death. You can't do it by pushing buttons and watching a TV screen." Just one more quotation by a famous musician: "America: It's like Britain, only with buttons." (Ringo Starr) This website is free of annoying ads. We want to keep it like this. You can help with your donation: The need for donations Bernd Klein on Facebook Search this website: This topic in German / Deutsche Übersetzung: Buttons / Schaltflächen in Tkinter Classroom Training Courses This website contains a free and extensive online tutorial by Bernd Klein. If you are interested in an instructor-led classroom training, you may have a look at the international Python courses by Bernd Klein. If you are looking for classes in Germany, you can check the Python courses by Bernd Klein at Bodenseo. (c) kabliczech - Fotolia.com Quote of the Day: We can only see a short distance ahead, but we can see plenty there that needs to be done. Alan Turing Graphical User Interface A graphical user interface (GUI) is a type of user interface that allows users to interact with electronic devices in a graphical way, i.e. with images, rather than text commands. Originally interactive user interfaces to computers were not graphical, they were text oriented and usually consisted of commands, which had to be remembered. The DOS operating system from Microsoft and the Bourne shell under Linux are examples of such user-computer interfaces. Data Protection Declaration Data Protection Declaration Previous Chapter: Message Widget Next Chapter: Variable Classes Tkinter Tkinter Buttons The Button widget is a standard Tkinter widget, which is used for various kinds of buttons. A button is a widget which is designed for the user to interact with, i.e. if the button is pressed by mouse click some action might be started. They can also contain text and images like labels. While labels can display text in various fonts, a button can only display text in a single font. The text of a button can span more than one line. A Python function or method can be associated with a button. This function or method will be executed, if the button is pressed in some way. Example for the Button Class The following script defines two buttons: one to quit the application and another one for the action, i.e. printing the text "Tkinter is easy to use!" on the terminal. import tkinter as tk def write_slogan(): print("Tkinter is easy to use!") root = tk.Tk() frame = tk.Frame(root) frame.pack() button = tk.Button(frame, text="QUIT", fg="red", command=quit) button.pack(side=tk.LEFT) slogan = tk.Button(frame, text="Hello", command=write_slogan) slogan.pack(side=tk.LEFT) root.mainloop() The result of the previous example looks like this: Dynamical Content in a Label The following script shows an example, where a label is dynamically incremented by 1 until a stop button is pressed: import Tkinter as tk counter = 0 def counter_label(label): counter = 0 def count(): global counter counter += 1 label.config(text=str(counter)) label.after(1000, count) count() root = tk.Tk() root.title("Counting Seconds") label = tk.Label(root, fg="dark green") label.pack() counter_label(label) button = tk.Button(root, text='Stop', width=25, command=root.destroy) button.pack() root.mainloop() The result of the previous example looks like this: Previous Chapter: Message Widget Next Chapter: Variable Classes © 2011 - 2018, Bernd Klein, Bodenseo; Design by Denise Mitchinson adapted for python-course.eu by Bernd Klein