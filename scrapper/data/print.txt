Python2 Tutorial: Output with Print Python Course Python 2 Tutorial History and Philosophy of PythonWhy Python?Interactive ModeExecute a ScriptStructuring with IndentationData Types and VariablesOperatorsinput and raw_input via the keyboardConditional StatementsWhile LoopsFor LoopsFormatted outputOutput with PrintSequential Data TypesList ManipulationDictionariesSets and Frozen SetsShallow and Deep CopyFunctionsRecursion and Recursive FunctionsTests, DocTests, UnitTestsDecoratorsMemoization with DecoratorsPassing ArgumentsNamespacesGlobal vs. Local VariablesFile ManagementModular Programming and ModulesIntroduction in Regular ExpressionsRegular Expressions, AdvancedLambda Operator, Filter, Reduce and MapList ComprehensionGeneratorsException HandlingObject Oriented ProgrammingInheritance ExampleSlotsClasses and Class CreationRoad to MetaclassesMetaclassesMetaclass Example: Count Function CallsAbstract Classes Python In Greek mythology, Python is the name of a a huge serpent and sometimes a dragon. Python had been killed by the god Apollo at Delphi. Python was created out of the slime and mud left after the great flood. He was appointed by Gaia (Mother Earth) to guard the oracle of Delphi, known as Pytho. The programming language Python has not been created out of slime and mud but out of the programming language ABC. It has been devised by a Dutch programmer, named Guido van Rossum, in Amsterdam. Origins of Python Guido van Rossum wrote the following about the origins of Python in a foreword for the book "Programming Python" by Mark Lutz in 1996: "Over six years ago, in December 1989, I was looking for a "hobby" programming project that would keep me occupied during the week around Christmas. My office (a government-run research lab in Amsterdam) would be closed, but I had a home computer, and not much else on my hands. I decided to write an interpreter for the new scripting language I had been thinking about lately: a descendant of ABC that would appeal to Unix/C hackers. I chose Python as a working title for the project, being in a slightly irreverent mood (and a big fan of Monty Python's Flying Circus)." This website is free of annoying ads. We want to keep it like this. You can help with your donation: The need for donations Bernd Klein on Facebook Search this website: This topic in German / Deutsche Übersetzung: Ausgabe mit printPython 2.7This tutorial deals with Python Version 2.7This chapter from our course is available in a version for Python3: Output with PrintClassroom Training Courses This website contains a free and extensive online tutorial by Bernd Klein, using material from his classroom Python training courses. If you are interested in an instructor-led classroom training course, you may have a look at the Python classes by Bernd Klein at Bodenseo. © kabliczech - Fotolia.com Quote of the Day:"I think the special thing about Python is that it's a writers' commune. The writers are in charge. The writers decide what the material is." (Eric Idle ) If you have the choice working with Python 2 or Python 3, we recomend to switch to Python 3! You can read our Python Tutorial to see what the differences are. Data Protection Declaration Data Protection Declaration Previous Chapter: Formatted output Next Chapter: Sequential Data Types print Introduction There are hardly any computer programs and of course hardly any Python programs, which don't communicate with the outside world. Above all a program has to deliver its result in some way. One form of output goes to the standard output by using the print statement in Python. 1 >>> print "Hello User" Hello User >>> answer = 42 >>> print "The answer is: " + str(answer) The answer is: 42 >>> It's possible to put the arguments inside of parentheses: >>> print("Hallo") Hallo >>> print("Hallo","Python") ('Hallo', 'Python') >>> print "Hallo","Python" Hallo Python >>> We can see that the output behaviour changes as well. But more importantly: The output behaviour of version 2.x and version 3.x is different as well, as we can see in the following: $ python3 Python 3.2.3 (default, Apr 10 2013, 05:03:36) [GCC 4.7.2] on linux2 Type "help", "copyright", "credits" or "license" for more information. >>> print("Hello") Hello >>> print("Hello","Python") Hello Python >>> If you want the same output behaviour as in Python 3, you should use an import from the "future": Import from future: print_function Some Python programs contain the following line: from __future__ import print_function This is sometimes a source of ambiguity. It looks as if we are importing a function called "print_function". What we are doing instead is that we set a flag. If this flag is set, the interpreter makes the print function available. We strongly recommend that you use this import, so that your programs will be compatible to the version 3 of Python. So you can go on to our version 3 introduction into the print function of our Python tutorial. Anmerkungen: 1 Starting with version 3.0, Python doesn't provide a print statement anymore, there is only a print function. Previous Chapter: Formatted output Next Chapter: Sequential Data Types © 2011 - 2018, Bernd Klein, Bodenseo; Design by Denise Mitchinson adapted for python-course.eu by Bernd Klein