Python Tutorial: Keyboard Input Python Course Python 3 Tutorial The Origins of PythonStarting with Python: The Interactive ShellExecuting a ScriptIndentationData Types and VariablesOperatorsSequential Data Types: Lists and StringsList ManipulationsShallow and Deep CopyDictionariesSets and Frozen SetsAn Extensive Example Using Setsinput via the keyboardConditional StatementsLoops, while LoopFor LoopsDifference between interators und IterablesOutput with PrintFormatted output with string modulo and the format methodFunctionsRecursion and Recursive FunctionsParameter Passing in FunctionsNamespacesGlobal and Local VariablesDecoratorsMemoization with DecoratorsRead and Write FilesModular Programming and ModulesPackages in PythonRegular ExpressionsRegular Expressions, AdvancedLambda Operator, Filter, Reduce and MapList ComprehensionIterators and GeneratorsException HandlingTests, DocTests, UnitTestsObject Oriented ProgrammingClass and Instance AttributesProperties vs. getters and settersInheritanceMultiple InheritanceMagic Methods and Operator OverloadingOOP, Inheritance ExampleSlotsClasses and Class CreationRoad to MetaclassesMetaclassesMetaclass Use Case: Count Function CallsAbstract Classes This website is free of annoying ads. We want to keep it like this. You can help with your donation: The need for donations Bernd Klein on Facebook Search this website: This topic in German / Deutsche Übersetzung: Eingabe von der TastaturPython 3This is a tutorial in Python3, but this chapter of our course is available in a version for Python 2.x as well: Keyboard Input in Python 2.x Classroom Training Courses The goal of this website is to provide educational material, allowing you to learn Python on your own. Nevertheless, it is faster and more efficient to attend a "real" Python course in a classroom, with an experienced trainer. So why not attend one of the live Python courses in Strasbourg, Paris, Luxembourg, Amsterdam, Zürich / Zurich, Vienna / Wien, London, Berlin, Munich, Hamburg, Frankfurt, Stuttgart, or Lake Constance by Bernd Klein, the author of this tutorial? You can book on-site classes at your company or organization, e.g. in England, Switzerland, Austria, Germany, France, Belgium, the Netherlands, Luxembourg, Poland, UK, Italy and other locations in Europe and in Canada. We had courses in the following cities: Amsterdam (The Netherlands), Berlin (Germany), Bern (Switzerland), Basel (Switzerland), Zurich (Switzerland), Locarno (Switzerland), Den Haag (The Hague), Hamburg, Toronto (Canada), Edmonton (Canada), Munich (Germany) and many other cities. Contact us so we can define and find the best course curriculum to meet your needs, and schedule course sessions to be held at your location. Skilled Python Programmers You are looking for experienced Python developers or programmers? We can help you, please contact us. Quote of the Day:"I think the special thing about Python is that it's a writers' commune. The writers are in charge. The writers decide what the material is." (Eric Idle ) Data Protection Declaration Data Protection Declaration Previous Chapter: An Extensive Example Using Sets Next Chapter: Conditional Statements Input from Keyboard The input Function There are hardly any programs without any input. Input can come in various ways, for example, from a database, another computer, mouse clicks and movements or from the internet. Yet, in most cases the input stems from the keyboard. For this purpose, Python provides the function input(). input has an optional parameter, which is the prompt string. If the input function is called, the program flow will be stopped until the user has given an input and has ended the input with the return key. The text of the optional parameter, i.e. the prompt, will be printed on the screen. The input of the user will be returned as a string without any changes. If this raw input has to be transformed into another data type needed by the algorithm, we can use either a casting function or the eval function. Let's have a look at the following example: name = input("What's your name? ") print("Nice to meet you " + name + "!") age = input("Your age? ") print("So, you are already " + age + " years old, " + name + "!") We save the program as "input_test.py" and run it: $ python input_test.py What's your name? "Frank" Nice to meet you Frank! Your age? 42 So, you are already 42 years old, Frank! We will further experiment with the input function in the following interactive Python session: >>> cities_canada = input("Largest cities in Canada: ") Largest cities in Canada: ["Toronto", "Montreal", "Calgara", "Ottawa"] >>> print(cities_canada, type(cities_canada)) ["Toronto", "Montreal", "Calgara", "Ottawa"] <class 'str'> >>> >>> cities_canada = eval(input("Largest cities in Canada: ")) Largest cities in Canada: ["Toronto", "Montreal", "Calgara", "Ottawa"] >>> print(cities_canada, type(cities_canada)) ['Toronto', 'Montreal', 'Calgara', 'Ottawa'] <class 'list'> >>> >>> population = input("Population of Toronto? ") Population of Toronto? 2615069 >>> print(population, type(population)) 2615069 <class 'str'> >>> >>> population = int(input("Population of Toronto? ")) Population of Toronto? 2615069 >>> print(population, type(population)) 2615069 <class 'int'> >>> Differences to Python2 The usage of input or better the implicit evaluation of the input has often lead to serious programming mistakes in the earlier Python versions, i.e. 2.x Therefore, there the input function behaves like the raw_input function from Python2. The changes between the versions are illustrated in the following diagram: Previous Chapter: An Extensive Example Using Sets Next Chapter: Conditional Statements © 2011 - 2018, Bernd Klein, Bodenseo; Design by Denise Mitchinson adapted for python-course.eu by Bernd Klein