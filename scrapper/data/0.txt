Tutorials, Python Courses: Online and On Site Python Course Home New topics September 2018: Expectation Maximization and Gaussian Mixture Model July 2018: Two new chapters in our "Machine Learning" tutorial: Principal Component Analysis (PCA) and Linear Discriminant Analysis (LDA) July 2018: Linear Discriminant Analysis (LDA) June 2018: A new chapter for our Machine Learning tutorial: Boosting May 2018: Ready for some walks through forests? Read our new chapter: Random Forests October 2017: The beauty of polynomials in a Python class. February - April 2017: I started a new principle chapter on Machine Learning January - March 2017: We extended our chapters on Generators and Decorators March 2016: We added a chapter on the Levenshtein distance with both a recursive and an iterative implementation. We started in October 2015 with a complete tutorial on Numerical Python with introductions into Numpy, Matplotlib and Pandas We have started a new topic: Introduction and Tutorial in Graph theory with an implementation in Python. Something which has been missing in our tutorial: Formatting Strings or output Topics for advanced programmers, which are not covered by our tutorial and most other tutorials and books on Python: For learning more about some objects used or maintained by the interpreter and to functions that interact strongly with the Python interpreter:Introduction into the sys Module The interface to the operating system: Python and the Shell Only for Linux and Unix-like systems: Forks and Forking in Python Learn more about light weight processes: Introduction into threads in Python You can learn more about pipes than beer: Pipe, Pipes and "99 Bottles of Beer" In our chapter on Polynomials we demonstrate how easily and beautifully a class for the creation and manipulation of polynomial functions can be written in Python. Introduction and Tutorial on NumPy Matrix Arithmetic using NumPy and Python Some linear algebra with Python: Linear Combinations Introduction into Graph Theory and an implementation in Python: Graphs and Python Something from theoretical Computer Science: Implemenatation of a Finite State Machine (FSM) in Python For those interested in learning more about theoretical Computer Science: Definition and Implementation of a Turing machine in Python Introduction into Text Classification Text Classification using Python Recursive Function for Towers of Hanoi Mastermind / Bulls and Cows An introduction into using database interfaces in Python for SQL, MySQL and SQLite "And now for something completely different: 	Python Music Scores Using Lilypond Supported by: Python Training Courses We also like to thank www.mitchinson.net for providing the beautiful style sheet of this website. This website is free of annoying ads. We want to keep it like this. You can help with your donation: The need for donations Bernd Klein on Facebook Search this website: This topic in German / Deutsche Übersetzung: Python KursPython Courses This website contains a free and extensive online tutorial by Bernd Klein, well suited for self-learning. However, you can attend one of his Python courses in Paris, London, Toronto, Berlin, Frankfurt, Hamburg Munich or Lake Constance. If you want to learn Python fast and efficiently, you should consider a Python Training course at Bodenseo. You will find the right course for a beginner, intermediate or special seminars for advanced students like the Python & XML Training Course. All the Python seminars are available in German as well: Python-Kurse" Trainings in the US and Canada We offer training courses in Canada, i.e. Toronto and Ottawa, and the United States as well, you can have a look at our website Python-trainings.com to find the optimal class for you. Another Quote In my daily work, I work on very large, complex, distributed systems built out of many Python modules and packages. The focus is very similar to what you find, for example, in Java and, in general, in systems programming languages. (Guido van Rossum) Books on Python Python Books Data Protection Declaration Data Protection Declaration Introduction Although Python is an easy to learn and powerful programming language as it is known in common parlance, there is nevertheless need of a good introduction and tutorial on the Python language. Why yet another documentation and tutorial on Python? Aren't there enough websites with tutorials and books dealing with Python? Isn't there already everything said about this great programming language? These were the questions which came to our mind, when we started this website in June 2010. Yes, there are lots of tutorials and introductions, but we wanted to present a different approach, with other - more interesting - examples, better explanatory diagrams and so on. We had a lot to build on, above all the longstanding experience of Bernd Klein as a computer scientist and Python lecturer. Actually, this online course is based on the material from the classroom training courses of Bodenseo and his book on Python. Online Course You will find a complete introduction into Python in our online tutorial: In our first chapter you learn how to use the Python Interactive Interpreter (in Python3) You will see how easy it is to Execute a Script in Python. (in Python3) Python differs from other programming languages in many ways, but the most striking one is obviously it's "Structuring with Indentation" (in Python3) Variables are easier to be used than in many other programming languages but still there are some things to point out about "Data Types and Variables" (in Python3). Though operators(in Python3) are more or less the same as in other languages, we have to cover them anyway. Assignments can be quite tricky in Python. When will an object be copied and when will we just have a reference? What's the difference between a shallow and a deep copy(in Python3)? Conditional statements(in Python3) are straightforward in Python The same is true for the (in Python3) while loops, but there is this special "else" part. The for loops (in Python3) seem to be quite strange if you are used to C but easy if you know the bash shell The different ways to format data (Only in our Python 3 tutorial). In this chapter of our course we will have a closer look at sequential data types (in Python3) Dictionaries (in Python3) are one of the best things Python has to offer It's possible to use sets in Pythons programs as well: We cover both sets and frozensets (in Python3) Programming without functions (in Python3) would be like cooking without salt and spices. And a very special spice for your "cooking" can be a recursive function (in Python3). To understand functions properly, you need a thorough understanding of arguments and parameter passing (in Python3). In the next chapter of our seminar you will find all you have to know about namespaces (in Python3). Further Topics Global and local variables (in Python3) is a topic, which can be different for beginners. A language without the ability to read and write data files would be. So we will introduce you in our course to the essentials of file management (in Python3). A program, especially a large one, shouldn't be called a program, if it isn't written in a modular way (in Python3). Memoisation is a technique used in computing to speed up programs by giving functions memory. Decorators belong to the most beautiful concepts of Python, but unjustly many Python programmers are afraid of them. Text processing without regular expressions is only piecemeal. That's why we present in our tutorial a detailed introduction into regular expressions under Python (in Python3), continued by a chapter with advanced regular expressions (in Python3). Something very controversial in Python: Lambda Operator (in Python3) It's no secret that Guido van Rossum doesn't like lambda Operators. Here we give you an introduction into his preferred way, i.e. List Comprehension (in Python3) Exception Handling (in Python3) is a concept which is comparatively new, i.e. it hasn't been known in programming languages like C and Fortran but in C++ and Java. Generators are not only good for producing electricity, in Python generators (in Python3) are the most powerful tool to create iterators. Yes, Python is a fully object oriented language! So we offer a complete online course into the details of OOP. You suggest working through the following chapters in this order: General Introduction into Object Oriented Programming (OOP) Class and Instance Attributes Properties vs. Getters and Setters Inheritance Multiple Inheritance Magic Methods and Operator Overloading Our Next Training Courses Our next open Python classes with Bernd Klein, the author of this website: Amsterdam: Python Intensive Course 9 - 13 Jul 18 Python Course: Level II 3 - 7 Sep 18 Berlin: Python Intensive Course 11 - 15 Jun 18 Python Course: Level III 14 - 18 May 18 Python Text Processing and Computer Linguistics Course 15 - 19 Oct 18 Django Python Web Application Framework Course 18 - 22 Jun 18 Python Course for Data Analysis and Machine Learning 22 - 26 Oct 18 Hamburg: Python Intensive Course 12 - 16 Nov 18 Lake Constance / Zurich: Python Course: Level III 10 - 14 Dec 18 Python Course: Extending and Embedding 5 - 8 Nov 18 Python Intensive Course 9 - 13 Oct 17 19 Feb - 23 Mar 18 Python Text Processing and Computer Linguistics Course 15 - 19 Oct 18 Python Course for Data Analysis and Machine Learning 25 - 29 Jun 18 London: Python Intensive Course 9 - 13 Jul 18 Python Text Processing and Computer Linguistics Course 15 - 19 Oct 18 Luxembourg / Brussels: Django Python Web Application Framework Course 18 - 22 Jun 18 Python Intensive Course 19 Feb - 23 Mar 18 11 - 15 Jun 18 Python Course: Extending and Embedding 5 - 8 Nov 18 Milan / Mailand: Python Intensive Course 9 - 13 Jul 18 15 - 19 Oct 18 Munich / München: Python Intensive Course 11 - 15 Jun 18 Django Python Web Application Framework Course 18 - 22 Jun 18 Paris: Python Intensive Course 9 - 13 Jul 18 Python Text Processing and Computer Linguistics Course 15 - 19 Oct 18 Toronto: Python Intensive Course 9 - 13 Jul 18 15 - 19 Oct 18 Vienna / Wien: Python Course: Level II 3 - 7 Dec 18 Python Intensive Course 11 - 15 Jun 18 A Course is not a Course The question is ambiguous. First we want to explain, why this website is called "A Python Course". This website is seen all over the world and the expression "course" has varying meanings in the English speaking world. Both in the United States and Canada, a course is a teaching unit, which might last e.g. one academic term. The students normally get a grade or some academic credit for attending the course, usually after having passed an exam. In the United Kingdom and Australia the term "course" usually defines the complete programme of studies required to complete a major or a study path leading to a university degree. The word "unit" is used in the UK to refer to an academic course in the North American sense. On the one hand, we had the US and Canadian sense in mind: Our Python is one teaching unit and when you have successfully passed it, you are capable of programming in Python. On the other hand, we had the original meaning of the word in mind: A "course of instruction" as it might be used in book titles like "A Course in Programming Python". © 2011 - 2018, Bernd Klein, Bodenseo; Design by Denise Mitchinson adapted for python-course.eu by Bernd Klein