GUI Programming with Python: Radiobuttons in Tkinter Python Tkinter Course Tkinter Tutorial Saying Hello with LabelsMessage WidgetButtonsVariable ClassesRadiobuttonsCheckboxesEntry WidgetsCanvas WidgetsSlidersText WidgetDialogsLayout ManagementBulls and Cows / Mastermind in TKCreating MenusEvents and Binds Possible Problems If you are a beginner in Python, there might be some problems with understanding certain Python constructs in the main text, you can read our tutorial. Most probably you are familiar with functions, if not we suggest reading the chapter Functions This website is created by: Python Training Courses in Toronto, Canada On site trainings in Europe, Canada and the US. Buttons and Radios "You may not like the humor, but that is why every radio has an on-off button." (Mel Karmazin) "Biographies are but the clothes and buttons of the man. The biography of the man himself cannot be written." (Mark Twain) Of course, Keith Richard didn't mean Tk buttons, when he said that you can't make good music by just pushing some buttons: "Good music comes out of people playing together, knowing what they want to do and going for it. You have to sweat over it and bug it to death. You can't do it by pushing buttons and watching a TV screen." Just one more quotation by a famous musician: "America: It's like Britain, only with buttons." (Ringo Starr) Let's stick with the Beatles. George Harrison once said: "Gossip is the Devil's radio!" This website is free of annoying ads. We want to keep it like this. You can help with your donation: The need for donations Bernd Klein on Facebook Search this website: This topic in German / Deutsche Übersetzung: Tkinter Radiobuttons Classroom TrainingsTutorial This website contains a free and extensive online tutorial by Bernd Klein. You can attend one of his Python courses in Paris, London, Toronto, Berlin, Munich, Hamburg, Amsterdam, Den Haag (The Hague) or Lake Constance / Zurich. A fast and efficient approach to learn program Python and Tkinter consists in attending a classroom training course by Bernd Klein at Bodenseo. Quote of the Day: "Any program is only as good as it is useful." (Linus Torvalds) Graphical User Interface A graphical user interface (GUI) is a type of user interface that allows users to interact with electronic devices in a graphical way, i.e. with images, rather than text commands. Originally interactive user interfaces to computers were not graphical, they were text oriented and usually consisted of commands, which had to be remembered. The DOS operating system from Microsoft and the Bourne shell under Linux are examples of such user-computer interfaces. Data Protection Declaration Data Protection Declaration Previous Chapter: Variable Classes Next Chapter: Checkboxes Tkinter Radio Buttons A radio button, sometimes called option button, is a graphical user interface element of Tkinter, which allows the user to choose (exactly) one of a predefined set of options. Radio buttons can contain text or images. The button can only display text in a single font. A Python function or method can be associated with a radio button. This function or method will be called, if you press this radio button. Radio buttons are named after the physical buttons used on old radios to select wave bands or preset radio stations. If such a button was pressed, other buttons would pop out, leaving the pressed button the only pushed in button. Each group of Radio button widgets has to be associated with the same variable. Pushing a button changes the value of this variable to a predefined certain value. Simple Example With Radio Buttons import tkinter as tk root = tk.Tk() v = tk.IntVar() tk.Label(root, text="""Choose a programming language:""", justify = tk.LEFT, padx = 20).pack() tk.Radiobutton(root, text="Python", padx = 20, variable=v, value=1).pack(anchor=tk.W) tk.Radiobutton(root, text="Perl", padx = 20, variable=v, value=2).pack(anchor=tk.W) root.mainloop() The result of the previous example looks like this: Improving the Example In many cases, there are more than two radio buttons. It would be cumbersome, if we have to define and write down each button. The solution is shown in the following example. We have a list "languages", which contains the button texts and the corresponding values. We can use a for loop to create all the radio buttons. import tkinter as tk root = tk.Tk() v = tk.IntVar() v.set(1) # initializing the choice, i.e. Python languages = [ ("Python",1), ("Perl",2), ("Java",3), ("C++",4), ("C",5) ] def ShowChoice(): print(v.get()) tk.Label(root, text="""Choose your favourite programming language:""", justify = tk.LEFT, padx = 20).pack() for val, language in enumerate(languages): tk.Radiobutton(root, text=language, padx = 20, variable=v, command=ShowChoice, value=val).pack(anchor=tk.W) root.mainloop() The result of the previous example looks like this: Indicator Instead of having radio buttons with circular holes containing white space, we can have radio buttons with the complete text in a box. We can do this by setting the indicatoron (stands for "indicator on") option to 0, which means that there will be no separate radio button indicator. The default is 1. We exchange the definition of the Radiobutton in the previous example with the following one: tk.Radiobutton(root, text=language, indicatoron = 0, width = 20, padx = 20, variable=v, command=ShowChoice, value=val).pack(anchor=tk.W) We have added the option indicatoron and the option width. Previous Chapter: Variable Classes Next Chapter: Checkboxes © 2011 - 2018, Bernd Klein, Bodenseo; Design by Denise Mitchinson adapted for python-course.eu by Bernd Klein