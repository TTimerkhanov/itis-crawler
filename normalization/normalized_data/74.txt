numer
&
scientif
comput
with
python
:
legend
and
annot
numer
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
,
dtypenumer
oper
on
numpi
arrayschang
the
dimens
of
arrayspython
,
numpi
and
probabilityweight
choic
and
weight
samplescr
of
synthet
test
databoolean
mask
of
arraysmatrix
arithmeticread
and
write
ndarraysmatplotlib
introductionspin
and
tickslegend
and
annotationsmultipl
figur
and
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
with
nanbin
datapanda
tutori
continu
:
multi-level
indexingdata
visual
with
panda
and
pythonpython
,
date
and
timepython
,
panda
and
timeserieslinear
combin
legend
and
key
especi
,
if
the
data
depict
in
a
chart
contain
multipl
variabl
,
it
's
a
good
idea
to
includ
a
legend
.
A
legend
is
also
known
as
a
key
.
A
legend
list
the
variabl
appear
in
the
chart
and
often
add
some
addit
inform
or
exampl
.
thi
allow
the
data
from
each
variabl
to
be
identifi
in
the
chart
.
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
legenden
,
annotationen
und
anmerkungen
in
diagrammenclassroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
the
real
problem
is
not
whether
machin
think
but
whether
men
do
.
(
B.
F.
skinner
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
spine
and
tick
next
chapter
:
multipl
figur
and
axe
matplotlib
tutori
,
ad
legend
and
annot
ad
a
legend
If
we
look
at
the
line
graph
of
our
previou
exampl
,
we
realiz
,
that
we
have
to
look
into
our
code
to
understand
what
kind
of
function
is
depict
.
thi
inform
should
be
avail
in
the
diagram
for
conveni
.
legend
are
use
for
thi
purpos
.
the
word
stem
from
latin
and
meand
``
to
be
read
''
.
So
it
``
ha
to
be
read
''
to
understand
the
graph
.
befor
legend
have
been
use
in
mathemat
graph
,
they
have
been
use
in
map
.
legend
-
as
they
are
found
in
map
-
describ
the
pictori
languag
or
symbolog
of
the
map
.
legend
are
use
in
line
graph
to
explain
the
function
or
the
valu
underli
the
differ
line
of
the
graph
.
We
will
demonstr
in
the
follow
simpl
exampl
how
we
can
place
a
legend
on
a
graph
.
A
legend
contain
one
or
more
entri
.
everi
entri
consist
of
a
key
and
a
label
.
the
pyplot
function
legend
(
*arg
,
**kwarg
)
place
a
legend
on
the
axe
.
all
we
have
to
do
to
creat
a
legend
for
line
,
which
alreadi
exist
on
the
axe
,
is
to
simpli
call
the
function
``
legend
''
with
an
iter
of
string
,
one
for
each
legend
item
.
for
exampl
:
the
easiest
way
to
creat
a
line
graph
in
matplitlib
.
#
next
line
onli
need
if
work
with
``
ipython
notebook
''
:
%
matplotlib
inlin
import
numpi
as
np
import
matplotlib.pyplot
as
plt
ax
=
plt.gca
(
)
ax.plot
(
[
1
,
2
,
3
,
4
]
)
ax.legend
(
[
'
A
simpl
line
'
]
)
thi
get
us
the
follow
result
:
<
matplotlib.legend.legend
at
0x7fa12108bc18
>
If
we
add
a
label
to
the
plot
function
,
the
valu
will
be
use
as
the
label
in
the
legend
command
.
the
onli
argument
the
legend
function
will
still
need
is
the
locat
argument
``
loc
''
:
If
we
add
a
label
to
the
plot
function
,
the
valu
will
be
use
in
the
legend
command
:
import
numpi
as
np
import
matplotlib.pyplot
as
plt
x
=
np.linspac
(
0
,
25
,
1000
)
y1
=
np.sin
(
x
)
y2
=
np.co
(
x
)
plt.plot
(
x
,
y1
,
'-b
'
,
label='sin
'
)
plt.plot
(
x
,
y2
,
'-r
'
,
label='cosin
'
)
plt.legend
(
loc='upp
left
'
)
plt.ylim
(
-1.5
,
2.0
)
plt.show
(
)
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
0
,
25
,
1000
)
F1
=
np.sin
(
0.5
*
X
)
F2
=
3
*
np.co
(
0.8*x
)
plt.plot
(
X
,
F1
,
label=
''
$
sin
(
0.5
*
x
)
$
''
)
plt.plot
(
X
,
F2
,
label=
''
$
3
sin
(
x
)
$
''
)
plt.legend
(
loc='upp
right
'
)
thi
get
us
the
follow
output
:
<
matplotlib.legend.legend
at
0x7fa120f17898
>
In
mani
case
we
do
n't
know
what
the
result
may
look
like
befor
you
plot
it
.
It
could
be
for
exampl
,
that
the
legend
will
overshadow
an
import
part
of
the
line
.
If
you
do
n't
know
what
the
data
may
look
like
,
it
may
be
best
to
use
'best
'
as
the
argument
for
loc
.
matplotlib
will
automat
tri
to
find
the
best
possibl
locat
for
the
legend
:
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
0
,
25
,
1000
)
F1
=
np.sin
(
0.5
*
X
)
F2
=
3
*
np.co
(
0.8*x
)
plt.plot
(
X
,
F1
,
label=
''
$
sin
(
0.5
*
x
)
$
''
)
plt.plot
(
X
,
F2
,
label=
''
$
3
sin
(
x
)
$
''
)
plt.legend
(
loc='best
'
)
the
previou
code
return
the
follow
:
<
matplotlib.legend.legend
at
0x7fa120db1cf8
>
We
can
see
in
the
follow
two
exampl
,
that
loc='best
'
can
work
veri
well
:
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
2
*
np.pi
,
70
,
endpoint=tru
)
F1
=
np.sin
(
0.5*x
)
F2
=
-3
*
np.co
(
0.8*x
)
plt.xtick
(
[
-6.28
,
-3.14
,
3.14
,
6.28
]
,
[
r
'
$
-2\pi
$
'
,
r
'
$
-\pi
$
'
,
r
'
$
+\pi
$
'
,
r
'
$
+2\pi
$
'
]
)
plt.ytick
(
[
-3
,
-1
,
0
,
+1
,
3
]
)
plt.plot
(
X
,
F1
,
label=
''
$
sin
(
0.5x
)
$
''
)
plt.plot
(
X
,
F2
,
label=
''
$
-3
co
(
0.8x
)
$
''
)
plt.legend
(
loc='best
'
)
plt.show
(
)
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
2
*
np.pi
,
70
,
endpoint=tru
)
F1
=
np.sin
(
0.5*x
)
F2
=
3
*
np.co
(
0.8*x
)
plt.xtick
(
[
-6.28
,
-3.14
,
3.14
,
6.28
]
,
[
r
'
$
-2\pi
$
'
,
r
'
$
-\pi
$
'
,
r
'
$
+\pi
$
'
,
r
'
$
+2\pi
$
'
]
)
plt.ytick
(
[
-3
,
-1
,
0
,
+1
,
3
]
)
plt.plot
(
X
,
F1
,
label=
''
$
sin
(
0.5x
)
$
''
)
plt.plot
(
X
,
F2
,
label=
''
$
3
co
(
0.8x
)
$
''
)
plt.legend
(
loc='best
'
)
plt.show
(
)
annot
Of
cours
,
the
sinu
function
ha
``
bore
''
and
interest
valu
.
let
's
assum
that
you
are
especi
interest
in
the
valu
of
$
3
*
sin
(
3
*
pi/4
)
$
.
import
numpi
as
np
print
(
3
*
np.sin
(
3
*
np.pi/4
)
)
2.12132034356
the
numer
result
doe
n't
look
special
,
but
if
we
do
a
symbol
calcul
for
the
abov
express
we
get
$
\frac
{
3
}
{
\sqrt
{
2
}
}
$
.
now
we
want
to
label
thi
point
on
the
graph
.
We
can
do
thi
with
the
annot
function
.
We
want
to
annot
our
graph
with
thi
point
.
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
3
*
np.pi
,
70
,
endpoint=tru
)
F1
=
np.sin
(
X
)
F2
=
3
*
np.sin
(
X
)
ax
=
plt.gca
(
)
plt.xtick
(
[
-6.28
,
-3.14
,
3.14
,
6.28
]
,
[
r
'
$
-2\pi
$
'
,
r
'
$
-\pi
$
'
,
r
'
$
+\pi
$
'
,
r
'
$
+2\pi
$
'
]
)
plt.ytick
(
[
-3
,
-1
,
0
,
+1
,
3
]
)
x
=
3
*
np.pi
/
4
plt.scatter
(
[
x
,
]
,
[
3
*
np.sin
(
x
)
,
]
,
50
,
color
='blue
'
)
plt.annot
(
r
'
$
(
3\sin
(
\frac
{
3\pi
}
{
4
}
)
,
\frac
{
3
}
{
\sqrt
{
2
}
}
)
$
'
,
xy=
(
x
,
3
*
np.sin
(
x
)
)
,
xycoords='data
'
,
xytext=
(
+20
,
+20
)
,
textcoords='offset
point
'
,
fontsize=16
,
arrowprops=dict
(
facecolor='blu
'
)
)
plt.plot
(
X
,
F1
,
label=
''
$
sin
(
x
)
$
''
)
plt.plot
(
X
,
F2
,
label=
''
$
3
sin
(
x
)
$
''
)
plt.legend
(
loc='low
left
'
)
plt.show
(
)
We
have
to
provid
some
inform
to
the
paramet
of
annot
,
we
have
use
in
our
previou
exampl
.
paramet
mean
xy
coordin
of
the
arrow
tip
xytext
coordin
of
the
text
locat
the
xy
and
the
xytext
locat
of
our
exampl
are
in
data
coordin
.
there
are
other
coordin
system
avail
we
can
choos
.
the
coordin
system
of
xy
and
xytext
can
be
specifi
string
valu
assign
to
xycoord
and
textcoord
.
the
default
valu
is
'data
'
:
string
valu
coordin
system
figur
point
point
from
the
lower
left
corner
of
the
figur
figur
pixel
pixel
from
the
lower
left
corner
of
the
figur
figur
fraction
0,0
is
lower
left
of
figur
and
1,1
is
upper
right
axe
point
point
from
lower
left
corner
of
axe
axe
pixel
pixel
from
lower
left
corner
of
axe
axe
fraction
0,0
is
lower
left
of
axe
and
1,1
is
upper
right
data
use
the
axe
data
coordin
system
addit
,
we
can
also
specifi
the
properti
of
the
arrow
.
To
do
so
,
we
have
to
provid
a
dictionari
of
arrow
properti
to
the
paramet
arrowprop
:
arrowprop
key
descript
width
the
width
of
the
arrow
in
point
frac
the
fraction
of
the
arrow
length
occupi
by
the
head
headwidth
the
width
of
the
base
of
the
arrow
head
in
point
shrink
move
the
tip
and
base
some
percent
away
from
the
annot
point
and
text
**kwarg
ani
key
for
matplotlib.patches.polygon
,
e.g.
,
facecolor
In
the
follow
exampl
,
we
will
chang
the
appear
of
the
arrow
of
our
previou
exampl
:
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
3
*
np.pi
,
70
,
endpoint=tru
)
F1
=
np.sin
(
X
)
F2
=
3
*
np.sin
(
X
)
ax
=
plt.gca
(
)
plt.xtick
(
[
-6.28
,
-3.14
,
3.14
,
6.28
]
,
[
r
'
$
-2\pi
$
'
,
r
'
$
-\pi
$
'
,
r
'
$
+\pi
$
'
,
r
'
$
+2\pi
$
'
]
)
plt.ytick
(
[
-3
,
-1
,
0
,
+1
,
3
]
)
x
=
3
*
np.pi
/
4
plt.scatter
(
[
x
,
]
,
[
3
*
np.sin
(
x
)
,
]
,
50
,
color
='blue
'
)
plt.annot
(
r
'
$
(
3\sin
(
\frac
{
3\pi
}
{
4
}
)
,
\frac
{
3
}
{
\sqrt
{
2
}
}
)
$
'
,
xy=
(
x
,
3
*
np.sin
(
x
)
)
,
xycoords='data
'
,
xytext=
(
+20
,
+20
)
,
textcoords='offset
point
'
,
fontsize=16
,
arrowprops=dict
(
facecolor='blu
'
,
headwidth=15
,
frac=0.3
,
width=2
)
)
plt.plot
(
X
,
F1
,
label=
''
$
sin
(
x
)
$
''
)
plt.plot
(
X
,
F2
,
label=
''
$
3
sin
(
x
)
$
''
)
plt.legend
(
loc='low
left
'
)
plt.show
(
)
previou
chapter
:
spine
and
tick
next
chapter
:
multipl
figur
and
axe
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
