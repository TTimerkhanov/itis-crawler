python
tutori
:
A
tutori
python
cours
python
3
tutori
the
origin
of
pythonstart
with
python
:
the
interact
shellexecut
a
scriptindentationdata
type
and
variablesoperatorssequenti
data
type
:
list
and
stringslist
manipulationsshallow
and
deep
copydictionariesset
and
frozen
setsan
extens
exampl
use
setsinput
via
the
keyboardcondit
statementsloop
,
while
loopfor
loopsdiffer
between
inter
und
iterablesoutput
with
printformat
output
with
string
modulo
and
the
format
methodfunctionsrecurs
and
recurs
functionsparamet
pass
in
functionsnamespacesglob
and
local
variablesdecoratorsmemo
with
decoratorsread
and
write
filesmodular
program
and
modulespackag
in
pythonregular
expressionsregular
express
,
advancedlambda
oper
,
filter
,
reduc
and
maplist
comprehensioniter
and
generatorsexcept
handlingtest
,
doctest
,
unittestsobject
orient
programmingclass
and
instanc
attributesproperti
vs.
getter
and
settersinheritancemultipl
inheritancemag
method
and
oper
overloadingoop
,
inherit
exampleslotsclass
and
class
creationroad
to
metaclassesmetaclassesmetaclass
use
case
:
count
function
callsabstract
class
python
In
greek
mytholog
,
python
is
the
name
of
a
a
huge
serpent
and
sometim
a
dragon
.
python
had
been
kill
by
the
god
apollo
at
delphi
.
python
wa
creat
out
of
the
slime
and
mud
left
after
the
great
flood
.
He
wa
appoint
by
gaia
(
mother
earth
)
to
guard
the
oracl
of
delphi
,
known
as
pytho
.
the
program
languag
python
ha
not
been
creat
out
of
slime
and
mud
but
out
of
the
program
languag
abc
.
It
ha
been
devis
by
a
dutch
programm
,
name
guido
van
rossum
,
in
amsterdam
.
origin
of
python
guido
van
rossum
wrote
the
follow
about
the
origin
of
python
in
a
foreword
for
the
book
``
program
python
''
by
mark
lutz
in
1996
:
``
over
six
year
ago
,
in
decemb
1989
,
I
wa
look
for
a
``
hobbi
''
program
project
that
would
keep
me
occupi
dure
the
week
around
christma
.
My
offic
(
a
government-run
research
lab
in
amsterdam
)
would
be
close
,
but
I
had
a
home
comput
,
and
not
much
els
on
my
hand
.
I
decid
to
write
an
interpret
for
the
new
script
languag
I
had
been
think
about
late
:
a
descend
of
abc
that
would
appeal
to
unix/c
hacker
.
I
chose
python
as
a
work
titl
for
the
project
,
be
in
a
slightli
irrever
mood
(
and
a
big
fan
of
monti
python
's
fli
circu
)
.
''
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
classroom
train
cours
the
goal
of
thi
websit
is
to
provid
educ
materi
,
allow
you
to
learn
python
on
your
own
.
nevertheless
,
it
is
faster
and
more
effici
to
attend
a
``
real
''
python
cours
in
a
classroom
,
with
an
experienc
trainer
.
So
whi
not
attend
one
of
the
live
python
cours
in
strasbourg
,
pari
,
luxembourg
,
amsterdam
,
zürich
/
zurich
,
vienna
/
wien
,
london
,
berlin
,
munich
,
hamburg
,
frankfurt
or
lake
constanc
by
bernd
klein
,
the
author
of
thi
tutori
?
onsit
train
cours
let
us
come
to
your
compani
,
organ
or
institut
and
train
your
employe
,
as
we
've
done
it
mani
time
in
amsterdam
(
the
netherland
)
,
berlin
(
germani
)
,
bern
(
switzerland
)
,
basel
(
switzerland
)
,
zurich
(
switzerland
)
,
locarno
(
switzerland
)
,
den
haag
(
the
hagu
)
,
hamburg
(
germani
)
,
frankfurt
(
germani
)
,
toronto
(
canada
)
,
edmonton
(
canada
)
,
munich
(
germani
)
and
mani
other
citi
.
We
do
train
cours
in
england
,
switzerland
,
liechtenstein
,
austria
,
germani
,
franc
,
belgium
,
the
netherland
,
luxembourg
,
poland
,
UK
,
itali
and
other
locat
in
europ
and
in
canada
.
thi
way
you
will
get
a
perfect
train
up
to
your
need
and
it
will
be
extrem
cost
effici
as
well
.
contact
us
so
we
can
defin
and
find
the
best
cours
curriculum
to
meet
your
need
,
and
schedul
cours
session
to
be
held
at
your
locat
.
skill
python
programm
you
are
look
for
experienc
python
develop
or
programm
?
We
can
help
you
,
pleas
contact
us
.
quot
of
the
day
:
''
If
you
want
to
accomplish
someth
in
the
world
,
ideal
is
not
enough
-
you
need
to
choos
a
method
that
work
to
achiev
the
goal
.
''
(
richard
stallmann
)
data
protect
declar
data
protect
declar
previou
chapter
:
for
loop
next
chapter
:
output
with
print
iter
and
iter
the
python
forum
and
other
question-and-answ
websit
like
quora
and
stackoverflow
are
full
of
question
concern
'iter
'
and
'iter
'
.
some
want
to
know
how
they
are
defin
and
other
want
to
know
if
there
is
an
easi
way
to
check
,
if
an
object
is
an
iter
or
an
iter
.
We
will
provid
further
down
a
function
for
thi
purpos
.
We
have
seen
that
we
can
loop
or
iter
over
variou
python
object
like
list
,
tupl
and
string
for
exampl
.
for
citi
in
[
``
berlin
''
,
``
vienna
''
,
``
zurich
''
]
:
print
(
citi
)
for
citi
in
(
``
python
''
,
``
perl
''
,
``
rubi
''
)
:
print
(
citi
)
for
char
in
``
iter
is
easi
''
:
print
(
char
)
berlin
vienna
zurich
python
perl
rubi
I
t
e
r
a
t
i
o
n
i
s
e
a
s
y
thi
form
of
loop
can
be
seen
as
iter
.
iter
is
not
restrict
to
explicit
for
loop
.
If
you
call
the
function
sum
,
-
e.g
.
on
a
list
of
integ
valu
,
-
you
do
iter
as
well
.
So
what
is
the
differ
between
an
iter
and
an
iter
?
In
one
perspect
they
are
the
same
:
you
can
iter
with
a
for
loop
over
iter
and
iter
.
everi
iter
is
also
an
iter
,
but
not
everi
iter
is
an
iter
.
e.g
.
a
list
is
iter
but
a
list
is
not
an
iter
!
An
iter
can
be
creat
from
an
iter
by
use
the
function
'iter
'
.
To
make
thi
possibl
the
class
of
an
object
need
either
a
method
'__iter__
'
,
which
return
an
iter
,
or
a
'__getitem__
'
method
with
sequenti
index
start
with
0
.
iter
are
object
with
a
'__next__
'
method
,
which
will
be
use
when
the
function
'next
'
is
call
.
So
what
is
go
on
behind
the
scene
,
when
a
for
loop
is
execut
?
the
for
statement
call
iter
(
)
on
the
object
(
which
should
be
a
so-cal
contain
object
)
,
which
it
is
suppos
to
loop
over
.
If
thi
call
is
success
,
the
iter
call
will
return
return
an
iter
object
that
defin
the
method
__next__
(
)
which
access
element
of
the
object
one
at
a
time
.
the
__next__
(
)
method
will
rais
a
stopiter
except
,
if
there
are
no
further
element
avail
.
the
for
loop
whill
termin
as
soon
as
it
catch
a
stopiter
except
.
you
can
call
the
__next__
(
)
method
use
the
next
(
)
built-in
function
.
thi
is
how
it
work
:
citi
=
[
``
berlin
''
,
``
vienna
''
,
``
zurich
''
]
iterator_obj
=
iter
(
citi
)
print
(
iterator_obj
)
print
(
next
(
iterator_obj
)
)
print
(
next
(
iterator_obj
)
)
print
(
next
(
iterator_obj
)
)
<
list_iter
object
at
0x7f08a055e0b8
>
berlin
vienna
zurich
If
we
call
'next
(
iterator_obj
)
'
one
more
time
,
it
would
return
'stopiter
'
the
follow
function
'iter
'
will
return
true
,
if
the
object
'obj
'
is
an
iter
and
fals
otherwis
.
def
iter
(
obj
)
:
tri
:
iter
(
obj
)
return
true
except
typeerror
:
return
fals
for
element
in
[
34
,
[
4
,
5
]
,
(
4
,
5
)
,
{
``
a
''
:4
}
,
``
dfsdf
''
,
4.5
]
:
print
(
element
,
``
iter
:
``
,
iter
(
element
)
)
34
iter
:
fals
[
4
,
5
]
iter
:
true
(
4
,
5
)
iter
:
true
{
'
a
'
:
4
}
iter
:
true
dfsdf
iter
:
true
4.5
iter
:
fals
We
have
describ
how
an
iter
work
.
So
if
you
want
to
add
an
iter
behavior
to
your
class
,
you
have
to
add
the
__iter__
and
the
__next__
method
to
your
class
.
the
__iter__
method
return
an
iter
object
.
If
the
class
contain
a
__next__
,
it
is
enough
for
the
__iter__
method
to
return
self
,
i.e
.
a
refer
to
itself
:
class
revers
:
``
''
''
creat
iter
for
loop
over
a
sequenc
backwards.
``
''
''
def
__init__
(
self
,
data
)
:
self.data
=
data
self.index
=
len
(
data
)
def
__iter__
(
self
)
:
return
self
def
__next__
(
self
)
:
if
self.index
==
0
:
rais
stopiter
self.index
=
self.index
-
1
return
self.data
[
self.index
]
lst
=
[
34
,
978
,
42
]
lst_backward
=
revers
(
lst
)
for
el
in
lst_backward
:
print
(
el
)
42
978
34
previou
chapter
:
for
loop
next
chapter
:
output
with
print
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
