python
tutori
:
output
with
print
python
cours
python
3
tutori
the
origin
of
pythonstart
with
python
:
the
interact
shellexecut
a
scriptindentationdata
type
and
variablesoperatorssequenti
data
type
:
list
and
stringslist
manipulationsshallow
and
deep
copydictionariesset
and
frozen
setsan
extens
exampl
use
setsinput
via
the
keyboardcondit
statementsloop
,
while
loopfor
loopsdiffer
between
inter
und
iterablesoutput
with
printformat
output
with
string
modulo
and
the
format
methodfunctionsrecurs
and
recurs
functionsparamet
pass
in
functionsnamespacesglob
and
local
variablesdecoratorsmemo
with
decoratorsread
and
write
filesmodular
program
and
modulespackag
in
pythonregular
expressionsregular
express
,
advancedlambda
oper
,
filter
,
reduc
and
maplist
comprehensioniter
and
generatorsexcept
handlingtest
,
doctest
,
unittestsobject
orient
programmingclass
and
instanc
attributesproperti
vs.
getter
and
settersinheritancemultipl
inheritancemag
method
and
oper
overloadingoop
,
inherit
exampleslotsclass
and
class
creationroad
to
metaclassesmetaclassesmetaclass
use
case
:
count
function
callsabstract
class
python
In
greek
mytholog
,
python
is
the
name
of
a
a
huge
serpent
and
sometim
a
dragon
.
python
had
been
kill
by
the
god
apollo
at
delphi
.
python
wa
creat
out
of
the
slime
and
mud
left
after
the
great
flood
.
He
wa
appoint
by
gaia
(
mother
earth
)
to
guard
the
oracl
of
delphi
,
known
as
pytho
.
the
program
languag
python
ha
not
been
creat
out
of
slime
and
mud
but
out
of
the
program
languag
abc
.
It
ha
been
devis
by
a
dutch
programm
,
name
guido
van
rossum
,
in
amsterdam
.
origin
of
python
guido
van
rossum
wrote
the
follow
about
the
origin
of
python
in
a
foreword
for
the
book
``
program
python
''
by
mark
lutz
in
1996
:
``
over
six
year
ago
,
in
decemb
1989
,
I
wa
look
for
a
``
hobbi
''
program
project
that
would
keep
me
occupi
dure
the
week
around
christma
.
My
offic
(
a
government-run
research
lab
in
amsterdam
)
would
be
close
,
but
I
had
a
home
comput
,
and
not
much
els
on
my
hand
.
I
decid
to
write
an
interpret
for
the
new
script
languag
I
had
been
think
about
late
:
a
descend
of
abc
that
would
appeal
to
unix/c
hacker
.
I
chose
python
as
a
work
titl
for
the
project
,
be
in
a
slightli
irrever
mood
(
and
a
big
fan
of
monti
python
's
fli
circu
)
.
''
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
ausgab
mit
printpython
3thi
is
a
tutori
in
python3
,
but
thi
chapter
of
our
cours
is
avail
in
a
version
for
python
2.x
as
well
:
output
with
print
in
python
2.x
train
class
thi
websit
aim
at
provid
you
with
educ
materi
suitabl
for
self-learn
.
nevertheless
,
it
is
faster
and
more
effici
to
attend
a
``
real
''
python
cours
in
a
classroom
,
with
an
experienc
trainer
.
So
whi
not
attend
one
of
the
live
python
cours
in
strasbourg
,
pari
,
london
,
berlin
,
munich
,
hamburg
,
frankfurt
,
or
lake
constanc
by
bernd
klein
,
the
author
of
thi
tutori
?
in-hous
train
cours
If
you
like
it
,
we
will
come
to
your
compani
or
institut
and
provid
a
special
train
for
your
employe
,
as
we
've
done
it
mani
time
in
amsterdam
(
the
netherland
)
,
berlin
(
germani
)
,
bern
(
switzerland
)
,
basel
(
switzerland
)
,
zurich
(
switzerland
)
,
frankfurt
(
germani
)
,
locarno
(
switzerland
)
,
den
haag
(
the
hagu
)
,
hamburg
,
munich
(
germani
)
,
bucharest
(
romania
)
,
toronto
(
canada
)
,
edmonton
(
canada
)
,
and
mani
other
citi
.
We
do
train
cours
in
england
,
switzerland
,
liechtenstein
,
austria
,
germani
,
franc
,
belgium
,
the
netherland
,
luxembourg
,
romania
,
UK
,
itali
,
spain
and
other
locat
in
europ
and
in
canada
.
thi
way
you
will
get
a
perfect
train
up
to
your
need
and
it
will
be
extrem
cost
effici
as
well
.
contact
us
so
we
can
find
the
ideal
cours
to
meet
your
need
.
skill
python
programm
you
are
look
for
experienc
python
develop
or
programm
?
We
can
help
you
,
pleas
contact
us
.
quot
of
the
day
:
''
comput
scienc
is
no
more
about
comput
than
astronomi
is
about
telescop
.
''
(
edsger
dijkstra
)
data
protect
declar
data
protect
declar
previou
chapter
:
differ
between
inter
und
iter
next
chapter
:
format
output
with
string
modulo
and
the
format
method
print
introduct
In
principl
,
everi
comput
program
ha
to
commun
with
the
environ
or
the
``
outsid
world
''
.
To
thi
purpos
nearli
everi
program
languag
ha
special
i/o
function
,
i.e
.
input/output
.
thi
ensur
the
interact
or
commun
with
other
compon
e.g
.
a
databas
or
a
user
.
input
often
come
-
as
we
have
alreadi
seen
-
from
the
keyboard
and
the
correspond
python
command
or
better
the
correspond
python
function
for
read
from
the
standard
input
is
input
(
)
.
We
have
also
seen
in
previou
exampl
of
our
tutori
that
we
can
write
into
the
standard
output
by
use
print
.
In
thi
chapter
of
our
tutori
we
want
to
have
a
detail
look
at
the
print
function
.
As
some
might
have
skip
over
it
,
we
want
to
emphas
that
we
wrote
``
print
function
''
and
not
``
print
statement
''
.
you
can
easili
find
out
how
crucial
thi
differ
is
,
if
you
take
an
arbitrari
python
program
written
in
version
2.x
and
if
you
tri
to
let
it
run
with
a
python3
interpret
.
In
most
case
you
will
receiv
error
messag
.
one
of
the
most
frequent
occur
error
will
be
relat
to
print
,
becaus
most
program
contain
print
.
We
can
gener
the
most
typic
error
in
the
interact
python
shell
:
$
python3
python
3.2.3
(
default
,
apr
10
2013
,
05:03:36
)
[
gcc
4.7.2
]
on
linux2
type
``
help
''
,
``
copyright
''
,
``
credit
''
or
``
licens
''
for
more
inform
.
>
>
>
print
42
file
``
''
,
line
1
print
42
^
syntaxerror
:
invalid
syntax
>
>
>
thi
is
a
familiar
error
messag
for
most
of
us
:
We
have
forgotten
the
parenthes
.
``
print
''
is
-
as
we
have
alreadi
mention
-
a
function
in
version
3.x
.
like
ani
other
function
print
expect
it
argument
to
be
surround
by
parenthes
.
So
parenthesi
are
an
easi
remedi
for
thi
error
:
>
>
>
print
(
42
)
42
>
>
>
but
thi
is
not
the
onli
differ
to
the
old
print
.
the
output
behaviour
ha
chang
as
well
:
print
function
the
argument
of
the
print
function
are
the
follow
one
:
print
(
value1
,
...
,
sep=
'
'
,
end='\n
'
,
file=sys.stdout
,
flush=fals
)
the
print
function
can
print
an
arbitrari
number
of
valu
(
``
value1
,
value2
,
...
''
)
,
which
are
separ
by
comma
.
these
valu
are
separ
by
blank
.
In
the
follow
exampl
we
can
see
two
print
call
.
We
are
print
two
valu
in
both
case
,
i.e
.
a
string
and
a
float
number
:
>
>
>
print
(
``
a
=
``
,
a
)
a
=
3.564
>
>
>
print
(
``
a
=
\n
''
,
a
)
a
=
3.564
>
>
>
We
can
learn
from
the
second
print
of
the
exampl
that
a
blank
between
two
valu
,
i.e
.
``
a
=
\textbackslash
n
''
and
``
3.564
''
,
is
alway
print
,
even
if
the
output
is
continu
in
the
follow
line
.
thi
is
differ
to
python
2
,
as
there
will
be
no
blank
print
,
if
a
new
line
ha
been
start
.
It
's
possibl
to
redefin
the
seper
between
valu
by
assign
an
arbitrari
string
to
the
keyword
paramet
``
sep
''
,
i.e
.
an
empti
string
or
a
smiley
:
>
>
>
print
(
``
a
''
,
''
b
''
)
a
b
>
>
>
print
(
``
a
''
,
''
b
''
,
sep=
''
''
)
ab
>
>
>
print
(
192,168,178,42
,
sep=
''
.
''
)
192.168.178.42
>
>
>
print
(
``
a
''
,
''
b
''
,
sep=
''
:
-
)
''
)
a
:
-
)
b
>
>
>
A
print
call
is
end
by
a
newlin
,
as
we
can
see
in
the
follow
usag
:
>
>
>
for
i
in
rang
(
4
)
:
...
print
(
i
)
...
0
1
2
3
>
>
>
To
chang
thi
behaviour
,
we
can
assign
an
arbitrari
string
to
the
keyword
paramet
``
end
''
.
thi
string
will
be
use
for
end
the
output
of
the
valu
of
a
print
call
:
>
>
>
for
i
in
rang
(
4
)
:
...
print
(
i
,
end=
''
``
)
...
0
1
2
3
>
>
>
>
>
>
for
i
in
rang
(
4
)
:
...
print
(
i
,
end=
''
:
-
)
``
)
...
0
:
-
)
1
:
-
)
2
:
-
)
3
:
-
)
>
>
>
the
output
of
the
print
function
is
send
to
the
standard
output
stream
(
sys.stdout
)
by
default
.
By
redefin
the
keyword
paramet
``
file
''
we
can
send
the
output
into
a
differ
stream
e.g
.
sys.stderr
or
a
file
:
>
>
>
fh
=
open
(
``
data.txt
''
,
''
w
''
)
>
>
>
print
(
``
42
is
the
answer
,
but
what
is
the
question
?
``
,
file=fh
)
>
>
>
fh.close
(
)
>
>
>
We
can
see
that
we
do
n't
get
ani
output
in
the
interact
shell
.
the
output
is
sent
to
the
file
``
data.txt
''
.
It
's
also
possibl
to
redirect
the
output
to
the
standard
error
channel
thi
way
:
>
>
>
import
sy
>
>
>
#
output
into
sys.stderr
:
...
>
>
>
print
(
``
error
:
42
''
,
file=sys.stderr
)
error
:
42
previou
chapter
:
differ
between
inter
und
iter
next
chapter
:
format
output
with
string
modulo
and
the
format
method
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
