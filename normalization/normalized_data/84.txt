numer
scientif
comput
python
weight
choic
sampl
numer
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
dtypenumer
oper
numpi
arrayschang
dimens
arrayspython
numpi
probabilityweight
choic
weight
samplescr
synthet
test
databoolean
mask
arraysmatrix
arithmeticread
write
ndarraysmatplotlib
introductionspin
tickslegend
annotationsmultipl
figur
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
nanbin
datapanda
tutori
continu
multilevel
indexingdata
visual
panda
pythonpython
date
timepython
panda
timeserieslinear
combin
probabl
probabl
measur
likelihood
event
occur
also
say
probabl
event
measur
chanc
event
occur
result
experi
probabl
event
occur
usual
express
number
sometim
percentag
valu
also
use
mean
event
occur
stand
certainti
event
alway
occur
exampl
find
nearli
everi
textbook
probabl
toss
fair
unbias
coin
probabl
head
probabl
tail
mean
probabl
head
tail
probabl
event
number
way
event
occur
divid
total
number
possibl
outcom
websit
creat
python
train
cours
toronto
canada
site
train
europ
canada
us
websit
free
annoy
ad
want
keep
like
help
donat
need
donat
bernd
klein
facebook
search
websit
classroom
train
cours
websit
contain
free
extens
onlin
tutori
bernd
klein
use
materi
classroom
python
train
cours
interest
instructorl
classroom
train
cours
may
look
python
class
bernd
klein
bodenseo
kabliczech
fotoliacom
quot
daydont
good
idea
arent
will
respons
alan
perli
choic
work
python
python
recomend
switch
python
read
python
tutori
see
differ
data
protect
declar
data
protect
declar
previou
chapter
python
numpi
probabl
next
chapter
creation
synthet
test
data
weight
probabl
introduct
previou
chapter
look
follow
exampl
random
import
choic
printchoiceabcdefghij
profess
scientist
philosoph
engin
priest
printchoiceprofess
printchoicebeginn
intermedi
advanc
philosoph
beginn
choic
return
object
sequenc
chanc
element
sequenc
chosen
evenli
distribut
chanc
get
scientist
return
valu
call
choiceprofess
touch
realiti
sure
scientist
engin
world
priest
philosoph
like
load
die
need
weight
choic
devis
function
weightedchoic
return
random
element
sequenc
like
randomchoic
element
sequenc
weight
random
intervalsbefor
start
design
weight
version
choic
defin
function
findintervalx
partit
need
function
weightedchoic
findinterv
function
take
two
argument
numer
valu
x
list
tupl
numer
valu
pn
function
return
pi
x
return
x
less
x
greater
equal
pn
def
findintervalx
partit
findinterv
partit
sequenc
numer
valu
x
numer
valu
return
valu
index
appli
partitioni
x
index
exist
otherwis
lenpartit
x
partitioni
return
return
x
printfindintervalx
end
weight
random
choic
defin
weight
choic
function
let
assum
three
weight
eg
build
cumul
sum
weight
npcumsumweight
import
numpi
np
weight
cumweight
listnpcumsumweight
printcumweight
creat
random
number
x
use
randomrandom
probabl
x
lie
within
interv
equal
probabl
x
lie
within
interv
equal
final
probabl
x
lie
within
interv
abl
understand
basic
idea
weightedchoic
oper
import
numpi
np
import
random
def
weightedchoicesequ
weight
securetru
weightedchoic
select
random
element
sequenc
accord
list
weight
secur
crypto
randomsystemrandom
x
cryptorandom
els
x
nprandomrandom
cumweight
listnpcumsumweight
index
findintervalx
cumweight
return
sequenceindex
exampl
use
function
weightedchoic
follow
task
suppos
load
die
probabl
outcom
possibl
equal
like
ie
p
calcul
p
x
p
mean
p
simul
die
weightedchoic
function
call
weightedchoic
facesofdi
weight
list
call
correspond
throw
load
die
show
throw
die
larg
number
time
exampl
time
get
roughli
probabl
valu
weight
collect
import
counter
facesofdi
weight
outcom
n
rangen
outcomesappendweightedchoicefacesofdi
weight
c
counteroutcom
key
c
ckey
ckey
n
printsortedcvalu
far
valu
partit
list
defin
subpartit
expect
valu
x
valu
x
less
greater
equal
pn
return
could
also
defin
first
subinterv
interv
could
return
case
last
subinterv
could
correspondingli
pn
infin
extend
function
findinterv
differ
way
interv
map
distinguish
two
case
introduc
addit
paramet
endpoint
true
correspond
first
approach
fals
previous
describ
infin
case
word
set
endpoint
fals
get
follow
behaviour
return
x
smaller
pi
lenpartit
return
x
larger
equal
demonstr
follow
diagram
new
function
look
like
def
findintervalx
partit
endpointstru
findinterv
endpoint
true
index
appli
partitioni
x
index
exist
otherwis
endpoint
fals
smallest
index
appli
x
partitioni
index
exist
set
lenpartit
lenpartit
x
partitioni
return
endpoint
els
return
endpoint
els
lenpartit
printendpoint
includ
x
printfindintervalx
end
printnendpoint
includ
x
printfindintervalx
endpointsfals
end
endpoint
includ
endpoint
includ
weight
random
choic
numpyto
produc
weight
choic
array
like
object
also
use
choic
function
numpyrandom
packag
way
necess
creat
custommad
function
like
previou
chapter
numpyrandom
import
choic
profess
scientist
philosoph
engin
priest
programm
probabl
choiceprofess
pprobabl
code
return
follow
engin
let
experi
choic
collect
import
counter
c
counter
profess
choiceprofess
pprobabl
cprofess
printc
sumcvalu
el
c
cel
printc
counterprogramm
engin
scientist
priest
philosoph
counterprogramm
engin
scientist
priest
philosoph
still
one
benifit
custommad
approach
weight
choic
use
cryptographicsecur
method
systemrandom
class
wherea
numpi
choic
determinist
therefor
secur
weight
samplein
previou
chapter
random
number
probabl
introduc
method
randomli
extract
popul
sampl
group
object
lik
list
tupl
everi
object
likelikhood
drawn
ie
part
sampl
real
life
situat
cours
situat
everi
object
differ
probabl
defin
function
weight
sampl
follow
make
use
previous
defin
weightedchoic
function
def
weightedsamplepopul
weight
k
function
draw
random
sampl
length
k
sequenc
popul
accord
list
weight
sampl
set
popul
listpopul
weight
listweight
lensampl
k
choic
weightedchoicepopul
weight
sampleaddchoic
index
populationindexchoic
weightspopindex
populationremovechoic
weight
x
sumweight
x
weight
return
listsampl
def
weightedsamplealternativepopul
weight
k
altern
way
previou
implement
function
draw
random
sampl
length
k
sequenc
popul
accord
list
weight
sampl
set
popul
listpopul
weight
listweight
lensampl
k
choic
weightedchoicepopul
weight
choic
sampl
sampleaddchoic
return
listsampl
exampl
let
assum
eight
candi
colour
red
green
blue
yellow
black
white
pink
orang
friend
peter
weight
prefer
the
colour
allow
take
candi
ball
red
green
blue
yellow
black
white
pink
orang
weight
printweightedsamplebal
weight
pink
black
white
pink
green
orang
pink
green
blue
yellow
red
black
yellow
green
black
orang
blue
white
pink
black
orang
green
blue
orang
yellow
black
orang
pink
orang
white
let
approxim
likelihood
orang
candi
includ
sampl
n
orangecount
orangecounteraltern
rangen
orang
weightedsamplebal
weight
orangecount
orang
weightedsamplealternativebal
weight
orangecounteraltern
printorangecount
n
printorangecounteraltern
n
cartesian
choiceth
function
cartesianchoic
name
cartesian
product
set
theori
cartesian
productth
cartesian
product
oper
return
set
multipl
set
result
set
cartesian
product
call
product
set
simpli
product
two
set
b
cartesian
product
b
set
order
pair
b
b
b
x
b
b
b
b
n
set
build
cartesian
product
correspondingli
x
x
x
cartesian
product
n
set
sometim
call
nfold
cartesian
product
cartesian
choic
cartesianchoicew
write
function
cartesianchoic
take
arbitrari
number
iter
argument
return
list
consist
random
choic
iter
respect
order
mathemat
see
result
function
cartesianchoic
element
cartesian
product
iter
pass
argument
import
random
def
cartesianchoiceiter
list
random
choic
iter
iter
creat
respect
order
result
list
seen
element
cartesian
product
iter
re
popul
iter
resappendrandomchoicepopul
return
re
cartesianchoiceth
red
green
blue
yellow
grey
car
hous
fish
light
smell
dream
blink
python
code
return
follow
red
light
smell
defin
weight
version
previous
defin
function
import
random
def
weightedcartesianchoiceiter
list
weight
random
choic
iter
iter
creat
respect
order
re
popul
weight
iter
lst
weightedchoicepopul
weight
resappendlst
return
re
determin
everi
colour
red
green
blue
yellow
grey
noun
water
eleph
fish
light
program
languag
happi
chocol
wisdom
challeng
air
verbphras
smell
dream
think
made
printit
may
may
true
re
weightedcartesianchoicedetermin
colour
noun
verbphras
print
joinr
may
may
true
green
eleph
dream
wisdom
grey
eleph
smell
happi
green
water
think
happi
blue
program
languag
smell
chocol
everi
yellow
fish
dream
happi
yellow
water
dream
happi
yellow
program
languag
think
chocol
yellow
water
dream
happi
yellow
water
dream
happi
green
program
languag
dream
happi
check
follow
version
probabl
right
import
random
def
weightedcartesianchoiceiter
list
weight
random
choic
iter
iter
creat
respect
order
re
popul
weight
iter
lst
weightedchoicepopul
weight
resappendlst
return
re
determin
everi
colour
red
green
blue
yellow
grey
noun
water
eleph
fish
light
program
languag
happi
chocol
wisdom
challeng
air
verbphras
smell
dream
think
made
printit
may
may
true
sentenc
re
weightedcartesianchoicedetermin
colour
noun
verbphras
sentencesappend
joinr
word
smell
dream
think
made
collect
import
counter
c
counter
sentenc
sentenc
word
word
word
sentenc
cword
wsum
sumcvalu
key
c
printkey
ckey
wsum
may
may
true
think
made
smell
dream
random
seed
random
seed
also
call
seed
state
seed
number
use
initi
pseudorandom
number
gener
call
randomrandom
expect
got
random
number
randomrandom
calcul
new
random
number
use
previous
produc
random
number
first
time
use
random
program
ye
previous
creat
random
number
random
number
gener
call
first
time
creat
first
random
number
seed
pseudorandom
number
gener
provid
first
previou
valu
seed
valu
correspond
sequenc
gener
valu
given
random
number
gener
use
seed
valu
get
reli
get
sequenc
number
seed
number
doesnt
need
randomli
chosen
algorithm
creat
valu
follow
probabl
distribut
pseudorandom
manner
yet
seed
matter
term
secur
know
seed
could
exampl
gener
secret
encrypt
key
base
seed
random
seed
mani
program
languag
gener
state
comput
system
lot
case
system
time
true
python
well
help
randomse
say
call
function
none
argument
seed
current
time
oper
system
specif
random
sourc
avail
import
random
helprandomse
help
method
seed
modul
random
seedanon
method
randomrandom
instanc
initi
intern
state
hashabl
object
none
argument
seed
current
time
oper
system
specif
random
sourc
avail
version
default
bit
use
str
byte
bytearray
version
hash
use
instead
int
bit
use
seed
function
allow
get
determin
sequenc
random
number
repeat
sequenc
whenev
need
eg
debug
purpos
import
random
end
printnlet
creat
random
number
end
let
creat
random
number
random
number
python
gaussian
normalvari
distributionw
want
creat
random
number
gaussian
distribut
mean
valu
mu
set
standard
deviat
sigma
set
random
import
gauss
n
valu
frequenc
lenvalu
n
valu
valu
frequenciesintvalu
frequenciesgetintvalu
valuesappendvalu
follow
program
plot
random
valu
creat
havent
cover
matplotlib
far
necessari
understand
code
matplotlib
inlin
import
matplotlibpyplot
plt
freq
listfrequenciesitem
freqsort
pltplotlistzipfreq
get
us
follow
output
normvari
instead
gauss
random
import
normalvari
n
valu
frequenc
lenvalu
n
valu
valu
frequenciesintvalu
frequenciesgetintvalu
valuesappendvalu
freq
listfrequenciesitem
freqsort
pltplotlistzipfreq
python
code
return
follow
exercis
zero
one
might
good
idea
write
follow
function
exercis
function
call
paramet
p
probabilti
valu
function
return
probabl
p
ie
one
p
percent
zero
p
percent
call
import
random
def
randomonesandzerosp
p
probabl
p
return
probabl
p
x
randomrandom
x
p
return
els
return
let
test
littl
function
n
rangen
n
get
us
follow
might
great
idea
implement
task
like
gener
familar
way
work
python
gener
recommend
consult
chapter
gener
iter
python
tutori
import
random
def
randomonesandzerosp
true
x
randomrandom
yield
x
p
els
def
firstngener
n
rangen
yield
nextgener
n
sumx
x
n
n
receiv
follow
output
gener
randomonesandzero
seen
sender
emit
one
zero
probabl
p
respect
write
anoth
gener
receiv
bitstream
task
new
gener
read
incom
bitstream
yield
anoth
bitstream
one
zero
probabl
without
know
use
probabl
p
work
arbitrari
probabl
valu
def
ebitterbitstream
true
nextbitstream
nextbitstream
nextbitstream
yield
els
yield
def
nextbitstream
nextbitstream
nextbitstream
true
yield
els
yield
nextbitstream
n
sumx
x
n
n
receiv
follow
result
n
sumx
x
n
n
python
code
return
follow
underli
theori
first
gener
emit
bitstream
check
arbitrari
pair
consecut
bit
bi
pair
valu
probabl
x
p
probabl
p
x
combin
probabilti
two
consecut
bit
either
sum
two
bit
x
x
p
look
anoth
bit
probabl
bi
possibl
outcom
satisfi
condit
correspond
probabl
found
follow
tabl
probabl
bi
x
p
x
denot
outcom
sumbi
correspondingli
outcom
joint
probabl
x
p
x
rearrang
p
x
condit
probabl
given
p
x
x
p
x
synthet
sale
figuresin
subchapt
want
creat
data
file
sale
figur
imagin
chain
shop
variou
european
canadian
citi
frankfurt
munich
berlin
zurich
hamburg
london
toronto
strasbourg
luxembourg
amsterdam
rotterdam
hagu
start
array
sale
sale
figur
year
import
numpi
np
sale
aim
creat
comma
separ
list
like
one
get
excel
file
contain
sale
figur
dont
know
shop
dont
span
year
add
random
valu
sale
figur
year
year
purpos
construct
array
growthrat
growthrat
vari
minim
percent
valu
minperc
maximum
percent
valu
maxperc
minperc
correspond
maxperc
growthrat
maxperc
minperc
minperc
printgrowthr
get
new
sale
figur
year
multipli
sale
array
sale
array
growthrat
sale
growthrat
execut
python
code
receiv
follow
array
get
sustain
sale
develop
chang
growthrat
everi
four
year
complet
program
save
data
file
call
salesfigurescsv
import
numpi
np
fh
opensalesfigurescsv
w
fhwriteyear
frankfurt
munich
berlin
zurich
hamburg
london
toronto
strasbourg
luxembourg
amsterdam
rotterdam
haguen
sale
year
line
stryear
joinmapstr
sale
fhwritelin
n
year
minperc
correspond
maxperc
growthrat
maxperc
minperc
minperc
growthrat
maxperc
negativemax
sale
nparoundsal
growthrat
fhclose
result
file
salesfigurescsv
use
file
chapter
read
write
numpi
exercis
let
die
roll
prove
empir
write
simul
program
probabl
combin
event
even
number
roll
e
number
greater
roll
file
universitiesuktxtuniversitiesuktxt
contain
list
univers
unit
kingdom
enrol
data
write
function
return
tupl
univers
enrol
totalnumberofstud
univers
list
univers
name
enrol
correspond
list
enrol
totalnumberofstud
univers
enrol
fiction
student
likelihood
correspond
real
enrol
let
take
back
time
space
next
exercis
travel
back
ancient
pythonia
πηθωνια
time
king
pysseu
rule
benevol
dictat
live
time
pysseu
sent
messeng
throughout
world
announc
time
come
princ
anacondo
ανακονδος
cobrion
κομπριον
boato
μποατος
addokl
ανδοκλης
merri
organ
toughest
program
contest
amongst
fair
brave
amazon
better
known
pythonista
pythonia
final
eleven
amazon
left
choos
ether
airla
αιρλα
barbara
βαρβάρα
one
foreign
countri
eo
ηως
look
divin
dawn
sweet
glykeria
γλυκερία
graceful
hanna
αννα
helen
ελενη
light
dark
good
angel
agathangelo
αγαθάγγελος
violet
tint
cloud
iokast
ιοκάστη
medousa
μέδουσα
guardian
selfcontrol
sofronia
σωφρονία
andromeda
ανδρομεδα
one
think
man
warrior
day
arriv
chanc
drawn
lotteri
everi
amazon
pysseu
want
lotteri
postpon
day
futur
probabl
chang
everi
day
lower
first
seven
amazon
increas
last
four
amazon
long
king
wait
percent
sure
princ
anacondo
cobrion
boato
addokl
marri
iokast
medousa
sofronia
andromeda
li
ol
solut
exercis
random
import
randint
outcom
evenpip
x
x
outcom
x
greatertwo
x
x
outcom
x
combin
x
x
outcom
x
x
printlenevenpip
lenoutcom
printlengreatertwo
lenoutcom
printlencombin
lenoutcom
first
write
function
processdatafil
process
data
file
def
processdatafilefilenam
processdatafil
univers
enrol
totalnumberofstud
univers
list
univers
name
enrol
correspond
list
enrol
totalnumberofstud
univers
univers
enrol
openfilenam
fh
totalnumberofstud
fhreadlin
get
rid
descript
first
line
line
fh
line
linestrip
praefix
undergradu
postgradu
total
linersplit
univers
total
inttotalreplac
enrollmentsappendtot
universitiesappend
joinunivers
totalnumberofstud
total
return
univers
enrol
totalnumberofstud
let
start
function
check
result
univers
enrol
totalstud
processdatafileuniversitiesuktxt
printuniversitiesi
end
printenrollmentsi
printtot
number
student
onrol
uk
totalstud
open
univers
england
univers
manchest
univers
nottingham
sheffield
hallam
univers
univers
birmingham
manchest
metropolitan
univers
univers
leed
cardiff
univers
univers
south
wale
univers
colleg
london
king
colleg
london
univers
edinburgh
northumbria
univers
univers
glasgow
total
number
student
onrol
uk
want
enrol
virtual
student
randomli
one
univers
get
weight
list
suitabl
weightedchoic
function
normal
valu
list
enrol
normalizedenrol
student
totalstud
student
enrol
enrol
virtual
student
printweightedchoiceunivers
normalizedenrol
univers
dunde
ask
exercis
enrol
fiction
student
easili
accomplish
loop
collect
import
counter
outcom
n
rangen
outcomesappendweightedchoiceunivers
normalizedenrol
c
counteroutcom
open
univers
england
univers
manchest
univers
nottingham
univers
birmingham
sheffield
hallam
univers
manchest
metropolitan
univers
cardiff
univers
univers
leed
univers
south
wale
univers
plymouth
univers
colleg
london
coventri
univers
univers
west
england
univers
edinburgh
king
colleg
london
univers
glasgow
univers
central
lancashir
nottingham
trent
univers
univers
sheffield
northumbria
univers
li
bunch
amazon
implement
list
choos
set
pysseuss
favorit
weight
begin
ie
everi
loop
cycl
correspond
new
day
everi
time
start
new
loop
cycl
draw
n
sampl
pythonista
calcul
ratio
number
time
sampl
equal
king
favorit
divid
number
time
sampl
doesnt
match
king
idea
daughterinlaw
correspond
probabl
prob
stop
first
time
probabl
equal
larger
use
function
weightedsam
weightedsamplealtern
draw
import
time
amazon
airla
barbara
eo
glykeria
hanna
helen
agathangelo
iokast
medousa
sofronia
andromeda
weight
rangelenamazon
pytheussesfavorit
iokast
medousa
sofronia
andromeda
n
counter
prob
day
start
timeclock
prob
rangen
thechosenon
weightedsamplealternativeamazon
weight
setthechosenon
pytheussesfavorit
counter
prob
counter
n
counter
p
p
p
p
weight
x
sumweight
x
weight
day
printtimeclock
start
printnumb
day
wait
day
number
day
wait
teh
valu
number
day
differ
n
larg
enough
follow
solut
without
roundoff
error
use
fraction
modul
fraction
import
time
fraction
import
fraction
amazon
airla
barbara
eo
glykeria
hanna
helen
agathangelo
iokast
medousa
sofronia
andromeda
weight
rangelenamazon
pytheussesfavorit
iokast
medousa
sofronia
andromeda
n
counter
prob
day
start
timeclock
prob
printprob
rangen
thechosenon
weightedsamplealternativeamazon
weight
setthechosenon
pytheussesfavorit
counter
prob
fractioncount
n
counter
p
p
p
p
weight
x
sumweight
x
weight
day
printtimeclock
start
printnumb
day
wait
day
number
day
wait
see
solut
fraction
beauti
slow
wherea
greater
precis
doesnt
play
role
case
far
havent
use
power
numpi
next
implement
problem
import
time
import
numpi
np
amazon
airla
barbara
eo
glykeria
hanna
helen
agathangelo
iokast
medousa
sofronia
andromeda
weight
pytheussesfavorit
iokast
medousa
sofronia
andromeda
n
counter
prob
day
start
timeclock
prob
rangen
thechosenon
weightedsamplealternativeamazon
weight
setthechosenon
pytheussesfavorit
counter
prob
counter
n
counter
weight
weight
npsumweight
printweight
day
printtimeclock
start
printnumb
day
wait
day
number
day
wait
footnot
thank
dr
hanno
baehr
introduc
problem
random
extract
particip
python
train
cours
nuremberg
januari
hanno
outlin
bit
theoret
framework
night
session
pub
call
zeit
raum
english
time
space
implement
correspond
python
program
back
theoret
solut
empir
previou
chapter
python
numpi
probabl
next
chapter
creation
synthet
test
data
bernd
klein
bodenseo
design
denis
mitchinson
adapt
pythoncourseeu
bernd
klein
