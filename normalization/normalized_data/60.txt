numer
&
scientif
comput
with
python
:
tutori
on
time
seri
numer
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
,
dtypenumer
oper
on
numpi
arrayschang
the
dimens
of
arrayspython
,
numpi
and
probabilityweight
choic
and
weight
samplescr
of
synthet
test
databoolean
mask
of
arraysmatrix
arithmeticread
and
write
ndarraysmatplotlib
introductionspin
and
tickslegend
and
annotationsmultipl
figur
and
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
with
nanbin
datapanda
tutori
continu
:
multi-level
indexingdata
visual
with
panda
and
pythonpython
,
date
and
timepython
,
panda
and
timeserieslinear
combin
time
``
It
is
an
old
stori
,
thi
irresist
and
ceaseless
onflow
of
life
and
time
;
time
alway
scatter
the
flower
of
life
with
a
lavish
hand
along
it
cours
...
''
(
hamilton
wright
mabi
,
1846–1916
,
``
new
year
's
eve
''
(
c.1885
)
,
My
studi
fire
)
surpris
``
how
often
the
morn
sun
ha
surpris
him
work
on
some
chart
which
he
had
begun
at
night
,
and
how
often
night
ha
surpris
him
at
a
task
begun
at
the
break
of
day
!
''
(
``
quotien
ilium
lux
noctu
aliquid
describer
ingressum
,
quotien
nox
oppressit
cum
mane
coepisset
!
''
)
(
cicero
,
De
senectut
)
panda
the
first
thing
peopl
think
about
,
when
they
hear
the
name
panda
is
the
panda
bear
.
A
cute
,
cuddli
look
be
with
dreami
black
eye
,
but
potenti
it
can
also
be
aggress
or
danger
,
if
they
feel
threaten
.
So
,
it
's
nice
name
for
a
piec
of
softwar
,
or
better
a
python
modul
.
It
's
round
up
the
capabl
of
numpi
,
matplotlib
and
scipi
to
be
the
perfect
replac
for
R
and
matlab
in
scientif
,
financi
or
engineer
work
field
.
the
acronym
panda
the
aconym
ha
been
deriv
from
``
python
and
data
analysi
''
and
``
panel
data
''
.
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
tutori
über
timeseriesclassroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
the
digit
revolut
is
far
more
signific
than
the
invent
of
write
or
even
of
print
.
''
(
dougla
engelbart
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
python
,
date
and
time
next
chapter
:
linear
combin
python
,
panda
and
time
seriesintroduct
our
next
chapter
of
our
panda
tutori
deal
with
time
seri
.
A
time
seri
is
a
seri
of
data
point
,
which
are
list
(
or
index
)
in
time
order
.
usual
,
a
time
seri
is
a
sequenc
of
valu
,
which
are
equal
space
point
in
time
.
everyth
which
consist
of
measur
data
connect
with
the
correspond
time
can
be
seen
as
a
time
seri
.
measur
can
be
taken
irregularli
,
but
in
most
case
time
seri
consist
of
fix
frequenc
.
thi
mean
that
data
is
measur
or
taken
in
a
regular
pattern
,
i.e
.
for
exampl
everi
5
millisecond
,
everi
10
second
,
or
veri
hour
.
often
time
seri
are
plot
as
line
chart
.
In
thi
chapter
of
our
tutori
on
python
with
panda
,
we
will
introduc
the
tool
from
panda
deal
with
time
seri
.
you
will
learn
how
to
cope
with
larg
time
seri
and
how
modifi
time
seri
.
befor
you
continu
read
it
might
be
use
to
go
through
our
tutori
on
the
standard
python
modul
deal
with
time
process
,
i.e
.
datetim
,
time
and
calendar
:
time
seri
in
panda
and
pythonw
could
defin
a
panda
seri
,
which
is
built
with
an
index
consist
of
time
stamp
.
import
numpi
as
np
import
panda
as
pd
from
datetim
import
datetim
,
timedelta
as
delta
nday
=
10
start
=
datetim
(
2017
,
3
,
31
)
date
=
[
start
-
delta
(
days=x
)
for
x
in
rang
(
0
,
nday
)
]
valu
=
[
25
,
50
,
15
,
67
,
70
,
9
,
28
,
30
,
32
,
12
]
ts
=
pd.seri
(
valu
,
index=d
)
ts
the
previou
python
code
return
the
follow
output
:
2017-03-31
25
2017-03-30
50
2017-03-29
15
2017-03-28
67
2017-03-27
70
2017-03-26
9
2017-03-25
28
2017-03-24
30
2017-03-23
32
2017-03-22
12
dtype
:
int64
let
's
check
the
type
of
the
newli
creat
time
seri
:
type
(
ts
)
the
previou
python
code
return
the
follow
:
pandas.core.series.seri
what
doe
the
index
of
a
time
seri
look
like
?
let
's
see
:
ts.index
the
previou
code
return
the
follow
result
:
datetimeindex
(
[
'2017-03-31
'
,
'2017-03-30
'
,
'2017-03-29
'
,
'2017-03-28
'
,
'2017-03-27
'
,
'2017-03-26
'
,
'2017-03-25
'
,
'2017-03-24
'
,
'2017-03-23
'
,
'2017-03-22
'
]
,
dtype='datetime64
[
ns
]
'
,
freq=non
)
We
will
creat
now
anoth
time
seri
:
values2
=
[
32
,
54
,
18
,
61
,
72
,
19
,
21
,
33
,
29
,
17
]
ts2
=
pd.seri
(
values2
,
index=d
)
It
is
possibl
to
use
arithmet
oper
on
time
seri
like
we
did
with
other
seri
.
We
can
for
exampl
add
the
two
previous
creat
time
seri
:
ts
+
ts2
the
previou
code
return
the
follow
result
:
2017-03-31
57
2017-03-30
104
2017-03-29
33
2017-03-28
128
2017-03-27
142
2017-03-26
28
2017-03-25
49
2017-03-24
63
2017-03-23
61
2017-03-22
29
dtype
:
int64
arithmet
mean
between
both
seri
,
i.e
.
the
valu
of
the
seri
:
(
ts
+
ts2
)
/
2
We
receiv
the
follow
output
:
2017-03-31
28.5
2017-03-30
52.0
2017-03-29
16.5
2017-03-28
64.0
2017-03-27
71.0
2017-03-26
14.0
2017-03-25
24.5
2017-03-24
31.5
2017-03-23
30.5
2017-03-22
14.5
dtype
:
float64
As
with
other
seri
the
indic
do
n't
have
to
be
the
same
.
import
panda
as
pd
from
datetim
import
datetim
,
timedelta
as
delta
nday
=
10
start
=
datetim
(
2017
,
3
,
31
)
date
=
[
start
-
delta
(
days=x
)
for
x
in
rang
(
0
,
nday
)
]
start2
=
datetim
(
2017
,
3
,
26
)
dates2
=
[
start2
-
delta
(
days=x
)
for
x
in
rang
(
0
,
nday
)
]
valu
=
[
25
,
50
,
15
,
67
,
70
,
9
,
28
,
30
,
32
,
12
]
values2
=
[
32
,
54
,
18
,
61
,
72
,
19
,
21
,
33
,
29
,
17
]
ts
=
pd.seri
(
valu
,
index=d
)
ts2
=
pd.seri
(
values2
,
index=dates2
)
ts
+
ts2
the
abov
code
return
the
follow
output
:
2017-03-17
nan
2017-03-18
nan
2017-03-19
nan
2017-03-20
nan
2017-03-21
nan
2017-03-22
84.0
2017-03-23
93.0
2017-03-24
48.0
2017-03-25
82.0
2017-03-26
41.0
2017-03-27
nan
2017-03-28
nan
2017-03-29
nan
2017-03-30
nan
2017-03-31
nan
dtype
:
float64
creat
date
rangesth
date_rang
method
of
the
panda
modul
can
be
use
to
gener
a
datetimeindex
:
import
panda
as
pd
index
=
pd.date_rang
(
'12/24/1970
'
,
'01/03/1971
'
)
index
after
have
execut
the
python
code
abov
we
receiv
the
follow
output
:
datetimeindex
(
[
'1970-12-24
'
,
'1970-12-25
'
,
'1970-12-26
'
,
'1970-12-27
'
,
'1970-12-28
'
,
'1970-12-29
'
,
'1970-12-30
'
,
'1970-12-31
'
,
'1971-01-01
'
,
'1971-01-02
'
,
'1971-01-03
'
]
,
dtype='datetime64
[
ns
]
'
,
freq='d
'
)
We
have
pass
a
start
and
an
end
date
to
date_rang
in
our
previou
exampl
.
It
is
also
possibl
to
pass
onli
a
start
or
an
end
date
to
the
function
.
In
thi
case
,
we
have
to
determin
the
number
of
period
to
gener
by
set
the
keyword
paramet
'period
'
:
index
=
pd.date_rang
(
start='12/24/1970
'
,
periods=4
)
print
(
index
)
datetimeindex
(
[
'1970-12-24
'
,
'1970-12-25
'
,
'1970-12-26
'
,
'1970-12-27
'
]
,
dtype='datetime64
[
ns
]
'
,
freq='d
'
)
index
=
pd.date_rang
(
end='12/24/1970
'
,
periods=3
)
print
(
index
)
datetimeindex
(
[
'1970-12-22
'
,
'1970-12-23
'
,
'1970-12-24
'
]
,
dtype='datetime64
[
ns
]
'
,
freq='d
'
)
We
can
also
creat
time
frequenc
,
which
consist
onli
of
busi
day
for
exampl
by
set
the
keyword
paramet
'freq
'
to
the
string
'
B
'
:
index
=
pd.date_rang
(
'2017-04-07
'
,
'2017-04-13
'
,
freq=
''
B
''
)
print
(
index
)
datetimeindex
(
[
'2017-04-07
'
,
'2017-04-10
'
,
'2017-04-11
'
,
'2017-04-12
'
,
'2017-04-13
'
]
,
dtype='datetime64
[
ns
]
'
,
freq=
'
B
'
)
In
the
follow
exampl
,
we
creat
a
time
frequenc
which
contain
the
month
end
between
two
date
.
We
can
see
that
the
year
2016
contain
the
29th
of
februari
,
becaus
it
wa
a
leap
year
:
index
=
pd.date_rang
(
'2016-02-25
'
,
'2016-07-02
'
,
freq=
''
M
''
)
index
We
receiv
the
follow
output
:
datetimeindex
(
[
'2016-02-29
'
,
'2016-03-31
'
,
'2016-04-30
'
,
'2016-05-31
'
,
'2016-06-30
'
]
,
dtype='datetime64
[
ns
]
'
,
freq='m
'
)
other
alias
:
alia
descript
B
busi
day
frequenc
C
custom
busi
day
frequenc
(
experiment
)
D
calendar
day
frequenc
W
weekli
frequenc
M
month
end
frequenc
BM
busi
month
end
frequenc
MS
month
start
frequenc
bm
busi
month
start
frequenc
Q
quarter
end
frequenc
BQ
busi
quarter
endfrequ
QS
quarter
start
frequenc
bq
busi
quarter
start
frequenc
A
year
end
frequenc
BA
busi
year
end
frequenc
AS
year
start
frequenc
ba
busi
year
start
frequenc
H
hourli
frequenc
T
minut
frequenc
S
secondli
frequenc
L
milliseond
U
microsecond
index
=
pd.date_rang
(
'2017-02-05
'
,
'2017-04-13
'
,
freq=
''
w-mon
''
)
index
the
python
code
abov
return
the
follow
:
datetimeindex
(
[
'2017-02-06
'
,
'2017-02-13
'
,
'2017-02-20
'
,
'2017-02-27
'
,
'2017-03-06
'
,
'2017-03-13
'
,
'2017-03-20
'
,
'2017-03-27
'
,
'2017-04-03
'
,
'2017-04-10
'
]
,
dtype='datetime64
[
ns
]
'
,
freq=
'
w-mon
'
)
In
[
]
:
previou
chapter
:
python
,
date
and
time
next
chapter
:
linear
combin
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
