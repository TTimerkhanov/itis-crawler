machin
learn
with
python
:
confus
matrix
in
machin
learn
with
python
python
machin
learn
tutori
machin
learn
machin
learn
terminologyk-nearest
neighbor
classifierneur
network
from
scratch
in
pythonneur
network
in
python
use
numypybackpropag
in
neural
networksconfus
matrixtrain
and
test
with
mnistdropout
neural
networksneur
network
with
scikitmachin
learn
with
scikit
and
pythonintroduct
naiv
bay
classifierna
bay
classifi
with
scikitintroduct
into
text
classif
use
naiv
bayespython
implement
of
text
classificationdecis
treesregress
treesrandom
forestsboost
algorithmprincip
compon
analysislinear
discrimin
analysisexpect
maxim
and
gaussian
mixtur
modelintroduct
into
tensorflow
quot
``
the
reason
scienc
realli
matter
run
deeper
still
.
scienc
is
a
way
of
life
.
scienc
is
a
perspect
.
scienc
is
the
process
that
take
us
from
confus
to
understand
in
a
manner
that
’
s
precis
,
predict
and
reliabl
—
a
transform
,
for
those
lucki
enough
to
experi
it
,
that
is
empow
and
emot
.
''
(
brian
green
,
new
york
time
,
june
1
,
2008
)
triniti
:
I
know
whi
you
're
here
,
neo
.
I
know
what
you
've
been
do
...
whi
you
hardli
sleep
,
whi
you
live
alon
,
and
whi
night
after
night
,
you
sit
by
your
comput
.
you
're
look
for
him
.
I
know
becaus
I
wa
onc
look
for
the
same
thing
.
and
when
he
found
me
,
he
told
me
I
wa
n't
realli
look
for
him
.
I
wa
look
for
an
answer
.
It
's
the
question
,
neo
.
It
's
the
question
that
drive
us
.
It
's
the
question
that
brought
you
here
.
you
know
the
question
,
just
as
I
did
.
neo
:
what
is
the
matrix
?
triniti
:
the
answer
is
out
there
,
neo
,
and
it
's
look
for
you
,
and
it
will
find
you
if
you
want
it
to
.
(
excerpt
from
the
film
``
matrix
''
)
thi
websit
is
creat
and
maintain
by
:
bernd
klein
,
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
classroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
now
,
it
's
my
belief
that
python
is
a
lot
easier
than
to
teach
to
student
program
and
teach
them
C
or
c++
or
java
at
the
same
time
becaus
all
the
detail
of
the
languag
are
so
much
harder
.
other
script
languag
realli
do
n't
work
veri
well
there
either
.
''
(
guido
van
rossum
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
backpropag
in
neural
network
next
chapter
:
train
and
test
with
mnist
confus
matrix
In
the
previou
chapter
of
our
machin
learn
tutori
(
neural
network
with
python
and
numpi
and
neural
network
from
scratch
)
we
implement
variou
algorithm
,
but
we
did
n't
properli
measur
the
qualiti
of
the
output
.
the
main
reason
wa
that
we
use
veri
simpl
and
small
dataset
to
learn
and
test
.
In
the
chapter
neural
network
:
test
with
mnist
,
we
will
work
with
larg
dataset
and
ten
class
,
so
we
need
proper
evalu
tool
.
We
will
introduc
in
thi
chapter
the
concept
of
the
confus
matrix
:
A
confus
matrix
is
a
matrix
(
tabl
)
that
can
be
use
to
measur
the
perform
of
an
machin
learn
algorithm
,
usual
a
supervis
learn
one
.
each
row
of
the
confus
matrix
repres
the
instanc
of
an
actual
class
and
each
column
repres
the
instanc
of
a
predict
class
.
thi
is
the
way
we
keep
it
in
thi
chapter
of
our
tutori
,
but
it
can
be
the
other
way
around
as
well
,
i.e
.
row
for
predict
class
and
column
for
actual
class
.
the
name
confus
matrix
reflect
the
fact
that
it
make
it
easi
for
us
to
see
what
kind
of
confus
occur
in
our
classif
algorithm
.
for
exampl
the
algorithm
should
have
predict
a
sampl
as
$
c_i
$
becaus
the
actual
class
is
$
c_i
$
,
but
the
algorithm
came
out
with
$
c_j
$
.
In
thi
case
of
mislabel
the
element
$
cm
[
i
,
j
]
$
will
be
increment
by
one
,
when
the
confus
matrix
is
construct
.
We
will
defin
method
to
calcul
the
confus
matrix
,
precis
and
recal
in
the
follow
class
.
2-class
casein
a
2-class
case
,
i.e
.
``
neg
''
and
``
posit
''
,
the
confus
matrix
may
look
like
thi
:
predict
actual
neg
posit
neg
11
0
posit
1
12
the
field
of
the
matrix
mean
the
follow
:
predict
actual
neg
posit
neg
tntrue
posit
fpfals
posit
posit
fnfals
neg
tptrue
posit
We
can
defin
now
some
import
perform
measur
use
in
machin
learn
:
accuraci
:
$
$
AC
=
\frac
{
TN
+
TP
}
{
TN
+
FP
+
FN
+
TP
}
$
$
the
accuraci
is
not
alway
an
adequ
perform
measur
.
let
us
assum
we
have
1000
sampl
.
995
of
these
are
neg
and
5
are
posit
case
.
let
us
further
assum
we
have
a
classifi
,
which
classifi
whatev
it
will
be
present
as
neg
.
the
accuraci
will
be
a
surpris
99.5
%
,
even
though
the
classifi
could
not
recogn
ani
posit
sampl
.
recal
aka
.
true
posit
rate
:
$
$
recal
=
\frac
{
TP
}
{
FN
+
TP
}
$
$
true
neg
rate
:
$
$
tnr
=
\frac
{
FP
}
{
TN
+
FP
}
$
$
precis
:
$
$
precis
:
\frac
{
TP
}
{
FP
+
TP
}
$
$
multi-class
caseto
measur
the
result
of
machin
learn
algorithm
,
the
previou
confus
matrix
will
not
be
suffici
.
We
will
need
a
gener
for
the
multi-class
case
.
let
us
assum
that
we
have
a
sampl
of
25
anim
,
e.g
.
7
cat
,
8
dog
,
and
10
snake
,
most
probabl
python
snake
.
the
confus
matrix
of
our
recognit
algorithm
may
look
like
the
follow
tabl
:
predict
actual
dog
cat
snake
dog
6
2
0
cat
1
6
0
snake
1
1
8
In
thi
confus
matrix
,
the
system
correctli
predict
six
of
the
eight
actual
dog
,
but
in
two
case
it
took
a
dog
for
a
cat
.
the
seven
acut
cat
were
correctli
recogn
in
six
case
but
in
one
case
a
cat
wa
taken
to
be
a
dog
.
usual
,
it
is
hard
to
take
a
snake
for
a
dog
or
a
cat
,
but
thi
is
what
happen
to
our
classifi
in
two
case
.
yet
,
eight
out
of
ten
snake
had
been
correctli
recogn
.
(
most
probabl
thi
machin
learn
algorithm
wa
not
written
in
a
python
program
,
becaus
python
should
properli
recogn
it
own
speci
:
-
)
)
you
can
see
that
all
correct
predict
are
locat
in
the
diagon
of
the
tabl
,
so
predict
error
can
be
easili
found
in
the
tabl
,
as
they
will
be
repres
by
valu
outsid
the
diagon
.
We
can
gener
thi
to
the
multi-class
case
.
To
do
thi
we
summar
over
the
row
and
column
of
the
confus
matrix
.
given
that
the
matrix
is
orient
as
abov
,
i.e.
,
that
a
given
row
of
the
matrix
correspond
to
specif
valu
for
the
``
truth
''
,
we
have
:
$
$
precision_i
=
\frac
{
M_
{
ii
}
}
{
\sum_j
M_
{
ji
}
}
$
$
$
$
recall_i
=
\frac
{
M_
{
ii
}
}
{
\sum_j
M_
{
ij
}
}
$
$
thi
mean
,
precis
is
the
fraction
of
case
where
the
algorithm
correctli
predict
class
i
out
of
all
instanc
where
the
algorithm
predict
i
(
correctli
and
incorrectli
)
.
recal
on
the
other
hand
is
the
fraction
of
case
where
the
algorithm
correctli
predict
i
out
of
all
of
the
case
which
are
label
as
i
.
let
us
appli
thi
to
our
exampl
:
the
precis
for
our
anim
can
be
calcul
as
$
$
precision_
{
dog
}
=
6
/
(
6
+
1
+
1
)
=
3/4
=
0.75
$
$
$
$
precision_
{
cat
}
=
6
/
(
2
+
6
+
1
)
=
6/9
=
0.67
$
$
$
$
precision_
{
snake
}
=
8
/
(
0
+
0
+
8
)
=
1
$
$
the
recal
is
calcul
like
thi
:
$
$
recall_
{
dog
}
=
6
/
(
6
+
2
+
0
)
=
3/4
=
0.75
$
$
$
$
recall_
{
cat
}
=
6
/
(
1
+
6
+
0
)
=
6/7
=
0.86
$
$
$
$
recall_
{
snake
}
=
8
/
(
1
+
1
+
8
)
=
4/5
=
0.8
$
$
examplew
are
readi
now
to
code
thi
into
python
.
the
follow
code
show
a
confus
matrix
for
a
multi-class
machin
learn
problem
with
ten
label
,
so
for
exampl
an
algorithm
for
recogn
the
ten
digit
from
handwritten
charact
.
If
you
are
not
familiar
with
numpi
and
numpi
array
,
we
recommend
our
tutori
on
numpi
.
import
numpi
as
np
cm
=
np.array
(
[
[
5825
,
1
,
49
,
23
,
7
,
46
,
30
,
12
,
21
,
26
]
,
[
1
,
6654
,
48
,
25
,
10
,
32
,
19
,
62
,
111
,
10
]
,
[
2
,
20
,
5561
,
69
,
13
,
10
,
2
,
45
,
18
,
2
]
,
[
6
,
26
,
99
,
5786
,
5
,
111
,
1
,
41
,
110
,
79
]
,
[
4
,
10
,
43
,
6
,
5533
,
32
,
11
,
53
,
34
,
79
]
,
[
3
,
1
,
2
,
56
,
0
,
4954
,
23
,
0
,
12
,
5
]
,
[
31
,
4
,
42
,
22
,
45
,
103
,
5806
,
3
,
34
,
3
]
,
[
0
,
4
,
30
,
29
,
5
,
6
,
0
,
5817
,
2
,
28
]
,
[
35
,
6
,
63
,
58
,
8
,
59
,
26
,
13
,
5394
,
24
]
,
[
16
,
16
,
21
,
57
,
216
,
68
,
0
,
219
,
115
,
5693
]
]
)
the
function
'precis
'
and
'recal
'
calcul
valu
for
a
label
,
wherea
the
function
'precision_macro_averag
'
the
precis
for
the
whole
classif
problem
calcul
.
def
precis
(
label
,
confusion_matrix
)
:
col
=
confusion_matrix
[
:
,
label
]
return
confusion_matrix
[
label
,
label
]
/
col.sum
(
)
def
recal
(
label
,
confusion_matrix
)
:
row
=
confusion_matrix
[
label
,
:
]
return
confusion_matrix
[
label
,
label
]
/
row.sum
(
)
def
precision_macro_averag
(
confusion_matrix
)
:
row
,
column
=
confusion_matrix.shap
sum_of_precis
=
0
for
label
in
rang
(
row
)
:
sum_of_precis
+=
precis
(
label
,
confusion_matrix
)
return
sum_of_precis
/
row
def
recall_macro_averag
(
confusion_matrix
)
:
row
,
column
=
confusion_matrix.shap
sum_of_recal
=
0
for
label
in
rang
(
column
)
:
sum_of_recal
+=
recal
(
label
,
confusion_matrix
)
return
sum_of_recal
/
column
print
(
``
label
precis
recal
''
)
for
label
in
rang
(
10
)
:
print
(
f
''
{
label:5d
}
{
precis
(
label
,
cm
)
:9.3f
}
{
recal
(
label
,
cm
)
:6.3f
}
''
)
label
precis
recal
0
0.983
0.964
1
0.987
0.954
2
0.933
0.968
3
0.944
0.924
4
0.947
0.953
5
0.914
0.980
6
0.981
0.953
7
0.928
0.982
8
0.922
0.949
9
0.957
0.887
print
(
``
precis
total
:
''
,
precision_macro_averag
(
cm
)
)
print
(
``
recal
total
:
''
,
recall_macro_averag
(
cm
)
)
precis
total
:
0.949688556405
recal
total
:
0.951453154788
def
accuraci
(
confusion_matrix
)
:
diagonal_sum
=
confusion_matrix.trac
(
)
sum_of_all_el
=
confusion_matrix.sum
(
)
return
diagonal_sum
/
sum_of_all_el
accuraci
(
cm
)
after
have
execut
the
python
code
abov
we
receiv
the
follow
:
0.95038333333333336
previou
chapter
:
backpropag
in
neural
network
next
chapter
:
train
and
test
with
mnist
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
