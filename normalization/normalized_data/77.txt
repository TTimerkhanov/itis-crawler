numer
&
scientif
comput
with
python
:
move
spine
and
chang
tick
numer
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
,
dtypenumer
oper
on
numpi
arrayschang
the
dimens
of
arrayspython
,
numpi
and
probabilityweight
choic
and
weight
samplescr
of
synthet
test
databoolean
mask
of
arraysmatrix
arithmeticread
and
write
ndarraysmatplotlib
introductionspin
and
tickslegend
and
annotationsmultipl
figur
and
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
with
nanbin
datapanda
tutori
continu
:
multi-level
indexingdata
visual
with
panda
and
pythonpython
,
date
and
timepython
,
panda
and
timeserieslinear
combin
lesson
learn
``
one
of
the
import
lesson
from
the
develop
of
matplotlib
is
,
as
Le
corbusi
said
,
'good
architect
borrow
'
.
the
earli
author
of
matplotlib
were
larg
scientist
,
self-taught
programm
tri
to
get
their
work
done
,
not
formal
train
comput
scientist
.
thu
we
did
not
get
the
intern
design
right
on
the
first
tri
.
the
decis
to
implement
a
user-fac
script
layer
larg
compat
with
the
matlab
api
benefit
the
project
in
three
signific
way
:
it
provid
a
time-test
interfac
to
creat
and
custom
graphic
,
it
made
for
an
easi
transit
to
matplotlib
from
the
larg
base
of
matlab
user
,
andâmost
importantli
for
us
in
the
context
of
matplotlib
architectureâit
freed
develop
to
refactor
the
intern
object-ori
api
sever
time
with
minim
impact
to
most
user
becaus
the
script
interfac
wa
unchang
.
while
we
have
had
api
user
(
as
oppos
to
script
user
)
from
the
outset
,
most
of
them
are
power
user
or
develop
abl
to
adapt
to
api
chang
.
the
script
user
,
on
the
other
hand
,
can
write
code
onc
and
pretti
much
assum
it
is
stabl
for
all
subsequ
releas
.
''
(
john
hunter
and
michael
droettboom
in
``
the
architectur
of
open
sourc
applic
:
eleg
,
evolut
,
and
a
few
fearless
hack
''
,
2011
)
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
spine
und
ticksclassroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
At
least
for
the
peopl
who
send
me
mail
about
a
new
languag
that
they
're
design
,
the
gener
advic
is
:
do
it
to
learn
about
how
to
write
a
compiler.
``
(
denni
ritchi
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
matplotlib
introduct
next
chapter
:
legend
and
annot
matplotlib
tutori
:
spine
and
tick
move
the
border
line
and
polish
up
the
axe
notat
the
word
spine
is
most
commonli
known
as
the
backbon
or
spinal
cord
of
the
human
skeleton
.
anoth
mean
stand
for
a
book
's
jacket
.
our
pictur
on
the
right
side
show
the
spine
of
a
cactu
,
artist
chang
into
someth
which
look
like
a
ribcag
.
you
will
hardli
find
the
usag
of
matplotlib
in
a
dictionari
.
spine
in
matplotlib
are
the
line
connect
the
axi
tick
mark
and
note
the
boundari
of
the
data
area
.
We
will
demonstr
in
the
follow
that
the
spine
can
be
place
at
arbitrari
posit
.
but
befor
we
can
start
with
our
first
exampl
,
we
need
to
introduc
the
gca
function
,
which
return
the
current
axe
instanc
on
the
current
figur
.
We
can
e.g
.
call
plt.gca
(
projection='polar
'
)
to
get
the
current
polar
axe
on
the
current
figur
.
#
the
next
``
inlin
''
statement
is
onli
need
,
#
if
you
are
work
with
``
ipython
notebook
''
%
matplotlib
inlin
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
2
*
np.pi
,
70
,
endpoint=tru
)
F1
=
np.sin
(
2*
X
)
F2
=
(
2*x**5
+
4*x**4
-
4.8*x**3
+
1.2*x**2
+
X
+
1
)
*np.exp
(
-x**2
)
#
get
the
current
axe
,
creat
them
if
necessari
:
ax
=
plt.gca
(
)
#
make
the
top
and
right
spine
invis
:
ax.spin
[
'top
'
]
.set_color
(
'none
'
)
ax.spin
[
'right
'
]
.set_color
(
'none
'
)
#
move
bottom
spine
up
to
y=0
posit
:
ax.xaxis.set_ticks_posit
(
'bottom
'
)
ax.spin
[
'bottom
'
]
.set_posit
(
(
'data',0
)
)
#
move
left
spine
to
the
right
to
posit
x
==
0
:
ax.yaxis.set_ticks_posit
(
'left
'
)
ax.spin
[
'left
'
]
.set_posit
(
(
'data',0
)
)
plt.plot
(
X
,
F1
)
plt.plot
(
X
,
F2
)
plt.show
(
)
custom
tick
matplotlib
ha
so
far
-
in
all
our
previou
exampl
-
automat
taken
over
the
task
of
space
point
on
the
axi
.
We
can
see
for
exampl
that
the
X
axi
in
our
previou
exampl
wa
number
-8
,
-6
.
-4
,
-2
,
0
,
2
,
4
,
6
,
8
,
wherea
the
Y
axi
wa
number
-2.0
,
-1.5
,
-1.0
,
-0.5
,
0
,
0.5
,
1.0
,
1.5
,
2.0
xtick
is
a
method
,
which
can
be
use
to
get
or
to
set
the
current
tick
locat
and
the
label
.
the
same
is
true
for
ytick
:
#
get
the
current
axe
,
creat
them
if
necessari
:
ax
=
plt.gca
(
)
loc
,
label
=
plt.xtick
(
)
print
(
loc
,
label
)
loc
,
label
=
plt.ytick
(
)
print
(
loc
,
label
)
[
0
.
0.2
0.4
0.6
0.8
1
.
]
<
a
list
of
6
text
xticklabel
object
>
[
0
.
0.2
0.4
0.6
0.8
1
.
]
<
a
list
of
6
text
yticklabel
object
>
As
we
said
befor
,
we
can
also
use
xtick
to
set
the
locat
of
xtick
:
plt.xtick
(
np.arang
(
10
)
)
loc
,
label
=
plt.xtick
(
)
print
(
loc
,
label
)
[
0
1
2
3
4
5
6
7
8
9
]
<
a
list
of
10
text
xticklabel
object
>
now
,
we
will
set
both
the
locat
and
the
label
of
the
xtick
:
#
set
the
locat
and
label
of
the
xtick
plt.xtick
(
np.arang
(
4
)
,
(
'berlin
'
,
'london
'
,
'hamburg
'
,
'toronto
'
)
)
the
previou
python
code
return
the
follow
result
:
(
[
<
matplotlib.axis.xtick
at
0x7f3e1ac841d0
>
,
<
matplotlib.axis.xtick
at
0x7f3e1aadf668
>
,
<
matplotlib.axis.xtick
at
0x7f3e1aaac080
>
,
<
matplotlib.axis.xtick
at
0x7f3e1a7d23c8
>
]
,
<
a
list
of
4
text
xticklabel
object
>
)
let
's
get
back
to
our
previou
exampl
with
the
trigonometr
function
.
most
peopl
might
consid
factor
of
Pi
to
be
more
appropri
for
the
X
axi
than
the
integ
label
:
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
2
*
np.pi
,
70
,
endpoint=tru
)
X
=
np.linspac
(
-2
*
np.pi
,
2
*
np.pi
,
70
,
endpoint=tru
)
F1
=
np.sin
(
x**2
)
F2
=
X
*
np.sin
(
X
)
#
get
the
current
axe
,
creat
them
if
necessari
:
ax
=
plt.gca
(
)
#
make
the
top
and
right
spine
invis
:
ax.spin
[
'top
'
]
.set_color
(
'none
'
)
ax.spin
[
'right
'
]
.set_color
(
'none
'
)
#
move
bottom
spine
up
to
y=0
posit
:
ax.xaxis.set_ticks_posit
(
'bottom
'
)
ax.spin
[
'bottom
'
]
.set_posit
(
(
'data',0
)
)
#
move
left
spine
to
the
right
to
posit
x
==
0
:
ax.yaxis.set_ticks_posit
(
'left
'
)
ax.spin
[
'left
'
]
.set_posit
(
(
'data',0
)
)
plt.xtick
(
[
-6.28
,
-3.14
,
3.14
,
6.28
]
)
plt.ytick
(
[
-3
,
-1
,
0
,
+1
,
3
]
)
plt.plot
(
X
,
F1
)
plt.plot
(
X
,
F2
)
plt.show
(
)
set
tick
label
We
want
to
renam
the
xtick
now
with
custom
marker
.
We
will
use
the
method
xtick
again
for
thi
purpos
as
we
did
in
our
previou
exampl
.
but
thi
time
we
will
call
xtick
with
two
paramet
:
the
first
one
is
the
same
list
we
use
befor
,
i.e
.
the
posit
on
the
x
axi
,
where
we
want
to
have
the
tick
.
the
second
paramet
is
a
list
of
the
same
size
with
correspond
latex
tick
mark
,
i.e
.
the
text
which
we
want
to
see
instead
of
the
valu
.
the
latex
notat
ha
to
be
a
raw
string
in
most
case
to
suppress
the
escap
mechan
of
python
,
becaus
the
latex
notat
heavili
use
and
reli
on
the
backslash
.
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
2
*
np.pi
,
70
,
endpoint=tru
)
F1
=
X
*
np.sin
(
X
)
ax
=
plt.gca
(
)
ax.spin
[
'top
'
]
.set_color
(
'none
'
)
ax.spin
[
'right
'
]
.set_color
(
'none
'
)
ax.xaxis.set_ticks_posit
(
'bottom
'
)
ax.spin
[
'bottom
'
]
.set_posit
(
(
'data',0
)
)
ax.yaxis.set_ticks_posit
(
'left
'
)
ax.spin
[
'left
'
]
.set_posit
(
(
'data',0
)
)
#
label
the
X
tick
:
plt.xtick
(
[
-6.28
,
-3.14
,
3.14
,
6.28
]
,
[
r
'
$
-2\pi
$
'
,
r
'
$
-\pi
$
'
,
r
'
$
+\pi
$
'
,
r
'
$
+2\pi
$
'
]
)
plt.ytick
(
[
-3
,
-1
,
0
,
+1
,
3
]
)
plt.plot
(
X
,
F1
)
plt.show
(
)
adjust
the
ticklabel
We
want
to
increas
the
legibl
of
the
ticklabel
.
We
will
increas
the
font
size
,
and
we
will
render
them
on
a
semi
transpar
background
.
print
(
ax.get_xticklabel
(
)
)
<
a
list
of
4
text
xticklabel
object
>
for
xtick
in
ax.get_xticklabel
(
)
:
print
(
xtick
)
text
(
-6.28,0
,
'
$
-2\\pi
$
'
)
text
(
-3.14,0
,
'
$
-\\pi
$
'
)
text
(
3.14,0
,
'
$
+\\pi
$
'
)
text
(
6.28,0
,
'
$
+2\\pi
$
'
)
label
=
[
xtick.get_text
(
)
for
xtick
in
ax.get_xticklabel
(
)
]
print
(
label
)
[
'
$
-2\\pi
$
'
,
'
$
-\\pi
$
'
,
'
$
+\\pi
$
'
,
'
$
+2\\pi
$
'
]
let
's
increas
the
fontsiz
and
make
the
font
semi
transpar
:
import
numpi
as
np
import
matplotlib.pyplot
as
plt
X
=
np.linspac
(
-2
*
np.pi
,
2
*
np.pi
,
170
,
endpoint=tru
)
F1
=
np.sin
(
x**3
/
2
)
ax
=
plt.gca
(
)
ax.spin
[
'top
'
]
.set_color
(
'none
'
)
ax.spin
[
'right
'
]
.set_color
(
'none
'
)
ax.xaxis.set_ticks_posit
(
'bottom
'
)
ax.spin
[
'bottom
'
]
.set_posit
(
(
'data',0
)
)
ax.yaxis.set_ticks_posit
(
'left
'
)
ax.spin
[
'left
'
]
.set_posit
(
(
'data',0
)
)
plt.xtick
(
[
-6.28
,
-3.14
,
3.14
,
6.28
]
,
[
r
'
$
-2\pi
$
'
,
r
'
$
-\pi
$
'
,
r
'
$
+\pi
$
'
,
r
'
$
+2\pi
$
'
]
)
plt.ytick
(
[
-3
,
-1
,
0
,
+1
,
3
]
)
for
xtick
in
ax.get_xticklabel
(
)
:
xtick.set_fonts
(
18
)
xtick.set_bbox
(
dict
(
facecolor='whit
'
,
edgecolor='non
'
,
alpha=0.7
)
)
for
ytick
in
ax.get_yticklabel
(
)
:
ytick.set_fonts
(
14
)
ytick.set_bbox
(
dict
(
facecolor='whit
'
,
edgecolor='non
'
,
alpha=0.7
)
)
plt.plot
(
X
,
F1
,
label=
''
$
sin
(
x
)
$
''
)
plt.legend
(
loc='low
left
'
)
plt.show
(
)
previou
chapter
:
matplotlib
introduct
next
chapter
:
legend
and
annot
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
