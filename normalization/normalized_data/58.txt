gui
program
with
python
:
canva
widget
python
tkinter
cours
tkinter
tutori
say
hello
with
labelsmessag
widgetbuttonsvari
classesradiobuttonscheckboxesentri
widgetscanva
widgetssliderstext
widgetdialogslayout
managementbul
and
cow
/
mastermind
in
tkcreat
menusev
and
bind
canva
in
life
the
american
talk
show
host
oprah
winfrey
said
:
``
with
everi
experi
,
you
alon
are
paint
your
own
canva
,
thought
by
thought
,
choic
by
choic
.
''
A
thought
,
which
is
not
too
far
away
from
a
famou
quotat
by
the
american
comedian
,
dancer
and
singer
danni
kay
:
``
life
is
a
great
big
canva
;
throw
all
the
paint
on
it
you
can
.
''
the
philosoph
voltair
see
love
as
a
canva
:
``
love
is
a
canva
furnish
by
natur
and
embroid
by
imagin
.
''
thi
websit
is
creat
by
:
python
train
cours
in
toronto
,
canada
On
site
train
in
europ
,
canada
and
the
US
.
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
canvas-elementclassroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
.
If
you
are
interest
in
an
instructor-l
classroom
train
in
canada
or
the
US
,
you
may
have
a
look
at
the
python
cours
by
bernd
klein
at
bodenseo
©
kabliczech
-
fotolia.com
overview
of
python
cours
by
bernd
klein
.
quot
of
the
day
:
``
If
you
want
to
accomplish
someth
in
the
world
,
ideal
is
not
enough
-
you
need
to
choos
a
method
that
work
to
achiev
the
goal
.
''
(
richard
stallmann
)
graphic
user
interfac
A
graphic
user
interfac
(
gui
)
is
a
type
of
user
interfac
that
allow
user
to
interact
with
electron
devic
in
a
graphic
way
,
i.e
.
with
imag
,
rather
than
text
command
.
origin
interact
user
interfac
to
comput
were
not
graphic
,
they
were
text
orient
and
usual
consist
of
command
,
which
had
to
be
rememb
.
the
do
oper
system
from
microsoft
and
the
bourn
shell
under
linux
are
exampl
of
such
user-comput
interfac
.
data
protect
declar
data
protect
declar
previou
chapter
:
entri
widget
next
chapter
:
slider
canva
widget
introduct
the
canva
widget
suppli
graphic
facil
for
tkinter
.
among
these
graphic
object
are
line
,
circl
,
imag
,
and
even
other
widget
.
with
thi
widget
it
's
possibl
to
draw
graph
and
plot
,
creat
graphic
editor
,
and
implement
variou
kind
of
custom
widget
.
We
demonstr
in
our
first
exampl
,
how
to
draw
a
line
.
the
method
create_lin
(
coord
,
option
)
is
use
to
draw
a
straight
line
.
the
coordin
``
coord
''
are
given
as
four
integ
number
:
x1
,
y1
,
x2
,
y2
thi
mean
that
the
line
goe
from
the
point
(
x1
,
y1
)
to
the
point
(
x2
,
y2
)
after
these
coordin
follow
a
comma
separ
list
of
addit
paramet
,
which
may
be
empti
.
We
set
,
for
exampl
,
the
colour
of
the
line
to
the
special
green
of
our
websit
:
fill=
''
#
476042
''
We
kept
the
first
exampl
intent
veri
simpl
.
We
creat
a
canva
and
draw
a
straight
horizont
line
into
thi
canva
.
thi
line
vertic
cut
the
canva
into
two
area
.
the
cast
to
an
integ
valu
in
the
assign
``
y
=
int
(
canvas_height
/
2
)
''
is
superflu
,
becaus
create_lin
can
work
with
float
valu
as
well
.
they
are
automat
turn
into
integ
valu
.
In
the
follow
you
can
see
the
code
of
our
first
simpl
script
:
from
tkinter
import
*
master
=
Tk
(
)
canvas_width
=
80
canvas_height
=
40
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
)
y
=
int
(
canvas_height
/
2
)
w.create_lin
(
0
,
y
,
canvas_width
,
y
,
fill=
''
#
476042
''
)
mainloop
(
)
If
we
start
thi
program
,
use
python
3
,
we
get
the
follow
window
:
for
creat
rectangl
we
have
the
method
create_rectangl
(
coord
,
option
)
.
coord
is
again
defin
by
two
point
,
but
thi
time
the
first
one
is
the
top
left
point
and
the
bottom
right
point
of
the
rectangl
.
the
window
,
you
see
abov
,
is
creat
by
the
follow
python
tkinter
code
:
from
tkinter
import
*
master
=
Tk
(
)
w
=
canva
(
master
,
width=200
,
height=100
)
w.pack
(
)
w.create_rectangl
(
50
,
20
,
150
,
80
,
fill=
''
#
476042
''
)
w.create_rectangl
(
65
,
35
,
135
,
65
,
fill=
''
yellow
''
)
w.create_lin
(
0
,
0
,
50
,
20
,
fill=
''
#
476042
''
,
width=3
)
w.create_lin
(
0
,
100
,
50
,
80
,
fill=
''
#
476042
''
,
width=3
)
w.create_lin
(
150,20
,
200
,
0
,
fill=
''
#
476042
''
,
width=3
)
w.create_lin
(
150
,
80
,
200
,
100
,
fill=
''
#
476042
''
,
width=3
)
mainloop
(
)
the
follow
imag
with
the
coordin
will
simplifi
the
understand
of
applic
of
create_lin
and
create_rectangl
in
our
previou
exampl
.
text
on
canva
We
demonstr
now
how
to
print
text
on
a
canva
.
We
will
extend
and
modifi
the
previou
exampl
for
thi
purpos
.
the
method
create_text
(
)
can
be
appli
to
a
canva
object
to
write
text
on
it
.
the
first
two
paramet
are
the
x
and
the
y
posit
of
the
text
object
.
By
default
,
the
text
is
centr
on
thi
posit
.
you
can
overrid
thi
with
the
anchor
option
.
for
exampl
,
if
the
coordin
should
be
the
upper
left
corner
,
set
the
anchor
to
NW
.
with
the
keyword
paramet
text
,
we
can
defin
the
actual
text
to
be
display
on
the
canva
.
from
tkinter
import
*
canvas_width
=
200
canvas_height
=
100
colour
=
(
``
#
476042
''
,
``
yellow
''
)
box=
[
]
for
ratio
in
(
0.2
,
0.35
)
:
box.append
(
(
canvas_width
*
ratio
,
canvas_height
*
ratio
,
canvas_width
*
(
1
-
ratio
)
,
canvas_height
*
(
1
-
ratio
)
)
)
master
=
Tk
(
)
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
)
for
i
in
rang
(
2
)
:
w.create_rectangl
(
box
[
i
]
[
0
]
,
box
[
i
]
[
1
]
,
box
[
i
]
[
2
]
,
box
[
i
]
[
3
]
,
fill=colour
[
i
]
)
w.create_lin
(
0
,
0
,
#
origin
of
canva
box
[
0
]
[
0
]
,
box
[
0
]
[
1
]
,
#
coordin
of
left
upper
corner
of
the
box
[
0
]
fill=colour
[
0
]
,
width=3
)
w.create_lin
(
0
,
canvas_height
,
#
lower
left
corner
of
canva
box
[
0
]
[
0
]
,
box
[
0
]
[
3
]
,
#
lower
left
corner
of
box
[
0
]
fill=colour
[
0
]
,
width=3
)
w.create_lin
(
box
[
0
]
[
2
]
,
box
[
0
]
[
1
]
,
#
right
upper
corner
of
box
[
0
]
canvas_width
,
0
,
#
right
upper
corner
of
canva
fill=colour
[
0
]
,
width=3
)
w.create_lin
(
box
[
0
]
[
2
]
,
box
[
0
]
[
3
]
,
#
lower
right
corner
pf
box
[
0
]
canvas_width
,
canvas_height
,
#
lower
right
corner
of
canva
fill=colour
[
0
]
,
width=3
)
w.create_text
(
canvas_width
/
2
,
canvas_height
/
2
,
text=
''
python
''
)
mainloop
(
)
though
the
code
of
our
exampl
program
is
chang
drastic
,
the
graphic
result
look
still
the
same
except
for
the
text
``
python
''
:
you
can
understand
the
benefit
of
our
code
chang
,
if
you
chang
for
exampl
the
height
of
the
canva
to
190
and
the
width
to
90
and
modifi
the
ratio
for
the
first
box
to
0.3
.
imag
do
thi
in
the
code
of
our
first
exampl
.
It
would
be
a
lot
tougher
.
the
result
look
like
thi
:
oval
object
An
oval
(
or
an
ovoid
)
is
ani
curv
resembl
an
egg
(
ovum
mean
egg
in
latin
)
.
It
resembl
an
ellips
,
but
it
is
not
an
ellips
.
the
term
``
oval
''
is
not
well-defin
.
mani
differ
curv
are
call
oval
,
but
they
all
have
in
common
:
they
are
differenti
,
simpl
(
not
self-intersect
)
,
convex
,
close
,
plane
curv
they
are
veri
similar
in
shape
to
ellips
there
is
at
least
one
axi
of
symmetri
the
word
oval
stem
from
latin
ovum
mean
``
egg
''
and
that
's
what
it
is
:
A
figur
which
resembl
the
form
of
an
egg
.
An
oval
is
construct
from
two
pair
of
arc
,
with
two
differ
radii
A
circl
is
a
special
case
of
an
oval
.
We
can
creat
an
oval
on
a
canva
c
with
the
follow
method
:
id
=
c.create_ov
(
x0
,
y0
,
x1
,
y1
,
option
,
...
)
thi
method
return
the
object
ID
of
the
new
oval
object
on
the
canva
C.
the
follow
script
draw
a
circl
around
the
point
(
75,75
)
with
the
radiu
25
:
from
tkinter
import
*
canvas_width
=
190
canvas_height
=150
master
=
Tk
(
)
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
)
w.create_ov
(
50,50,100,100
)
mainloop
(
)
We
can
defin
a
small
function
draw
circl
by
use
the
create_ov
(
)
method
.
def
circl
(
canva
,
x
,
y
,
r
)
:
id
=
canvas.create_ov
(
x-r
,
y-r
,
x+r
,
y+r
)
return
id
paint
interact
into
a
canva
We
want
to
write
an
applic
for
paint
or
write
into
a
canva
.
unfortun
,
there
is
no
way
to
paint
just
one
dot
into
a
canva
.
but
we
can
overcom
thi
problem
by
use
a
small
oval
:
from
tkinter
import
*
canvas_width
=
500
canvas_height
=
150
def
paint
(
event
)
:
python_green
=
``
#
476042
''
x1
,
y1
=
(
event.x
-
1
)
,
(
event.i
-
1
)
x2
,
y2
=
(
event.x
+
1
)
,
(
event.i
+
1
)
w.create_ov
(
x1
,
y1
,
x2
,
y2
,
fill
=
python_green
)
master
=
Tk
(
)
master.titl
(
``
paint
use
oval
''
)
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
expand
=
ye
,
fill
=
both
)
w.bind
(
``
<
b1-motion
>
''
,
paint
)
messag
=
label
(
master
,
text
=
``
press
and
drag
the
mous
to
draw
''
)
message.pack
(
side
=
bottom
)
mainloop
(
)
draw
polygon
If
you
want
to
draw
a
polygon
,
you
have
to
provid
at
least
three
coordin
point
:
create_polygon
(
x0
,
y0
,
x1
,
y1
,
x2
,
y2
,
...
)
In
the
follow
exampl
we
draw
a
triangl
use
thi
method
:
from
tkinter
import
*
canvas_width
=
200
canvas_height
=200
python_green
=
``
#
476042
''
master
=
Tk
(
)
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
)
point
=
[
0,0
,
canvas_width
,
canvas_height/2
,
0
,
canvas_height
]
w.create_polygon
(
point
,
outline=python_green
,
fill='yellow
'
,
width=3
)
mainloop
(
)
It
look
like
thi
:
when
you
read
thi
,
there
may
or
not
be
christma
soon
,
but
we
present
a
way
to
improv
your
next
christma
with
some
star
,
creat
by
python
and
tkinter
.
the
first
star
is
straight
forward
with
hardli
ani
program
skill
involv
:
from
tkinter
import
*
canvas_width
=
200
canvas_height
=200
python_green
=
``
#
476042
''
master
=
Tk
(
)
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
)
point
=
[
100
,
140
,
110
,
110
,
140
,
100
,
110
,
90
,
100
,
60
,
90
,
90
,
60
,
100
,
90
,
110
]
w.create_polygon
(
point
,
outline=python_green
,
fill='yellow
'
,
width=3
)
mainloop
(
)
As
we
have
mention
,
thi
approach
is
veri
unskil
.
what
if
we
have
to
chang
the
size
or
the
thick
of
the
star
?
We
have
to
chang
all
the
point
manual
,
which
is
of
cours
an
error-pron
and
tediou
task
to
do
.
So
,
we
present
a
new
version
of
the
previou
script
which
involv
more
``
program
''
and
program
skill
.
first
,
we
put
the
creation
of
the
star
in
a
function
,
and
we
use
an
origin
point
and
two
length
p
and
t
to
creat
the
star
:
our
new
improv
program
look
like
thi
now
:
from
tkinter
import
*
canvas_width
=
400
canvas_height
=400
python_green
=
``
#
476042
''
def
polygon_star
(
canva
,
x
,
y
,
p
,
t
,
outline=python_green
,
fill='yellow
'
,
width
=
1
)
:
point
=
[
]
for
i
in
(
1
,
-1
)
:
points.extend
(
(
x
,
y
+
i*p
)
)
points.extend
(
(
x
+
i*t
,
y
+
i*t
)
)
points.extend
(
(
x
+
i*p
,
y
)
)
points.extend
(
(
x
+
i*t
,
y
-
i
*
t
)
)
print
(
point
)
canvas.create_polygon
(
point
,
outline=outlin
,
fill=fil
,
width=width
)
master
=
Tk
(
)
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
)
p
=
50
t
=
15
nstep
=
10
step_x
=
int
(
canvas_width
/
nstep
)
step_i
=
int
(
canvas_height
/
nstep
)
for
i
in
rang
(
1
,
nstep
)
:
polygon_star
(
w
,
i*step_x
,
i*step_i
,
p
,
t
,
outline='r
'
,
fill='gold
'
,
width=3
)
polygon_star
(
w
,
i*step_x
,
canvas_height
-
i*step_i
,
p
,
t
,
outline='r
'
,
fill='gold
'
,
width=3
)
mainloop
(
)
the
result
look
even
more
like
xma
and
we
are
sure
that
nobodi
doubt
that
it
would
be
hell
to
defin
the
polygon
point
directli
,
as
we
did
in
our
first
star
exampl
:
bitmap
the
method
create_bitmap
(
)
can
be
be
use
to
includ
a
bitmap
on
a
canva
.
the
follow
bitmap
are
avail
on
all
platform
:
``
error
''
,
``
gray75
''
,
``
gray50
''
,
``
gray25
''
,
``
gray12
''
,
``
hourglass
''
,
``
info
''
,
``
questhead
''
,
``
question
''
,
``
warn
''
the
follow
script
put
all
of
these
bitmap
on
a
canva
:
from
tkinter
import
*
canvas_width
=
300
canvas_height
=80
master
=
Tk
(
)
canva
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
canvas.pack
(
)
bitmap
=
[
``
error
''
,
``
gray75
''
,
``
gray50
''
,
``
gray25
''
,
``
gray12
''
,
``
hourglass
''
,
``
info
''
,
``
questhead
''
,
``
question
''
,
``
warn
''
]
nstep
=
len
(
bitmap
)
step_x
=
int
(
canvas_width
/
nstep
)
for
i
in
rang
(
0
,
nstep
)
:
canvas.create_bitmap
(
(
i+1
)
*step_x
-
step_x/2,50
,
bitmap=bitmap
[
i
]
)
mainloop
(
)
the
result
look
like
thi
:
the
canva
imag
item
the
canva
method
create_imag
(
x0
,
y0
,
option
...
)
is
use
to
draw
an
imag
on
a
canva
.
create_imag
doe
n't
accept
an
imag
directli
.
It
use
an
object
which
is
creat
by
the
photoimag
(
)
method
.
the
photoimag
class
can
onli
read
gif
and
pgm/ppm
imag
from
file
from
tkinter
import
*
canvas_width
=
300
canvas_height
=300
master
=
Tk
(
)
canva
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
canvas.pack
(
)
img
=
photoimag
(
file=
''
rocks.ppm
''
)
canvas.create_imag
(
20,20
,
anchor=nw
,
image=img
)
mainloop
(
)
the
window
creat
by
the
previou
python
script
look
like
thi
:
exercis
write
a
function
,
which
draw
a
checker
pattern
into
a
canva
.
the
function
get
call
with
checker
(
canva
,
line_dist
)
.
``
canva
''
is
the
canva
object
,
which
will
be
drawn
into
.
line_dist
is
the
distanc
between
the
vertic
and
horizont
line
.
solut
from
tkinter
import
*
def
checker
(
canva
,
line_dist
)
:
#
vertic
line
at
an
interv
of
``
line_dist
''
pixel
for
x
in
rang
(
line_dist
,
canvas_width
,
line_dist
)
:
canvas.create_lin
(
x
,
0
,
x
,
canvas_height
,
fill=
''
#
476042
''
)
#
horizont
line
at
an
interv
of
``
line_dist
''
pixel
for
y
in
rang
(
line_dist
,
canvas_height
,
line_dist
)
:
canvas.create_lin
(
0
,
y
,
canvas_width
,
y
,
fill=
''
#
476042
''
)
master
=
Tk
(
)
canvas_width
=
200
canvas_height
=
100
w
=
canva
(
master
,
width=canvas_width
,
height=canvas_height
)
w.pack
(
)
checker
(
w,10
)
mainloop
(
)
the
result
of
the
previou
script
look
like
thi
:
previou
chapter
:
entri
widget
next
chapter
:
slider
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
