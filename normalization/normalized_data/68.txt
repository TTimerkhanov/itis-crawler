python2
tutori
:
A
tutori
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
,
dtypenumer
oper
on
numpi
arrayschang
the
dimens
of
arrayspython
,
numpi
and
probabilityweight
choic
and
weight
samplescr
of
synthet
test
databoolean
mask
of
arraysmatrix
arithmeticread
and
write
ndarraysmatplotlib
introductionspin
and
tickslegend
and
annotationsmultipl
figur
and
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
with
nanbin
datapanda
tutori
continu
:
multi-level
indexingdata
visual
with
panda
and
pythonpython
,
date
and
timepython
,
panda
and
timeserieslinear
combin
python
In
greek
mytholog
,
python
is
the
name
of
a
a
huge
serpent
and
sometim
a
dragon
.
python
had
been
kill
by
the
god
apollo
at
delphi
.
python
wa
creat
out
of
the
slime
and
mud
left
after
the
great
flood
.
He
wa
appoint
by
gaia
(
mother
earth
)
to
guard
the
oracl
of
delphi
,
known
as
pytho
.
the
program
languag
python
ha
not
been
creat
out
of
slime
and
mud
but
out
of
the
program
languag
abc
.
It
ha
been
devis
by
a
dutch
programm
,
name
guido
van
rossum
,
in
amsterdam
.
origin
of
python
guido
van
rossum
wrote
the
follow
about
the
origin
of
python
in
a
foreword
for
the
book
``
program
python
''
by
mark
lutz
in
1996
:
``
over
six
year
ago
,
in
decemb
1989
,
I
wa
look
for
a
``
hobbi
''
program
project
that
would
keep
me
occupi
dure
the
week
around
christma
.
My
offic
(
a
government-run
research
lab
in
amsterdam
)
would
be
close
,
but
I
had
a
home
comput
,
and
not
much
els
on
my
hand
.
I
decid
to
write
an
interpret
for
the
new
script
languag
I
had
been
think
about
late
:
a
descend
of
abc
that
would
appeal
to
unix/c
hacker
.
I
chose
python
as
a
work
titl
for
the
project
,
be
in
a
slightli
irrever
mood
(
and
a
big
fan
of
monti
python
's
fli
circu
)
.
''
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
classroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
Â©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
Do
n't
have
good
idea
if
you
are
n't
will
to
be
respons
for
them.
``
(
alan
perli
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
panda
data
file
next
chapter
:
bin
data
deal
with
nan
introduct
nan
wa
introduc
,
at
least
offici
,
by
the
ieee
standard
for
floating-point
arithmet
(
ieee
754
)
.
It
is
a
technic
standard
for
floating-point
comput
establish
in
1985
-
mani
year
befor
python
wa
invent
,
and
even
a
longer
time
befor
panda
wa
creat
-
by
the
institut
of
electr
and
electron
engin
(
ieee
)
.
It
wa
introduc
to
solv
problem
found
in
mani
float
point
implement
that
made
them
difficult
to
use
reliabl
and
portabl
.
thi
standard
ad
nan
to
the
arithmet
format
:
``
arithmet
format
:
set
of
binari
and
decim
floating-point
data
,
which
consist
of
finit
number
(
includ
sign
zero
and
subnorm
number
)
,
infin
,
and
special
'not
a
number
'
valu
(
nan
)
''
'nan
'
in
pythonpython
know
nan
valu
as
well
.
We
can
creat
it
with
``
float
''
:
n1
=
float
(
``
nan
''
)
n2
=
float
(
``
nan
''
)
n3
=
float
(
``
nan
''
)
n4
=
float
(
``
nan
''
)
print
(
n1
,
n2
,
n3
,
n4
)
nan
nan
nan
nan
``
nan
''
is
also
part
of
the
math
modul
sinc
python
3.5
:
import
math
n1
=
math.nan
print
(
n1
)
print
(
math.isnan
(
n1
)
)
nan
true
warn
:
Do
not
perform
comparison
between
``
nan
''
valu
or
``
nan
''
valu
and
regular
number
.
A
simpl
or
simplifi
reason
is
thi
:
two
thing
are
``
not
a
number
''
,
so
they
can
be
anyth
but
most
probabl
not
the
same
.
abov
all
there
is
no
way
of
order
nan
:
print
(
n1
==
n2
)
print
(
n1
==
0
)
print
(
n1
==
100
)
print
(
n2
<
0
)
fals
fals
fals
fals
nan
in
pandasexampl
without
nansbefor
we
will
work
with
nan
data
,
we
will
process
a
file
without
ani
nan
valu
.
the
data
file
temperatures.csv
contain
the
temperatur
data
of
six
sensor
taken
everi
15
minut
between
6:00
to
19.15
o'clock
.
read
in
the
data
file
can
be
done
with
the
read_csv
function
:
import
panda
as
pd
df
=
pd.read_csv
(
``
data1/temperatures.csv
''
,
sep=
''
;
''
,
decimal=
''
,
''
)
df.loc
[
:3
]
the
previou
code
return
the
follow
result
:
time
sensor1
sensor2
sensor3
sensor4
sensor5
sensor6
0
06:00:00
14.3
13.7
14.2
14.3
13.5
13.6
1
06:15:00
14.5
14.5
14.0
15.0
14.5
14.7
2
06:30:00
14.6
15.1
14.8
15.3
14.0
14.2
3
06:45:00
14.8
14.5
15.6
15.2
14.7
14.6
We
want
to
calcul
the
avarag
temperatur
per
measur
point
over
all
the
sensor
.
We
can
use
the
datafram
method
'mean
'
.
If
we
use
'mean
'
without
paramet
it
will
sum
up
the
sensor
column
,
which
is
n't
what
we
want
,
but
it
may
be
interest
as
well
:
df.mean
(
)
the
abov
python
code
return
the
follow
result
:
sensor1
19.775926
sensor2
19.757407
sensor3
19.840741
sensor4
20.187037
sensor5
19.181481
sensor6
19.437037
dtype
:
float64
average_temp_seri
=
df.mean
(
axis=1
)
print
(
average_temp_seri
[
:8
]
)
0
13.933333
1
14.533333
2
14.666667
3
14.900000
4
15.083333
5
15.116667
6
15.283333
7
15.116667
dtype
:
float64
sensor
=
df.columns.valu
[
1
:
]
#
all
column
except
the
time
column
will
be
remov
:
df
=
df.drop
(
sensor
,
axis=1
)
print
(
df
[
:5
]
)
time
0
06:00:00
1
06:15:00
2
06:30:00
3
06:45:00
4
07:00:00
We
will
assign
now
the
averag
temperatur
valu
as
a
new
column
'temperatur
'
:
#
best
practic
:
df
=
df.assign
(
temperature=average_temp_seri
)
#
inplac
option
not
avail
#
altern
:
#
df.loc
[
:
,
''
temperatur
''
]
=
average_temp_seri
df
[
:3
]
the
abov
code
return
the
follow
result
:
time
temperatur
0
06:00:00
13.933333
1
06:15:00
14.533333
2
06:30:00
14.666667
exampl
with
nansw
will
use
now
a
data
file
similar
to
the
previou
temperatur
csv
,
but
thi
time
we
will
have
to
cope
with
nan
data
,
when
the
sensor
malfunct
.
We
will
creat
a
temperatur
datafram
,
in
which
some
data
is
not
defin
,
i.e
.
nan
.
We
will
use
and
chang
the
data
from
the
the
temperatures.csv
file
:
temp_df
=
pd.read_csv
(
``
data1/temperatures.csv
''
,
sep=
''
;
''
,
index_col=0
,
decimal=
''
,
''
)
We
will
randomli
assign
some
nan
valu
into
the
data
frame
.
for
thi
purpos
,
we
will
use
the
where
method
from
datafram
.
If
we
appli
where
to
a
datafram
object
df
,
i.e
.
df.where
(
cond
,
other_df
)
,
it
will
return
an
object
of
same
shape
as
df
and
whose
correspond
entri
are
from
df
where
the
correspond
element
of
cond
is
true
and
otherwis
are
taken
from
other_df
.
befor
we
continu
with
our
task
,
we
will
demonstr
the
way
of
work
of
where
with
some
simpl
exampl
:
s
=
pd.seri
(
rang
(
5
)
)
s.where
(
s
>
0
)
import
numpi
as
np
A
=
np.random.randint
(
1
,
30
,
(
4
,
2
)
)
df
=
pd.datafram
(
A
,
columns=
[
'foo
'
,
'bar
'
]
)
m
=
df
%
2
==
0
df.where
(
m
,
-df
,
inplace=tru
)
df
after
have
execut
the
python
code
abov
we
receiv
the
follow
:
foo
bar
0
-9
4
1
-7
24
2
-29
12
3
-15
2
for
our
task
,
we
need
to
creat
a
datafram
'nan_df
'
,
which
consist
pure
of
nan
valu
and
ha
the
same
shape
as
our
temperatur
datafram
'temp_df
'
.
We
will
use
thi
datafram
in
'where
'
.
We
also
need
a
datafram
with
the
condit
``
df_bool
''
as
true
valu
.
for
thi
purpos
we
will
creat
a
datafram
with
random
valu
between
0
and
1
and
by
appli
'random_df
<
0.8
'
we
get
the
df_bool
datafram
,
in
which
about
20
%
of
the
valu
will
be
true
:
random_df
=
pd.datafram
(
np.random.random
(
size=temp_df.shap
)
,
columns=temp_df.columns.valu
,
index=temp_df.index
)
nan_df
=
pd.datafram
(
np.nan
,
columns=temp_df.columns.valu
,
index=temp_df.index
)
df_bool
=
random_df
<
0.8
df_bool
[
:5
]
the
abov
python
code
return
the
follow
output
:
sensor1
sensor2
sensor3
sensor4
sensor5
sensor6
time
06:00:00
fals
true
true
true
true
true
06:15:00
true
true
true
true
true
true
06:30:00
true
true
fals
fals
fals
fals
06:45:00
true
fals
true
true
true
true
07:00:00
fals
true
true
fals
true
true
final
,
we
have
everyth
togheth
to
creat
our
datafram
with
distrub
measur
:
disturbed_data
=
temp_df.wher
(
df_bool
,
nan_df
)
disturbed_data.to_csv
(
``
data1/temperatures_with_nan.csv
''
)
disturbed_data
[
:10
]
We
receiv
the
follow
result
:
sensor1
sensor2
sensor3
sensor4
sensor5
sensor6
time
06:00:00
nan
13.7
14.2
14.3
13.5
13.6
06:15:00
14.5
14.5
14.0
15.0
14.5
14.7
06:30:00
14.6
15.1
nan
nan
nan
nan
06:45:00
14.8
nan
15.6
15.2
14.7
14.6
07:00:00
nan
14.9
15.7
nan
14.0
15.3
07:15:00
nan
15.2
14.6
15.3
15.5
14.9
07:30:00
15.4
15.3
15.6
15.6
nan
15.1
07:45:00
15.5
14.8
15.4
15.5
14.6
14.9
08:00:00
15.7
15.6
15.9
nan
15.4
nan
08:15:00
15.9
15.8
nan
16.9
nan
16.2
use
dropna
on
the
dataframe'dropna
'
is
a
datafram
method
.
If
we
call
thi
method
without
argument
,
it
will
return
an
object
where
everi
row
is
ommit
,
in
which
data
are
miss
,
i.e
.
some
valu
is
nan
:
df
=
disturbed_data.dropna
(
)
df
the
code
abov
return
the
follow
:
sensor1
sensor2
sensor3
sensor4
sensor5
sensor6
time
06:15:00
14.5
14.5
14.0
15.0
14.5
14.7
07:45:00
15.5
14.8
15.4
15.5
14.6
14.9
09:00:00
16.8
17.3
17.7
17.8
15.9
16.1
10:00:00
19.0
19.7
18.8
18.9
17.5
18.9
12:30:00
23.6
24.2
23.6
24.1
22.1
22.5
13:45:00
22.7
23.3
22.2
22.2
21.0
23.0
14:00:00
22.5
23.0
22.1
24.1
22.5
22.7
15:30:00
21.4
21.3
21.7
21.9
21.0
21.7
16:15:00
20.9
20.6
20.8
20.5
20.3
21.6
17:30:00
20.1
20.5
19.7
19.7
18.7
19.7
19:00:00
19.2
18.7
20.1
19.9
18.3
19.3
19:15:00
19.0
19.7
18.9
19.2
18.5
19.4
'dropna
'
can
also
be
use
to
drop
all
column
in
which
some
valu
are
nan
.
thi
can
be
achiev
by
assign
1
to
the
axi
paramet
.
the
default
valu
is
fals
,
as
we
have
seen
in
our
previou
exampl
.
As
everi
column
from
our
sensor
contain
nan
valu
,
they
will
all
disappear
:
df
=
disturbed_data.dropna
(
axis=1
)
df
[
:5
]
the
abov
code
return
the
follow
:
time
06:00:00
06:15:00
06:30:00
06:45:00
07:00:00
let
us
chang
our
task
:
We
onli
want
to
get
rid
of
all
the
row
,
which
contain
more
than
one
nan
valu
.
the
paramet
'thresh
'
is
ideal
for
thi
task
.
It
can
be
set
to
the
minimum
number
.
'thresh
'
is
set
to
an
integ
valu
,
which
defin
the
minimum
number
of
non-nan
valu
.
We
have
six
temperatur
valu
in
everi
row
.
set
'thresh
'
to
5
make
sure
that
we
will
have
at
least
5
valid
float
in
everi
remain
row
:
cleansed_df
=
disturbed_data.dropna
(
thresh=5
,
axis=0
)
cleansed_df
[
:7
]
the
previou
code
return
the
follow
output
:
sensor1
sensor2
sensor3
sensor4
sensor5
sensor6
time
06:15:00
nan
14.5
14.0
15.0
14.5
14.7
06:45:00
14.8
nan
15.6
15.2
14.7
14.6
07:00:00
15.0
14.9
15.7
15.6
14.0
15.3
07:30:00
15.4
15.3
15.6
15.6
14.7
15.1
07:45:00
15.5
14.8
15.4
15.5
14.6
14.9
08:15:00
15.9
15.8
15.9
16.9
nan
16.2
08:30:00
16.1
15.7
16.1
15.9
14.9
15.2
now
we
will
calcul
the
mean
valu
again
,
but
thi
time
on
the
datafram
'cleansed_df
'
,
i.e
.
where
we
have
taken
out
all
the
row
,
where
more
than
one
nan
valu
occur
.
average_temp_seri
=
cleansed_df.mean
(
axis=1
)
sensor
=
cleansed_df.columns.valu
df
=
cleansed_df.drop
(
sensor
,
axis=1
)
#
best
practic
:
df
=
df.assign
(
temperature=average_temp_seri
)
#
inplac
option
not
avail
df
[
:6
]
the
abov
python
code
return
the
follow
output
:
temperatur
time
06:15:00
14.540000
06:45:00
14.980000
07:00:00
15.083333
07:30:00
15.283333
07:45:00
15.116667
08:15:00
16.140000
previou
chapter
:
panda
data
file
next
chapter
:
bin
data
Â©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
