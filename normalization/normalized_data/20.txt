python2
tutori
:
A
tutori
python
cours
advanc
topic
introduct
into
the
sy
modulepython
and
the
shellfork
and
fork
in
pythonintroduct
into
threadspip
,
pipe
and
``
99
bottl
of
beer
''
python
network
scannergraph
theori
and
graph
in
pythongraph
:
pygraphgraphsa
python
class
for
polynomi
functionscurri
in
pythonfinit
state
machin
in
pythontur
machin
in
pythonlevenshtein
distanceexampl
for
recurs
program
:
tower
of
hanoimastermind
/
bull
and
cowscreat
dynam
websit
with
wsgidynam
websit
with
mod_pythondynam
websit
with
pylonspython
,
sql
,
mysql
and
sqlitepython
score
dynam
websit
not
about
the
web
neither
on
the
dynam
websit
,
but
it
fit
anyway
:
``
sometim
one
creat
a
dynam
impress
by
say
someth
,
and
sometim
one
creat
as
signific
an
impress
by
remain
silent
.
''
(
dalai
lama
)
support
by
:
python
seminar
and
train
cours
all
over
the
world
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
classroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
comput
scienc
is
no
more
about
comput
than
astronomi
is
about
telescop
.
''
(
edsger
dijkstra
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
mastermind
/
bull
and
cow
next
chapter
:
dynam
websit
with
mod_python
creat
dynam
websit
with
python
and
wsgi
introduct
pleas
notic
:
work
on
thi
topic
is
under
process
.
(
august
2014
)
wsgi
is
the
web
server
gateway
interfac
.
It
is
a
specif
that
describ
how
web
server
commun
with
web
applic
.
It
is
a
framework
for
the
python
.
It
wa
origin
specifi
in
2003
.
wsgi
ha
becom
a
standard
for
python
web
applic
develop
.
wsgi
ha
been
specifi
in
pep
3333
.
the
abstract
say
``
thi
document
specifi
a
propos
standard
interfac
between
web
server
and
python
web
applic
or
framework
,
to
promot
web
applic
portabl
across
a
varieti
of
web
server
.
''
simpl
exampl
with
wsgi
We
demonstr
the
way
of
work
with
a
simpl
exampl
,
actual
as
simpl
as
simpl
can
be
.
all
it
doe
will
be
to
greet
a
visitor
of
the
websit
with
``
hello
my
friend
!
``
,
we
just
had
enough
of
``
hello
world
''
.
from
wsgiref.simple_serv
import
make_serv
def
applic
(
environ
,
start_respons
)
:
start_respons
(
``
200
OK
''
,
[
(
``
content-typ
''
,
``
text/plain
''
)
]
)
return
[
``
hello
my
friend
!
``
.encod
(
``
utf-8
''
)
]
server
=
make_serv
(
'localhost
'
,
8080
,
applic
)
server.serve_forev
(
)
you
can
save
thi
program
wherev
you
want
on
your
comput
.
If
you
start
it
with
``
python3
greeting.pi
''
,
you
can
visit
the
url
``
localhost:8080
''
with
a
browser
of
your
choic
.
you
should
see
now
:
``
hello
my
friend
!
''
thi
text
will
appear
within
your
browser
.
On
the
termin
,
you
will
the
an
output
,
which
look
similar
to
thi
:
$
python3
hello_wsgi.pi
127.0.0.1
-
-
[
19/aug/2014
10:31:39
]
``
get
/
http/1.1
''
200
16
you
may
have
notic
that
we
use
python
3
to
start
the
server
.
the
program
run
with
python
2
as
well
.
there
are
lot
of
similar
exampl
out
there
on
the
web
which
do
n't
work
for
python
3
.
the
reason
is
in
mani
case
,
that
they
do
n't
return
a
byte
string
,
but
a
``
simpl
''
str
class
instanc
.
So
,
if
you
drop
the
method
call
'.encod
(
``
utf-8
''
)
'
,
the
program
will
onli
run
with
pyhton2
but
not
with
python3
anymor
.
We
use
the
simpl
refer
implement
wsgiref
of
wsgi
,
which
is
includ
in
python
's
standard
librari
.
It
's
easier
to
for
test
purpos
.
the
make_serv
method
take
five
paramet
:
host
:
the
host
name
can
be
'localhost
'
or
ani
other
host
name
,
like
your
server
name
``
server
=
make_serv
(
'saturn
'
,
8080
,
applic
)
''
or
a
domain
or
IP
address
,
e.g
.
server
=
make_serv
(
'192.168.170.128
'
,
8080
,
applic
)
,
which
make
it
possibl
to
access
thi
web
server
from
anoth
comput
in
the
network
.
port
:
We
use
8080
as
the
port
number
app
:
thi
ha
to
be
a
refer
to
a
function
,
which
is
return
a
list
with
the
result
.
everi
element
of
thi
list
ha
to
be
a
byte
string
.
We
will
not
discuss
the
option
keyword
paramet
``
server_class=
,
handler_class
''
the
function
``
app
''
-
use
as
the
third
paramet
of
make_serv
-
need
two
paramet
:
environ
start_respons
:
start_respons
ha
to
be
a
callabl
with
three
paramet
:
statu
,
response_head
,
exc_info=non
statu
contain
the
numer
http
statu
code
of
the
respons
,
e.g
.
``
200
OK
''
,
``
404
not
found
''
,
or
``
500
server
error
''
.
response_head
contain
the
http
messag
for
the
statu
code
use
.
exc_info
use
for
traceback
inform
is
option
.
anoth
exampl
the
follow
program
noth
new
.
It
's
just
the
previou
exampl
,
which
ha
to
be
extend
so
that
the
function
applic
return
the
first
30
line
of
text
from
the
novel
ulyss
by
jame
joyc
:
from
wsgiref.simple_serv
import
make_serv
def
applic
(
environ
,
start_respons
)
:
start_respons
(
``
200
OK
''
,
[
(
``
content-typ
''
,
``
text/plain
''
)
]
)
fh
=
open
(
``
ulysses.txt
''
)
line
=
[
fh.readlin
(
)
.encod
(
``
utf-8
''
)
for
i
in
rang
(
30
)
]
return
line
server
=
make_serv
(
'saturn
'
,
8080
,
applic
)
server.serve_forev
(
)
the
browser
output
look
like
thi
:
previou
chapter
:
mastermind
/
bull
and
cow
next
chapter
:
dynam
websit
with
mod_python
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
