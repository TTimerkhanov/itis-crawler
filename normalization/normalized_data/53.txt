gui
program
with
python
:
dialog
in
tkinter
python
tkinter
cours
tkinter
tutori
say
hello
with
labelsmessag
widgetbuttonsvari
classesradiobuttonscheckboxesentri
widgetscanva
widgetssliderstext
widgetdialogslayout
managementbul
and
cow
/
mastermind
in
tkcreat
menusev
and
bind
thi
websit
is
creat
by
:
python
train
cours
in
toronto
,
canada
On
site
train
in
europ
,
canada
and
the
US
.
definit
A
dialogu
can
be
a
convers
between
two
or
more
person
;
particularli
,
a
formal
conserv
in
theatric
perform
or
in
scholast
exercis
.
It
is
also
a
written
composit
in
which
two
or
more
person
are
repres
as
convers
or
reason
on
some
topic
;
as
,
the
dialogu
of
plato
.
In
tkinter
or
Tk
(
or
more
gener
in
gui
program
)
a
dialogu
is
the
interact
between
the
user
of
the
gui
and
the
program
through
special
widget
.
alfr
hitchcock
wrote
about
a
differ
kind
of
dialogu
:
``
dialogu
should
simpli
be
a
sound
among
other
sound
,
just
someth
that
come
out
of
the
mouth
of
peopl
whose
eye
tell
the
stori
in
visual
term
.
''
(
alfr
hitchcock
)
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
dialog
in
tkinter
classroom
train
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
live
python
class
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
and
tkinter
cours
by
bernd
klein
at
bodenseo
.
you
can
attend
one
of
hi
python
cours
in
pari
,
london
,
toronto
,
berlin
,
munich
,
hamburg
,
amsterdam
,
den
haag
(
the
hagu
)
or
lake
constanc
/
zurich
.
It
is
also
possibl
to
book
an
on-sit
train
cours
at
your
compani
or
institut
.
quot
of
the
day
:
``
I
think
it
is
inevit
that
peopl
program
poorli
.
train
will
not
substanti
help
matter
.
We
have
to
learn
to
live
with
it
.
''
(
alan
perli
)
graphic
user
interfac
A
graphic
user
interfac
(
gui
)
is
a
type
of
user
interfac
that
allow
user
to
interact
with
electron
devic
in
a
graphic
way
,
i.e
.
with
imag
,
rather
than
text
command
.
origin
interact
user
interfac
to
comput
were
not
graphic
,
they
were
text
orient
and
usual
consist
of
command
,
which
had
to
be
rememb
.
the
do
oper
system
from
microsoft
and
the
bourn
shell
under
linux
are
exampl
of
such
user-comput
interfac
.
data
protect
declar
data
protect
declar
previou
chapter
:
text
widget
next
chapter
:
layout
manag
dialogu
and
messag
box
introduct
tkinter
(
and
TK
of
cours
)
provid
a
set
of
dialogu
(
dialog
in
american
english
spell
)
,
which
can
be
use
to
display
messag
box
,
show
warn
or
error
,
or
widget
to
select
file
and
colour
.
there
are
also
simpl
dialogu
,
ask
the
user
to
enter
string
,
integ
or
float
number
.
let
's
look
at
a
typic
gui
session
with
dialogu
and
messag
box
.
there
might
be
a
button
start
the
dialogu
,
like
the
``
quit
''
button
in
the
follow
window
:
push
the
``
quit
''
button
rais
the
verifi
window
:
let
's
assum
that
we
want
to
warn
user
that
the
``
quit
''
function
is
not
yet
implement
.
In
thi
case
we
can
use
the
warn
messag
to
inform
the
user
,
if
he
or
she
push
the
``
ye
''
button
:
If
somebodi
type
the
``
No
''
button
,
the
``
cancel
''
messag
box
is
rais
:
let
's
go
back
to
our
first
dialogu
with
the
``
quit
''
and
``
answer
''
button
.
If
the
``
answer
''
function
is
not
implement
,
it
might
be
use
to
use
the
follow
error
messag
box
:
python
script
,
which
implement
the
previou
dialogu
widg
:
from
tkinter
import
*
from
tkmessagebox
import
*
def
answer
(
)
:
showerror
(
``
answer
''
,
``
sorri
,
no
answer
avail
''
)
def
callback
(
)
:
if
askyesno
(
'verifi
'
,
'realli
quit
?
'
)
:
showwarn
(
'ye
'
,
'not
yet
implement
'
)
els
:
showinfo
(
'no
'
,
'quit
ha
been
cancel
'
)
button
(
text='quit
'
,
command=callback
)
.pack
(
fill=x
)
button
(
text='answ
'
,
command=answ
)
.pack
(
fill=x
)
mainloop
(
)
messag
box
the
messag
dialogu
are
provid
by
the
tkmessagebox
modul
.
the
tkmessagebox
consist
of
the
follow
function
,
which
correspond
to
dialog
window
:
askokcancel
(
title=non
,
message=non
,
**option
)
ask
if
oper
should
proceed
;
return
true
if
the
answer
is
ok
askquest
(
title=non
,
message=non
,
**option
)
ask
a
question
askretrycancel
(
title=non
,
message=non
,
**option
)
ask
if
oper
should
be
retri
;
return
true
if
the
answer
is
ye
askyesno
(
title=non
,
message=non
,
**option
)
ask
a
question
;
return
true
if
the
answer
is
ye
askyesnocancel
(
title=non
,
message=non
,
**option
)
ask
a
question
;
return
true
if
the
answer
is
ye
,
none
if
cancel
.
showerror
(
title=non
,
message=non
,
**option
)
show
an
error
messag
showinfo
(
title=non
,
message=non
,
**option
)
show
an
info
messag
showwarn
(
title=non
,
message=non
,
**option
)
show
a
warn
messag
open
file
dialogu
there
is
hardli
ani
seriou
applic
,
which
doe
n't
need
a
way
to
read
from
a
file
or
write
to
a
file
.
furthermor
,
such
an
applic
might
have
to
choos
a
directori
.
tkinter
provid
the
modul
tkfiledialog
for
these
purpos
.
from
tkinter
import
*
from
tkfiledialog
import
askopenfilenam
def
callback
(
)
:
name=
askopenfilenam
(
)
print
name
errmsg
=
'error
!
'
button
(
text='fil
open
'
,
command=callback
)
.pack
(
fill=x
)
mainloop
(
)
the
code
abov
creat
a
window
with
a
singl
button
with
the
text
``
file
open
''
.
If
the
button
is
push
,
the
follow
window
appear
:
the
look-and-feel
of
the
file-open-dialog
depend
on
the
gui
of
the
oper
system
.
the
abov
exampl
wa
creat
use
a
gnome
desktop
under
linux
.
If
we
start
the
same
program
under
window
7
,
it
look
like
thi
:
choos
a
colour
there
are
applic
where
the
user
should
have
the
possibl
to
select
a
colour
.
tkinter
provid
a
pop-up
menu
to
choos
a
colour
.
To
thi
purpos
we
have
to
import
the
tkcolorchoos
modul
and
have
to
use
the
method
askcolor
:
result
=
tkcolorchooser.askcolor
(
color
,
option=valu
,
...
)
If
the
user
click
the
OK
button
on
the
pop-up
window
,
respect
,
the
return
valu
of
askcolor
(
)
is
a
tupl
with
two
element
,
both
a
represent
of
the
chosen
colour
,
e.g
.
(
(
106
,
150
,
98
)
,
'
#
6a9662
'
)
the
first
element
return
[
0
]
is
a
tupl
(
R
,
G
,
B
)
with
the
rgb
represent
in
decim
valu
(
from
0
to
255
)
.
the
second
element
return
[
1
]
is
a
hexadecim
represent
of
the
chosen
colour
.
If
the
user
click
``
cancel
''
the
method
return
the
tupl
(
none
,
none
)
.
the
option
keyword
paramet
are
:
color
the
variabl
color
is
use
to
set
the
default
colour
to
be
display
.
If
color
is
not
set
,
the
initi
colour
will
be
grey
.
titl
the
text
assign
to
the
variabl
titl
will
appear
in
the
pop-up
window
's
titl
area
.
the
default
titl
is
``
color
''
.
parent
make
the
pop-up
window
appear
over
window
W.
the
default
behaviour
is
that
it
appear
over
the
root
window
.
let
's
have
a
look
at
an
exampl
:
from
tkinter
import
*
from
tkcolorchoos
import
askcolor
def
callback
(
)
:
result
=
askcolor
(
color=
''
#
6a9662
''
,
titl
=
``
bernd
's
colour
chooser
''
)
print
result
root
=
Tk
(
)
button
(
root
,
text='choos
color
'
,
fg=
''
darkgreen
''
,
command=callback
)
.pack
(
side=left
,
padx=10
)
button
(
text='quit
'
,
command=root.quit
,
fg=
''
red
''
)
.pack
(
side=left
,
padx=10
)
mainloop
(
)
the
look
and
feel
depend
on
the
oper
system
(
e.g
.
linux
or
window
)
and
the
chosen
gui
(
gnome
,
kde
and
so
on
)
.
the
follow
window
appear
,
if
you
use
gnome
:
use
the
same
script
under
window
7
give
us
the
follow
result
:
previou
chapter
:
text
widget
next
chapter
:
layout
manag
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
