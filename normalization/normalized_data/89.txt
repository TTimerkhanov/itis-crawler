numer
scientif
comput
python
function
creat
numpi
array
numer
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
dtypenumer
oper
numpi
arrayschang
dimens
arrayspython
numpi
probabilityweight
choic
weight
samplescr
synthet
test
databoolean
mask
arraysmatrix
arithmeticread
write
ndarraysmatplotlib
introductionspin
tickslegend
annotationsmultipl
figur
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
nanbin
datapanda
tutori
continu
multilevel
indexingdata
visual
panda
pythonpython
date
timepython
panda
timeserieslinear
combin
python
greek
mytholog
python
name
huge
serpent
sometim
dragon
python
kill
god
apollo
delphi
python
creat
slime
mud
left
great
flood
appoint
gaia
mother
earth
guard
oracl
delphi
known
pytho
program
languag
python
creat
slime
mud
program
languag
abc
devis
dutch
programm
name
guido
van
rossum
amsterdam
origin
python
guido
van
rossum
wrote
follow
origin
python
foreword
book
program
python
mark
lutz
six
year
ago
decemb
look
hobbi
program
project
would
keep
occupi
week
around
christma
offic
governmentrun
research
lab
amsterdam
would
close
home
comput
much
els
hand
decid
write
interpret
new
script
languag
think
late
descend
abc
would
appeal
unixc
hacker
chose
python
work
titl
project
slightli
irrever
mood
big
fan
monti
python
fli
circu
websit
free
annoy
ad
want
keep
like
help
donat
need
donat
bernd
klein
facebook
search
websit
topic
german
deutsch
Ã¼bersetzung
funktionen
zur
erzeugung
von
numpi
arraysclassroom
train
cours
websit
contain
free
extens
onlin
tutori
bernd
klein
use
materi
classroom
python
train
cours
interest
instructorl
classroom
train
cours
may
look
python
class
bernd
klein
bodenseo
kabliczech
fotoliacom
quot
dayi
think
inevit
peopl
program
poorli
train
substanti
help
matter
learn
live
alan
perli
choic
work
python
python
recomend
switch
python
read
python
tutori
see
differ
data
protect
declar
data
protect
declar
previou
chapter
numpi
introduct
next
chapter
data
type
object
dtype
numpi
tutori
creat
array
alreday
seen
previou
chapter
numpi
tutori
creat
numpi
array
list
tupl
want
introduc
function
creat
basic
array
function
provid
numpi
creat
array
evenli
space
valu
within
given
interv
one
arang
use
given
distanc
one
linspac
need
number
element
creat
distanc
automat
creation
array
evenli
space
valu
arangeth
syntax
arang
arangestart
stop
step
dtypenon
arang
return
evenli
space
valu
within
given
interv
valu
gener
within
halfopen
interv
start
stop
function
use
integ
nearli
equival
python
builtin
function
rang
arang
return
ndarray
rather
list
iter
rang
start
paramet
given
set
end
interv
determin
paramet
stop
usual
interv
includ
valu
except
case
step
integ
float
point
roundoff
affect
length
output
ndarray
space
two
adjac
valu
output
array
set
option
paramet
step
default
valu
step
paramet
step
given
start
paramet
option
ie
given
well
type
output
array
specifi
paramet
dtype
given
type
automat
infer
input
argument
import
numpi
np
printa
x
printx
x
iter
printlistx
arang
exampl
x
printx
x
printx
x
int
printx
linspaceth
syntax
linspac
linspacestart
stop
endpointtru
retstepfals
linspac
return
ndarray
consist
num
equal
space
sampl
close
interv
start
stop
halfopen
interv
start
stop
close
halfopen
interv
return
depend
whether
endpoint
true
fals
paramet
start
defin
start
valu
sequenc
creat
stop
end
valu
sequenc
unless
endpoint
set
fals
latter
case
result
sequenc
consist
last
num
evenli
space
sampl
mean
stop
exclud
note
step
size
chang
endpoint
fals
number
sampl
gener
set
num
default
option
paramet
endpoint
set
true
default
stop
last
sampl
sequenc
otherwis
includ
import
numpi
np
valu
valu
exclud
endpoint
endpointfals
havent
discuss
one
interest
paramet
far
option
paramet
retstep
set
function
also
return
valu
space
adjac
valu
function
return
tupl
sampl
step
import
numpi
np
sampl
space
retsteptru
printspac
sampl
space
endpointtru
retsteptru
printspac
sampl
space
endpointfals
retsteptru
printspac
zerodimension
array
numpi
possibl
creat
multidimension
array
numpi
scalar
zero
dimension
follow
exampl
creat
scalar
appli
ndim
method
scalar
get
dimens
array
also
see
type
numpyndarray
type
import
numpi
np
x
printx
x
printth
type
x
typex
printth
dimens
x
npndimx
x
type
x
class
numpyndarray
dimens
x
onedimension
array
alreadi
encount
array
better
known
vector
initi
exampl
mention
far
may
assum
fact
numpi
array
contain
item
type
eg
integ
homogen
type
array
determin
attribut
dtype
learn
follow
exampl
f
v
printf
f
printv
v
printtyp
f
fdtype
printtyp
v
vdtype
printdimens
f
npndimf
printdimens
v
npndimv
f
v
type
f
type
v
dimens
f
dimens
v
two
multidimension
array
cours
array
numpi
limit
one
dimens
arbitrari
dimens
creat
pass
nest
list
tupl
array
method
numpi
nparray
printa
printandim
b
nparray
printb
printbndim
shape
array
function
shape
return
shape
array
shape
tupl
integ
number
denot
length
correspond
array
dimens
word
shape
array
tupl
number
element
per
axi
dimens
exampl
shape
equal
ie
line
column
x
nparray
printnpshapex
also
equival
array
properti
printxshap
shape
array
tell
us
also
someth
order
indic
process
ie
first
row
column
dimens
shape
also
use
chang
shape
array
xshape
printx
xshape
printx
might
guess
new
shape
must
correspond
number
element
array
ie
total
size
new
array
must
old
one
rais
except
case
let
look
exampl
shape
scalar
empti
tupl
x
printnpshapex
b
nparray
printbshap
index
slice
assign
access
element
array
similar
sequenti
data
type
python
ie
list
tupl
also
mani
option
index
make
index
numpi
power
similar
index
list
tupl
singl
index
behav
way
probabl
expect
f
print
first
element
f
print
last
element
f
index
multidimension
array
nparray
access
element
second
row
ie
row
index
first
column
index
access
way
would
done
element
nest
python
list
awar
fact
way
access
multidimension
array
highli
ineffici
reason
creat
intermedi
array
access
element
index
behav
similar
tmp
printtmp
anoth
way
access
element
multidimension
array
numpi
use
one
pair
squar
bracket
indic
separ
comma
assum
familar
slice
list
tupl
syntax
numpi
onedimension
array
appli
multipl
dimens
well
gener
syntax
onedimension
array
look
like
astartstopstep
illustr
oper
principl
slice
exampl
start
easiest
case
ie
slice
onedimension
array
print
illustr
multidimension
slice
follow
exampl
rang
dimens
separ
comma
nparray
printa
follow
two
exampl
use
third
paramet
step
reshap
function
use
construct
twodimension
array
explain
reshap
follow
subchapt
x
printx
printx
number
object
select
tupl
less
dimens
n
assum
subsequ
dimens
nparray
equival
code
return
follow
output
attent
wherea
slice
list
tupl
creat
new
object
slice
oper
array
creat
view
origin
array
get
anoth
possibl
access
array
better
part
array
follow
modifi
view
origin
array
modifi
well
printa
similar
thing
list
see
get
copi
lst
printlst
want
check
two
array
name
share
memori
block
use
function
npmaysharememori
npmaysharememorya
b
determin
two
array
b
share
memori
memorybound
b
comput
function
return
true
overlap
fals
otherwis
function
may
give
fals
posit
ie
return
true
mean
array
may
npmaysharememorya
execut
python
code
receiv
follow
output
true
follow
code
show
case
use
maysharememori
quit
use
b
printb
see
b
share
memori
way
array
attribut
data
object
pointer
start
array
data
saw
chang
element
one
array
one
chang
well
fact
reflect
maysharememori
npmaysharememorya
b
previou
python
code
return
follow
true
result
fals
posit
exampl
maysharememori
sens
somebodi
may
think
array
case
creat
array
one
zero
empti
two
way
initi
array
zero
one
method
onest
take
tupl
shape
array
fill
array
accordingli
one
default
fill
one
type
float
need
integ
one
set
option
paramet
dtype
int
import
numpi
np
e
print
f
printf
said
method
one
valid
method
zero
analog
see
follow
exampl
z
printz
anoth
interest
way
creat
array
one
zero
shape
anoth
exist
array
numpi
suppli
purpos
method
oneslikea
zeroslikea
x
e
nponeslikex
print
z
npzeroslikex
printz
also
way
creat
array
empti
function
creat
return
refer
new
array
given
shape
type
without
initi
entri
sometim
entri
zero
shouldnt
mislead
usual
arbitrari
valu
get
us
follow
output
array
copi
array
numpycopi
copyobj
orderk
return
array
copi
given
object
obj
paramet
mean
obj
arraylik
input
data
order
possibl
valu
c
f
k
paramet
control
memori
layout
copi
c
mean
corder
f
mean
fortranord
mean
f
object
obj
fortran
contigu
c
otherwis
k
mean
match
layout
obj
close
possibl
import
numpi
np
x
orderf
xcopi
printx
printi
printxflagsccontigu
printyflagsccontigu
fals
true
ndarraycopi
also
ndarray
method
copi
directli
appli
array
similiar
function
default
valu
order
argument
differ
acopyorderc
return
copi
array
paramet
mean
order
numpycopi
c
default
valu
order
import
numpi
np
x
orderf
xcopi
printx
printi
printxflagsccontigu
printyflagsccontigu
fals
true
ident
array
linear
algebra
ident
matrix
unit
matrix
size
n
n
n
squar
matrix
one
main
diagon
zero
elsewher
two
way
numpi
creat
ident
array
identi
eye
ident
function
creat
ident
array
function
ident
identityn
dtypenon
paramet
paramet
mean
n
integ
number
defin
number
row
column
output
ie
n
x
n
dtype
option
argument
defin
datatyp
output
default
float
output
ident
n
x
n
array
main
diagon
set
one
element
import
numpi
np
receiv
follow
output
array
dtypeint
equival
int
previou
python
code
return
follow
result
eye
function
anoth
way
creat
ident
array
provid
function
eye
function
creat
also
diagon
array
consist
sole
one
return
array
one
diagon
zero
elsewher
eyen
mnone
dtypefloat
paramet
mean
n
integ
number
defin
row
output
array
option
integ
set
number
column
output
none
default
n
k
defin
posit
diagon
default
refer
main
diagon
posit
valu
refer
upper
diagon
neg
valu
lower
diagon
dtype
option
datatyp
return
array
eye
return
ndarray
shape
nm
element
array
equal
zero
except
kth
diagon
whose
valu
equal
one
import
numpi
np
dtypeint
get
us
follow
result
principl
oper
paramet
eye
function
illustr
follow
diagram
creat
arbitrari
one
dimension
array
call
v
creat
new
array
consist
odd
indic
previous
creat
array
v
creat
new
array
backward
order
v
output
follow
code
b
creat
two
dimension
array
call
creat
new
array
element
row
revers
order
anoth
one
row
revers
order
creat
array
column
row
revers
order
cut
first
last
row
first
last
column
solut
exercis
import
numpi
np
oddel
reverseord
output
slice
view
numpi
copi
nparray
previou
chapter
numpi
introduct
next
chapter
data
type
object
dtype
bernd
klein
bodenseo
design
denis
mitchinson
adapt
pythoncourseeu
bernd
klein
