numer
&
scientif
comput
with
python
:
panda
tutori
:
multi-level
index
numer
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
,
dtypenumer
oper
on
numpi
arrayschang
the
dimens
of
arrayspython
,
numpi
and
probabilityweight
choic
and
weight
samplescr
of
synthet
test
databoolean
mask
of
arraysmatrix
arithmeticread
and
write
ndarraysmatplotlib
introductionspin
and
tickslegend
and
annotationsmultipl
figur
and
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
with
nanbin
datapanda
tutori
continu
:
multi-level
indexingdata
visual
with
panda
and
pythonpython
,
date
and
timepython
,
panda
and
timeserieslinear
combin
python
In
greek
mytholog
,
python
is
the
name
of
a
a
huge
serpent
and
sometim
a
dragon
.
python
had
been
kill
by
the
god
apollo
at
delphi
.
python
wa
creat
out
of
the
slime
and
mud
left
after
the
great
flood
.
He
wa
appoint
by
gaia
(
mother
earth
)
to
guard
the
oracl
of
delphi
,
known
as
pytho
.
the
program
languag
python
ha
not
been
creat
out
of
slime
and
mud
but
out
of
the
program
languag
abc
.
It
ha
been
devis
by
a
dutch
programm
,
name
guido
van
rossum
,
in
amsterdam
.
origin
of
python
guido
van
rossum
wrote
the
follow
about
the
origin
of
python
in
a
foreword
for
the
book
``
program
python
''
by
mark
lutz
in
1996
:
``
over
six
year
ago
,
in
decemb
1989
,
I
wa
look
for
a
``
hobbi
''
program
project
that
would
keep
me
occupi
dure
the
week
around
christma
.
My
offic
(
a
government-run
research
lab
in
amsterdam
)
would
be
close
,
but
I
had
a
home
comput
,
and
not
much
els
on
my
hand
.
I
decid
to
write
an
interpret
for
the
new
script
languag
I
had
been
think
about
late
:
a
descend
of
abc
that
would
appeal
to
unix/c
hacker
.
I
chose
python
as
a
work
titl
for
the
project
,
be
in
a
slightli
irrever
mood
(
and
a
big
fan
of
monti
python
's
fli
circu
)
.
''
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
panda
multi-level-indizierungclassroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
now
,
it
's
my
belief
that
python
is
a
lot
easier
than
to
teach
to
student
program
and
teach
them
C
or
c++
or
java
at
the
same
time
becaus
all
the
detail
of
the
languag
are
so
much
harder
.
other
script
languag
realli
do
n't
work
veri
well
there
either
.
''
(
guido
van
rossum
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
bin
data
next
chapter
:
data
visual
with
panda
and
python
panda
tutori
:
multi-level
indexingintroduct
We
learn
the
basic
concept
of
panda
in
our
previou
chapter
of
our
tutori
on
panda
.
We
introduc
the
data
structur
seri
and
datafram
We
also
learn
how
to
creat
and
manipul
the
seri
and
datafram
object
in
numer
python
program
.
now
it
is
time
to
learn
some
further
aspect
of
these
data
structur
in
thi
chapter
of
our
tutori
.
We
will
start
with
advanc
index
possibl
in
panda
.
advanc
or
multi-level
indexingadvanc
or
multi-level
index
is
avail
both
for
seri
and
for
datafram
.
It
is
a
fascin
way
of
work
with
higher
dimension
data
,
use
panda
data
structur
.
It
's
an
effici
way
to
store
and
manipul
arbitrarili
high
dimens
data
in
1-dimension
(
seri
)
and
2-dimension
tabular
(
datafram
)
structur
.
In
other
word
,
we
can
work
with
higher
dimension
data
in
lower
dimens
.
It
's
time
to
present
an
exampl
in
python
:
import
panda
as
pd
citi
=
[
``
vienna
''
,
``
vienna
''
,
``
vienna
''
,
``
hamburg
''
,
``
hamburg
''
,
``
hamburg
''
,
``
berlin
''
,
``
berlin
''
,
``
berlin
''
,
``
zürich
''
,
``
zürich
''
,
``
zürich
''
]
index
=
[
citi
,
[
``
countri
''
,
``
area
''
,
``
popul
''
,
``
countri
''
,
``
area
''
,
``
popul
''
,
``
countri
''
,
``
area
''
,
``
popul
''
,
``
countri
''
,
``
area
''
,
``
popul
''
]
]
print
(
index
)
[
[
'vienna
'
,
'vienna
'
,
'vienna
'
,
'hamburg
'
,
'hamburg
'
,
'hamburg
'
,
'berlin
'
,
'berlin
'
,
'berlin
'
,
'zürich
'
,
'zürich
'
,
'zürich
'
]
,
[
'countri
'
,
'area
'
,
'popul
'
,
'countri
'
,
'area
'
,
'popul
'
,
'countri
'
,
'area
'
,
'popul
'
,
'countri
'
,
'area
'
,
'popul
'
]
]
data
=
[
``
austria
''
,
414.60
,
1805681
,
``
germani
''
,
755.00
,
1760433
,
``
germani
''
,
891.85
,
3562166
,
``
switzerland
''
,
87.88
,
378884
]
city_seri
=
pd.seri
(
data
,
index=index
)
print
(
city_seri
)
vienna
countri
austria
area
414.6
popul
1805681
hamburg
countri
germani
area
755
popul
1760433
berlin
countri
germani
area
891.85
popul
3562166
zürich
countri
switzerland
area
87.88
popul
378884
dtype
:
object
We
can
access
the
data
of
a
citi
in
the
follow
way
:
print
(
city_seri
[
``
vienna
''
]
)
countri
austria
area
414.6
popul
1805681
dtype
:
object
We
can
also
access
the
inform
about
the
countri
,
area
or
popul
of
a
citi
.
We
can
do
thi
in
two
way
:
print
(
city_seri
[
``
vienna
''
]
[
``
area
''
]
)
414.6
the
other
way
to
accomplish
it
:
print
(
city_seri
[
``
vienna
''
,
``
area
''
]
)
414.6
We
can
also
get
the
content
of
multipl
citi
at
the
same
time
by
use
a
list
of
citi
name
as
the
key
:
city_seri
[
``
hamburg
''
,
:
]
the
previou
python
code
return
the
follow
:
countri
germani
area
755
popul
1760433
dtype
:
object
If
the
index
is
sort
,
we
can
also
appli
a
slice
oper
:
city_seri
=
city_series.sort_index
(
)
print
(
``
city_seri
with
sort
index
:
''
)
print
(
city_seri
)
print
(
``
\n\nslice
the
city_seri
:
''
)
city_seri
[
``
berlin
''
:
''
vienna
''
]
city_seri
with
sort
index
:
berlin
area
891.85
countri
germani
popul
3562166
hamburg
area
755
countri
germani
popul
1760433
vienna
area
414.6
countri
austria
popul
1805681
zürich
area
87.88
countri
switzerland
popul
378884
dtype
:
object
slice
the
city_seri
:
thi
get
us
the
follow
output
:
berlin
area
891.85
countri
germani
popul
3562166
hamburg
area
755
countri
germani
popul
1760433
vienna
area
414.6
countri
austria
popul
1805681
dtype
:
object
In
the
next
exampl
,
we
show
that
it
is
possibl
to
access
the
inner
key
as
well
:
print
(
city_seri
[
:
,
``
area
''
]
)
berlin
891.85
hamburg
755
vienna
414.6
zürich
87.88
dtype
:
object
swap
multiindex
levelsit
is
possibl
to
swap
the
level
of
a
multiindex
with
the
method
swaplevel
:
swaplevel
(
self
,
i=-2
,
j=-1
,
copy=tru
)
swap
level
i
and
j
in
a
multiindex
paramet
--
--
--
--
--
i
,
j
:
int
,
string
(
can
be
mix
)
level
of
index
to
be
swap
.
can
pass
level
name
as
string
.
the
index
'
i
'
and
'
j
'
are
option
,
and
default
to
the
two
innermost
level
of
the
index
return
--
--
--
-
swap
:
seri
city_seri
=
city_series.swaplevel
(
)
city_series.sort_index
(
inplace=tru
)
city_seri
thi
get
us
the
follow
output
:
area
berlin
891.85
hamburg
755
vienna
414.6
zürich
87.88
countri
berlin
germani
hamburg
germani
vienna
austria
zürich
switzerland
popul
berlin
3562166
hamburg
1760433
vienna
1805681
zürich
378884
dtype
:
object
previou
chapter
:
bin
data
next
chapter
:
data
visual
with
panda
and
python
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
