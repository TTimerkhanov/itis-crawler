python2
tutori
:
A
tutori
python
cours
advanc
topic
introduct
into
the
sy
modulepython
and
the
shellfork
and
fork
in
pythonintroduct
into
threadspip
,
pipe
and
``
99
bottl
of
beer
''
python
network
scannergraph
theori
and
graph
in
pythongraph
:
pygraphgraphsa
python
class
for
polynomi
functionscurri
in
pythonfinit
state
machin
in
pythontur
machin
in
pythonlevenshtein
distanceexampl
for
recurs
program
:
tower
of
hanoimastermind
/
bull
and
cowscreat
dynam
websit
with
wsgidynam
websit
with
mod_pythondynam
websit
with
pylonspython
,
sql
,
mysql
and
sqlitepython
score
pylon
,
word
definit
It
can
be
an
egyptian
gateway
build
,
which
is
built
in
a
truncat
pyramid
form
.
a
tower
,
in
the
form
of
a
steel
lattic
,
for
support
a
number
of
wire
over
a
long
span
a
line
of
post
to
mark
the
prescrib
cours
of
flight
for
an
plane
a
vertic
structur
use
to
mount
extern
equip
such
as
engin
and
weapon
extern
on
an
airplan
.
but
thi
is
not
,
what
we
are
talk
about
in
thi
chapter
.
support
by
:
cours
and
seminar
for
linux
and
python
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
classroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
Â©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
the
question
of
whether
a
comput
can
think
is
no
more
interest
than
the
question
of
whether
a
submarin
can
swim
.
''
(
edsger
wybe
dijkstra
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
dynam
websit
with
mod_python
next
chapter
:
python
,
sql
,
mysql
and
sqlite
creat
dynam
websit
with
python
and
pylon
introduct
pleas
notic
:
work
on
thi
topic
is
under
process
.
(
august
2014
)
the
pictur
on
the
right
side
is
mislead
:
We
are
not
talk
about
thi
kind
of
pylon
,
i.e
.
electr
pylon
,
or
transmiss
tower
,
use
to
support
an
overhead
power
line
.
but
their
is
some
interest
aspect
in
thi
comparison
.
It
is
a
set
of
web
applic
framework
written
in
python
.
So
it
can
be
seen
as
the
steel
lattic
tower
of
an
electr
pylon
,
but
it
is
not
support
power
line
but
web
page
.
jame
gardner
,
a
co-found
of
pylon
,
defin
thi
framework
as
``
pylon
is
a
lightweight
web
framework
emphas
flexibl
and
rapid
develop
use
standard
tool
from
the
python
commun
.
''
We
will
demonstr
in
simpl
exampl
-
start
with
the
inevit
``
hello
world
''
project
-
how
to
use
it
.
We
will
also
introduc
the
usag
of
macro
.
instal
befor
you
can
use
pylon
,
you
have
to
instal
it
.
If
you
use
debian
,
ubuntu
or
mint
,
all
you
have
to
do
is
execut
the
follow
code
on
a
command
shell
:
apt-get
instal
python-pylon
you
are
abl
to
creat
your
first
pylon
project
now
:
$
paster
creat
--
template=pylon
myproject
you
will
be
ask
two
question
and
you
can
answer
by
keep
the
default
:
enter
template_engin
(
mako/genshi/jinja2/etc
:
templat
languag
)
[
'mako
'
]
:
enter
sqlalchemi
(
true/fals
:
includ
sqlalchemi
configur
)
[
fals
]
:
We
have
creat
now
a
directori
myproject
,
which
contain
the
follow
file
and
subdirectori
:
development.ini
ez_setup.pi
manifest.in
myproject
myproject.egg-info
readme.txt
setup.cfg
setup.pi
test.ini
the
content
of
the
subdirectori
myproject
look
like
thi
:
configcontain
the
file
control
__init__.pi
__init__.pyc
lib
model
public
templat
test
websetup.pi
cd
myproject
paster
serv
--
reload
development.ini
now
the
web
server
is
run
.
If
you
visit
the
url
http
:
//localhost:5000/
with
a
browser
of
your
choic
,
you
will
see
the
follow
welcom
screen
:
It
's
gener
from
./myproject/public/index.html
insid
of
your
myproject
directori
.
static
page
you
can
put
other
html
file
into
the
directori
./myproject/public/
.
these
file
can
be
visit
by
the
web
browser
as
well
.
you
can
save
the
follow
html
code
as
python_rabbit.html
:
<
html
>
<
head
>
<
titl
>
the
python
and
the
rabbit
<
/titl
>
<
/head
>
<
bodi
>
<
h3
>
littl
girl
buy
a
rabbit
<
/h3
>
A
preciou
littl
girl
walk
into
a
pet
shop
and
ask
in
the
sweetest
littl
lisp
,
``
excuth
me
,
mithter
,
do
you
keep
widdl
wabbit
?
''
<
br
>
As
the
shopkeep
's
heart
melt
,
he
get
down
on
hi
knee
,
so
that
he
's
on
her
level
,
and
ask
,
``
Do
you
want
a
widdl
white
wabbi
or
a
thoft
and
fuwwi
bwack
wabbi
or
mayb
one
like
that
cute
widdl
bwown
wabbi
over
there
?
''
<
br
>
she
,
in
turn
blush
,
rock
on
her
heel
,
put
her
hand
on
her
knee
,
lean
forward
and
say
in
a
quiet
voic
,
``
I
do
n't
fink
my
pet
python
wealli
give
a
thit
.
''
<
/bodi
>
<
/html
>
you
can
visit
the
url
``
http
:
//localhost:5000/python_rabbit.html
''
and
the
html
file
abov
will
be
render
:
ani
file
in
the
directori
``
public
''
are
treat
as
static
file
.
It
may
contain
subdirectori
as
well
,
which
are
part
of
the
url
in
the
usual
way
.
If
we
creat
a
subdirectori
``
petshop
''
in
``
public
''
,
we
will
receiv
a
``
404
not
found
''
error
,
unless
we
creat
an
index.html
file
as
well
and
place
it
insid
of
the
subdirectori
,
in
our
case
``
petshop
''
.
So
,
there
is
no
directori
index
default
view
,
as
we
can
have
it
with
apach
.
thi
is
for
secur
reason
.
We
will
creat
now
the
subdirectori
``
petshop
''
and
inlcud
the
follow
index.html
file
:
<
html
>
<
head
>
<
titl
>
the
ultim
petshop
<
/titl
>
<
/head
>
<
bodi
>
<
h3
>
the
ultim
petshop
<
/h3
>
the
ideal
pet
for
littl
girl
:
A
python
snake
<
br
>
<
br
>
pleas
,
visit
the
<
a
href=
''
../python_rabbit.html
''
>
python
and
the
rabbit
<
/a
>
joke
!
<
/bodi
>
<
/html
>
visit
``
http
:
//localhost:5000/petshop/
''
or
``
http
:
//localhost:5000/petshop/index.html
''
,
we
will
encount
the
follow
content
:
get
dynam
with
control
We
will
creat
now
a
dynam
``
hello
world
''
applic
by
creat
a
control
in
our
project
.
the
control
is
abl
to
handl
request
.
We
can
creat
the
control
with
the
follow
command
:
$
paster
control
hello
If
we
visit
the
url
http
:
//localhost:5000/hello/index
we
will
get
a
websit
with
the
content
``
hello
world
''
:
We
want
to
chang
our
applic
into
a
multilingu
websit
,
i.e
.
visitor
should
be
greet
in
their
languag
.
To
thi
purpos
we
will
have
to
chang
the
file
hello.pi
,
which
can
be
found
in
myproject/myproject/controllers/
:
import
log
from
pylon
import
request
,
respons
,
session
,
tmpl_context
as
c
,
url
from
pylons.controllers.util
import
abort
,
redirect
from
myproject.lib.bas
import
basecontrol
,
render
log
=
logging.getlogg
(
__name__
)
class
hellocontrol
(
basecontrol
)
:
def
index
(
self
)
:
#
return
a
render
templat
#
return
render
(
'/hello.mako
'
)
#
or
,
return
a
string
return
'hello
world
'
We
will
chang
the
index
method
of
the
hellocontrol
class
:
def
index
(
self
,
id=non
)
:
#
return
a
render
templat
#
return
render
(
'/hello.mako
'
)
#
or
,
return
a
string
if
id
==
``
fr
''
:
return
'bonjour
mond
'
if
id
==
``
de
''
:
return
'hallo
welt
'
if
id
==
``
it
''
:
return
'ciao
mondo
'
return
'hello
world
'
call
the
url
``
http
:
//localhost:5000/hello/index
''
will
still
return
``
hello
world
''
,
but
ad
``
/de
''
-
i.e
.
http
:
//localhost:5000/hello/index/d
-
to
the
previou
url
will
return
``
hallo
welt
''
.
mako
templat
you
may
have
notic
the
comment
line
``
#
return
render
(
'/hello.mako
'
)
''
.
If
we
uncom
thi
line
,
the
server
will
use
a
mako
templat
``
hello.mako
''
or
better
it
will
tri
to
use
a
templat
.
thi
templat
is
suppos
to
be
locat
in
the
directori
``
myproject/templates/
''
.
So
far
thi
directori
is
empti
.
uncom
the
line
will
creat
the
follow
error
messag
in
your
browser
window
:
weberror
traceback
:
-
>
toplevellookupexcept
:
cant
locat
templat
for
uri
'/hello.mako
'
A
mako
is
a
templat
librari
-
also
call
a
templat
engin
-
written
in
python
.
It
is
the
default
templat
languag
includ
with
the
pylon
and
pyramid
web
framework
.
mako
's
syntax
and
api
borrow
from
other
approach
,
e.g
.
django
,
jinja2
,
myghti
,
and
genshi
.
mako
is
an
embed
python
languag
,
use
for
python
server
page
.
A
mako
templat
contain
variou
kind
of
content
,
for
exampl
,
xml
,
html
,
email
text
,
and
so
on
.
A
templat
can
contain
direct
which
repres
variabl
or
express
substitut
,
control
structur
,
or
block
of
python
code
.
It
may
also
contain
tag
that
offer
addit
function
.
A
mako
is
compil
into
real
python
code
.
the
easiest
possibl
mako
templat
consist
sole
of
html
code
.
the
follow
mako
templat
is
static
greet
all
friend
:
<
html
>
<
head
>
<
titl
>
greet
<
/titl
>
<
/head
>
<
bodi
>
<
h1
>
greet
<
/h1
>
<
p
>
hello
my
friend
!
<
/p
>
<
/bodi
>
<
/html
>
We
chang
our
hello.pi
in
the
directori
``
control
''
to
the
follow
code
:
from
myproject.lib.bas
import
basecontrol
,
render
class
hellocontrol
(
basecontrol
)
:
def
index
(
self
,
id=non
)
:
#
return
a
render
templat
return
render
(
'/hello.mako
'
)
We
have
to
save
it
in
the
templat
subdirectori
.
the
new
page
look
like
thi
on
a
chromium
browser
:
thi
introduct
is
about
dynam
web
page
with
pylon
,
so
we
have
to
person
our
greet
.
At
first
,
we
want
to
demonstr
how
to
use
python
variabl
insid
of
a
templat
.
To
thi
purpos
,
the
tmpl_context
is
avail
in
the
pylon
modul
,
and
refer
to
the
templat
context
.
object
attach
to
it
are
avail
in
the
templat
namespac
as
tmpl_context
.
In
most
case
tmpl_context
is
alias
as
c
in
control
and
templat
for
conveni
.
our
hello.pi
need
to
import
tmpl_context
and
we
set
c.name
to
``
frank
''
:
from
pylon
import
tmpl_context
as
c
from
myproject.lib.bas
import
basecontrol
,
render
class
hellocontrol
(
basecontrol
)
:
def
index
(
self
,
id=non
)
:
c.name
=
``
frank
''
#
return
a
render
templat
return
render
(
'/hello.mako
'
)
the
output
in
a
broser
ha
n't
chang
dramat
.
just
``
hello
frank
''
instead
of
``
hello
my
friend
!
''
.
admittedli
,
still
not
veri
dynam
!
but
we
can
use
the
url
with
our
id
paramet
again
:
from
pylon
import
tmpl_context
as
c
from
myproject.lib.bas
import
basecontrol
,
render
class
hellocontrol
(
basecontrol
)
:
def
index
(
self
,
id=non
)
:
c.name
=
id
if
id
els
``
my
friend
''
#
return
a
render
templat
return
render
(
'/hello.mako
'
)
visit
http
:
//localhost:5000/hello/index/frank
render
the
output
``
hello
frank
!
``
,
wherea
the
url
http
:
//localhost:5000/hello/index
will
produc
``
hello
my
friend
!
''
map
the
root
url
We
have
seen
that
we
can
put
variou
static
html
file
under
the
root
directori
``
myproject/public/index.html
''
of
our
project
.
We
saw
that
index.html
of
the
public
directori
is
the
own
which
is
shown
,
if
we
point
the
browser
to
http
:
//localhost:5000/
you
may
want
to
have
a
dynam
page
right
at
the
root
.
So
,
we
have
to
map
the
root
url
http
:
//localhost:5000/
to
a
control
action
.
thi
can
be
done
by
modifi
the
routing.pi
file
in
the
config
directori
.
If
you
look
at
thi
file
,
you
will
find
a
comment
line
``
#
custom
rout
here
''
.
you
have
to
add
the
follow
line
after
thi
line
:
#
custom
rout
here
map.connect
(
'/
'
,
controller='hello
'
,
action='index
'
)
there
is
one
more
thing
you
should
n't
forget
:
you
have
to
remov
the
index.html
file
in
public
.
otherwis
thi
file
will
be
still
serv
.
previou
chapter
:
dynam
websit
with
mod_python
next
chapter
:
python
,
sql
,
mysql
and
sqlite
Â©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
