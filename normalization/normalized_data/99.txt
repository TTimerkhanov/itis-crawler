machin
learn
with
python
:
machin
learn
terminolog
python
machin
learn
tutori
machin
learn
machin
learn
terminologyk-nearest
neighbor
classifierneur
network
from
scratch
in
pythonneur
network
in
python
use
numypybackpropag
in
neural
networksconfus
matrixtrain
and
test
with
mnistdropout
neural
networksneur
network
with
scikitmachin
learn
with
scikit
and
pythonintroduct
naiv
bay
classifierna
bay
classifi
with
scikitintroduct
into
text
classif
use
naiv
bayespython
implement
of
text
classificationdecis
treesregress
treesrandom
forestsboost
algorithmprincip
compon
analysislinear
discrimin
analysisexpect
maxim
and
gaussian
mixtur
modelintroduct
into
tensorflow
thi
websit
is
creat
by
:
python
train
cours
in
toronto
,
canada
On
site
train
in
europ
,
canada
and
the
US
.
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
classroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
We
can
onli
see
a
short
distanc
ahead
,
but
we
can
see
plenti
there
that
need
to
be
done
.
alan
ture
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
next
chapter
:
k-nearest
neighbor
classifi
machin
learn
terminolog
classifiera
program
or
a
function
which
map
from
unlabel
instanc
to
class
is
call
a
classifi
.
confus
matrixa
confus
matrix
,
also
call
a
contingeni
tabl
or
error
matrix
,
is
use
to
visual
the
perform
of
a
classifi
.
the
column
of
the
matrix
repres
the
instanc
of
the
predict
class
and
the
row
repres
the
instanc
of
the
actual
class
.
(
note
:
It
can
be
the
other
way
around
as
well
.
)
In
the
case
of
binari
classif
the
tabl
ha
2
row
and
2
column
.
exampl
:
confusionmatrix
predict
class
male
femal
actual
class
male
42
8
femal
18
32
thi
mean
that
the
classifi
correctli
predict
a
male
person
in
42
case
and
it
wrongli
predict
8
male
instanc
as
femal
.
It
correctli
predict
32
instanc
as
femal
.
18
case
had
been
wrongli
predict
as
male
instead
of
femal
.
accuraci
(
error
rate
)
accuraci
is
a
statist
measur
which
is
defin
as
the
quotient
of
correct
predict
made
by
a
classifi
divid
by
the
sum
of
predict
made
by
the
classifi
.
the
classifi
in
our
previou
exampl
predict
correctli
predict
42
male
instanc
and
32
femal
instanc
.
therefor
,
the
accuraci
can
be
calcul
by
:
accuraci
=
$
(
42
+
32
)
/
(
42
+
8
+
18
+
32
)
$
which
is
0.72
let
's
assum
we
have
a
classifi
,
which
alway
predict
``
femal
''
.
We
have
an
accuraci
of
50
%
in
thi
case
.
confusionmatrix
predict
class
male
femal
actual
class
male
0
50
femal
0
50
We
will
demonstr
the
so-cal
accuraci
paradox
.
A
spam
recogit
classifi
is
describ
by
the
follow
confus
matrix
:
confusionmatrix
predict
class
spam
ham
actual
class
spam
4
1
ham
4
91
the
accuraci
of
thi
classifi
is
(
4
+
91
)
/
100
,
i.e
.
95
%
.
the
follow
classifi
predict
sole
``
ham
''
and
ha
the
same
accuraci
.
confusionmatrix
predict
class
spam
ham
actual
class
spam
0
5
ham
0
95
the
accuraci
of
thi
classifi
is
95
%
,
even
though
it
is
not
capabl
of
recogn
ani
spam
at
all
.
precis
and
recal
confusionmatrix
predict
class
neg
posit
actual
class
neg
TN
FP
posit
FN
TP
accuraci
:
$
(
TN
+
TP
)
/
(
TN
+
TP
+
FN
+
FP
)
$
precis
:
$
TP
/
(
TP
+
FP
)
$
recal
:
$
TP
/
(
TP
+
FN
)
$
supervis
learningth
machin
learn
program
is
both
given
the
input
data
and
the
correspond
label
.
thi
mean
that
the
learn
data
ha
to
be
label
by
a
human
be
beforehand
.
unsupervis
learningno
label
are
provid
to
the
learn
algorithm
.
the
algorithm
ha
to
figur
out
the
a
cluster
of
the
input
data
.
reinforc
learninga
comput
program
dynam
interact
with
it
environ
.
thi
mean
that
the
program
receiv
posit
and/or
neg
feedback
to
improv
it
perform
.
next
chapter
:
k-nearest
neighbor
classifi
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
