gui
program
with
python
:
entri
widget
python
tkinter
cours
tkinter
tutori
say
hello
with
labelsmessag
widgetbuttonsvari
classesradiobuttonscheckboxesentri
widgetscanva
widgetssliderstext
widgetdialogslayout
managementbul
and
cow
/
mastermind
in
tkcreat
menusev
and
bind
thi
websit
is
creat
by
:
python
train
cours
in
toronto
,
canada
On
site
train
in
europ
,
canada
and
the
US
.
possibl
problem
If
you
are
a
beginn
in
python
,
there
might
be
some
problem
with
understand
certain
python
construct
in
the
our
main
tutori
on
thi
page
:
If
you
have
problem
understand
about
the
lambda
construct
,
we
recommend
our
chapter
lambda
,
filter
,
reduc
and
map
most
probabl
you
are
familiar
with
function
,
if
not
we
suggest
read
the
chapter
function
entri
``
everi
exit
is
an
entri
somewher
els
.
''
tom
stoppard
``
anybodi
can
win
unless
there
happen
to
be
a
second
entri
.
''
(
georg
ade
)
interfac
entri
widget
are
human
interfac
to
the
applic
.
jef
raskin
,
the
human-comput
interfac
expert
,
who
start
the
macintosh
project
for
appl
,
said
:
``
A
comput
shall
not
harm
your
work
or
,
through
inact
,
allow
your
work
to
come
to
harm
.
''
He
also
said
:
``
A
comput
shall
not
wast
your
time
or
requir
you
to
do
more
work
than
is
strictli
necessari
''
and
``
onc
the
product
's
task
is
known
,
design
the
interfac
first
;
then
implement
to
the
interfac
design
.
''
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
Ã¼bersetzung
:
eingabefeld
classroom
trainingstutori
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
.
you
can
attend
one
of
hi
python
cours
in
pari
,
london
,
toronto
,
berlin
,
munich
,
hamburg
,
amsterdam
,
den
haag
(
the
hagu
)
or
lake
constanc
/
zurich
.
A
fast
and
effici
approach
to
learn
program
python
and
tkinter
consist
in
attend
a
classroom
train
cours
by
bernd
klein
at
bodenseo
.
quot
of
the
day
:
A
comput
would
deserv
to
be
call
intellig
if
it
could
deceiv
a
human
into
believ
that
it
wa
human
.
alan
ture
graphic
user
interfac
A
graphic
user
interfac
(
gui
)
is
a
type
of
user
interfac
that
allow
user
to
interact
with
electron
devic
in
a
graphic
way
,
i.e
.
with
imag
,
rather
than
text
command
.
origin
interact
user
interfac
to
comput
were
not
graphic
,
they
were
text
orient
and
usual
consist
of
command
,
which
had
to
be
rememb
.
the
do
oper
system
from
microsoft
and
the
bourn
shell
under
linux
are
exampl
of
such
user-comput
interfac
.
data
protect
declar
data
protect
declar
previou
chapter
:
checkbox
next
chapter
:
canva
widget
entri
widget
introduct
entri
widget
are
the
basic
widget
of
tkinter
use
to
get
input
,
i.e
.
text
string
,
from
the
user
of
an
applic
.
thi
widget
allow
the
user
to
enter
a
singl
line
of
text
.
If
the
user
enter
a
string
,
which
is
longer
than
the
avail
display
space
of
the
widget
,
the
content
will
be
scroll
.
thi
mean
that
the
string
can
not
be
seen
in
it
entireti
.
the
arrow
key
can
be
use
to
move
to
the
invis
part
of
the
string
.
If
you
want
to
enter
multipl
line
of
text
,
you
have
to
use
the
text
widget
.
An
entri
widget
is
also
limit
to
singl
font
.
the
syntax
of
an
entri
widget
look
like
thi
:
w
=
entri
(
master
,
option
,
...
)
``
master
''
repres
the
parent
window
,
where
the
entri
widget
should
be
place
.
like
other
widget
,
it
's
possibl
to
further
influenc
the
render
of
the
widget
by
use
option
.
the
comma
separ
list
of
option
can
be
empti
.
the
follow
simpl
exampl
creat
an
applic
with
two
entri
field
.
one
for
enter
a
last
name
and
one
for
the
first
name
.
We
use
entri
without
option
.
from
tkinter
import
*
master
=
Tk
(
)
label
(
master
,
text=
''
first
name
''
)
.grid
(
row=0
)
label
(
master
,
text=
''
last
name
''
)
.grid
(
row=1
)
e1
=
entri
(
master
)
e2
=
entri
(
master
)
e1.grid
(
row=0
,
column=1
)
e2.grid
(
row=1
,
column=1
)
mainloop
(
)
the
window
creat
by
the
previou
script
look
like
thi
:
okay
,
we
have
creat
entri
field
,
so
that
the
user
of
our
program
can
put
in
some
data
.
but
how
can
our
program
access
thi
data
?
how
do
we
read
the
content
of
an
entri
?
To
put
it
in
a
nutshel
:
the
get
(
)
method
is
what
we
are
look
for
.
We
extend
our
littl
script
by
two
button
``
quit
''
and
``
show
''
.
We
bind
the
function
show_entry_field
(
)
,
which
is
use
the
get
(
)
method
on
the
entri
object
,
to
the
show
button
.
So
,
everi
time
thi
button
is
click
,
the
content
of
the
entri
field
will
be
print
on
the
termin
from
which
we
had
call
the
script
.
from
tkinter
import
*
def
show_entry_field
(
)
:
print
(
``
first
name
:
%
s\nlast
name
:
%
s
''
%
(
e1.get
(
)
,
e2.get
(
)
)
)
master
=
Tk
(
)
label
(
master
,
text=
''
first
name
''
)
.grid
(
row=0
)
label
(
master
,
text=
''
last
name
''
)
.grid
(
row=1
)
e1
=
entri
(
master
)
e2
=
entri
(
master
)
e1.grid
(
row=0
,
column=1
)
e2.grid
(
row=1
,
column=1
)
button
(
master
,
text='quit
'
,
command=master.quit
)
.grid
(
row=3
,
column=0
,
sticky=w
,
pady=4
)
button
(
master
,
text='show
'
,
command=show_entry_field
)
.grid
(
row=3
,
column=1
,
sticky=w
,
pady=4
)
mainloop
(
)
the
complet
applic
look
now
like
thi
:
let
's
assum
now
that
we
want
to
start
the
entri
field
with
default
valu
,
e.g
.
we
fill
in
``
miller
''
or
``
baker
''
as
a
last
name
,
and
``
jack
''
or
``
jill
''
as
a
first
name
.
the
new
version
of
our
python
program
get
the
follow
two
line
,
which
can
be
append
after
the
entri
definit
,
i.e
.
``
e2
=
entri
(
master
)
''
:
e1.insert
(
10
,
''
miller
''
)
e2.insert
(
10
,
''
jill
''
)
what
about
delet
the
input
of
an
entri
object
,
everi
time
,
we
are
show
the
content
in
our
function
show_entry_field
(
)
?
No
problem
!
We
can
use
the
delet
method
.
the
delet
(
)
method
ha
the
format
delet
(
first
,
last=non
)
.
If
onli
one
number
is
given
,
it
delet
the
charact
at
index
.
If
two
are
given
,
the
rang
from
``
first
''
to
``
last
''
will
be
delet
.
use
delet
(
0
,
end
)
to
delet
all
text
in
the
widget
.
from
tkinter
import
*
def
show_entry_field
(
)
:
print
(
``
first
name
:
%
s\nlast
name
:
%
s
''
%
(
e1.get
(
)
,
e2.get
(
)
)
)
e1.delet
(
0
,
end
)
e2.delet
(
0
,
end
)
master
=
Tk
(
)
label
(
master
,
text=
''
first
name
''
)
.grid
(
row=0
)
label
(
master
,
text=
''
last
name
''
)
.grid
(
row=1
)
e1
=
entri
(
master
)
e2
=
entri
(
master
)
e1.insert
(
10
,
''
miller
''
)
e2.insert
(
10
,
''
jill
''
)
e1.grid
(
row=0
,
column=1
)
e2.grid
(
row=1
,
column=1
)
button
(
master
,
text='quit
'
,
command=master.quit
)
.grid
(
row=3
,
column=0
,
sticky=w
,
pady=4
)
button
(
master
,
text='show
'
,
command=show_entry_field
)
.grid
(
row=3
,
column=1
,
sticky=w
,
pady=4
)
mainloop
(
)
the
next
exampl
show
,
how
we
can
elegantli
creat
lot
of
entri
field
in
a
more
python
way
.
We
use
a
python
list
to
hold
the
entri
descript
,
which
we
includ
as
label
into
the
applic
.
#
!
/usr/bin/python3
from
tkinter
import
*
field
=
'last
name
'
,
'first
name
'
,
'job
'
,
'countri
'
def
fetch
(
entri
)
:
for
entri
in
entri
:
field
=
entri
[
0
]
text
=
entri
[
1
]
.get
(
)
print
(
'
%
s
:
``
%
s
''
'
%
(
field
,
text
)
)
def
makeform
(
root
,
field
)
:
entri
=
[
]
for
field
in
field
:
row
=
frame
(
root
)
lab
=
label
(
row
,
width=15
,
text=field
,
anchor=
'
w
'
)
ent
=
entri
(
row
)
row.pack
(
side=top
,
fill=x
,
padx=5
,
pady=5
)
lab.pack
(
side=left
)
ent.pack
(
side=right
,
expand=y
,
fill=x
)
entries.append
(
(
field
,
ent
)
)
return
entri
if
__name__
==
'__main__
'
:
root
=
Tk
(
)
ent
=
makeform
(
root
,
field
)
root.bind
(
'
<
return
>
'
,
(
lambda
event
,
e=ent
:
fetch
(
e
)
)
)
b1
=
button
(
root
,
text='show
'
,
command=
(
lambda
e=ent
:
fetch
(
e
)
)
)
b1.pack
(
side=left
,
padx=5
,
pady=5
)
b2
=
button
(
root
,
text='quit
'
,
command=root.quit
)
b2.pack
(
side=left
,
padx=5
,
pady=5
)
root.mainloop
(
)
If
you
start
thi
python
script
,
it
will
look
like
thi
:
calcul
We
are
not
realli
write
a
calcul
,
we
rather
provid
a
gui
which
is
capabl
of
evalu
ani
mathemat
express
and
print
the
result
.
from
tkinter
import
*
from
math
import
*
def
evalu
(
event
)
:
res.configur
(
text
=
``
ergebni
:
``
+
str
(
eval
(
entry.get
(
)
)
)
)
w
=
Tk
(
)
label
(
w
,
text=
''
your
express
:
''
)
.pack
(
)
entri
=
entri
(
w
)
entry.bind
(
``
<
return
>
''
,
evalu
)
entry.pack
(
)
re
=
label
(
w
)
res.pack
(
)
w.mainloop
(
)
our
widget
look
like
thi
:
interest
calcul
the
follow
formula
can
be
use
to
calcul
the
balanc
Bk
after
k
payment
(
balanc
index
)
,
start
with
an
initi
balanc
(
also
known
as
the
loan
princip
)
and
a
period
rate
r
:
where
rate
=
interest
rate
in
percent
,
e.g
.
3
%
i
=
rate
/
100
,
annual
rate
in
decim
form
r
=
period
rate
=
i
/
12
B0
=
initi
balanc
,
also
call
loan
princip
Bk
=
balanc
after
k
payment
k
=
number
of
monthli
payment
p
=
period
(
monthli
)
payment
If
we
want
to
find
the
necessari
monthli
payment
if
the
loan
is
to
be
paid
off
in
n
payment
one
set
Bn
=
0
and
get
the
formula
:
where
n
=
number
of
monthli
payment
to
pay
back
the
princip
loan
#
!
/usr/bin/python3
from
tkinter
import
*
field
=
(
'annual
rate
'
,
'number
of
payment
'
,
'loan
principl
'
,
'monthli
payment
'
,
'remain
loan
'
)
def
monthly_pay
(
entri
)
:
#
period
rate
:
r
=
(
float
(
entri
[
'annual
rate
'
]
.get
(
)
)
/
100
)
/
12
print
(
``
r
''
,
r
)
#
princip
loan
:
loan
=
float
(
entri
[
'loan
principl
'
]
.get
(
)
)
n
=
float
(
entri
[
'number
of
payment
'
]
.get
(
)
)
remaining_loan
=
float
(
entri
[
'remain
loan
'
]
.get
(
)
)
q
=
(
1
+
r
)
**
n
monthli
=
r
*
(
(
q
*
loan
-
remaining_loan
)
/
(
q
-
1
)
)
monthli
=
(
``
%
8.2f
''
%
monthli
)
.strip
(
)
entri
[
'monthli
payment
'
]
.delet
(
0
,
end
)
entri
[
'monthli
payment
'
]
.insert
(
0
,
monthli
)
print
(
``
monthli
payment
:
%
f
''
%
float
(
monthli
)
)
def
final_bal
(
entri
)
:
#
period
rate
:
r
=
(
float
(
entri
[
'annual
rate
'
]
.get
(
)
)
/
100
)
/
12
print
(
``
r
''
,
r
)
#
princip
loan
:
loan
=
float
(
entri
[
'loan
principl
'
]
.get
(
)
)
n
=
float
(
entri
[
'number
of
payment
'
]
.get
(
)
)
q
=
(
1
+
r
)
**
n
monthli
=
float
(
entri
[
'monthli
payment
'
]
.get
(
)
)
q
=
(
1
+
r
)
**
n
remain
=
q
*
loan
-
(
(
q
-
1
)
/
r
)
*
monthli
remain
=
(
``
%
8.2f
''
%
remain
)
.strip
(
)
entri
[
'remain
loan
'
]
.delet
(
0
,
end
)
entri
[
'remain
loan
'
]
.insert
(
0
,
remain
)
print
(
``
remain
loan
:
%
f
''
%
float
(
remain
)
)
def
makeform
(
root
,
field
)
:
entri
=
{
}
for
field
in
field
:
row
=
frame
(
root
)
lab
=
label
(
row
,
width=22
,
text=field+
''
:
``
,
anchor=
'
w
'
)
ent
=
entri
(
row
)
ent.insert
(
0
,
''
0
''
)
row.pack
(
side=top
,
fill=x
,
padx=5
,
pady=5
)
lab.pack
(
side=left
)
ent.pack
(
side=right
,
expand=y
,
fill=x
)
entri
[
field
]
=
ent
return
entri
if
__name__
==
'__main__
'
:
root
=
Tk
(
)
ent
=
makeform
(
root
,
field
)
root.bind
(
'
<
return
>
'
,
(
lambda
event
,
e=ent
:
fetch
(
e
)
)
)
b1
=
button
(
root
,
text='fin
balanc
'
,
command=
(
lambda
e=ent
:
final_bal
(
e
)
)
)
b1.pack
(
side=left
,
padx=5
,
pady=5
)
b2
=
button
(
root
,
text='monthli
payment
'
,
command=
(
lambda
e=ent
:
monthly_pay
(
e
)
)
)
b2.pack
(
side=left
,
padx=5
,
pady=5
)
b3
=
button
(
root
,
text='quit
'
,
command=root.quit
)
b3.pack
(
side=left
,
padx=5
,
pady=5
)
root.mainloop
(
)
our
loan
calcul
look
like
thi
,
if
we
start
it
with
python3
:
previou
chapter
:
checkbox
next
chapter
:
canva
widget
Â©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
