python2
tutori
:
A
tutori
python
cours
advanc
topic
introduct
into
the
sy
modulepython
and
the
shellfork
and
fork
in
pythonintroduct
into
threadspip
,
pipe
and
``
99
bottl
of
beer
''
python
network
scannergraph
theori
and
graph
in
pythongraph
:
pygraphgraphsa
python
class
for
polynomi
functionscurri
in
pythonfinit
state
machin
in
pythontur
machin
in
pythonlevenshtein
distanceexampl
for
recurs
program
:
tower
of
hanoimastermind
/
bull
and
cowscreat
dynam
websit
with
wsgidynam
websit
with
mod_pythondynam
websit
with
pylonspython
,
sql
,
mysql
and
sqlitepython
score
dynam
websit
not
about
the
web
neither
on
the
dynam
websit
,
but
it
fit
anyway
:
``
sometim
one
creat
a
dynam
impress
by
say
someth
,
and
sometim
one
creat
as
signific
an
impress
by
remain
silent
.
''
(
dalai
lama
)
support
by
:
python
seminar
and
train
cours
all
over
the
world
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
classroom
train
cours
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
classroom
python
train
cours
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
class
by
bernd
klein
at
bodenseo
.
©
kabliczech
-
fotolia.com
quot
of
the
day
:
''
the
differ
between
stupid
and
geniu
is
that
geniu
ha
it
limit
''
(
albert
einstein
)
If
you
have
the
choic
work
with
python
2
or
python
3
,
we
recomend
to
switch
to
python
3
!
you
can
read
our
python
tutori
to
see
what
the
differ
are
.
data
protect
declar
data
protect
declar
previou
chapter
:
creat
dynam
websit
with
wsgi
next
chapter
:
dynam
websit
with
pylon
creat
dynam
websit
with
python
with
mod_python
and
wsgi
introduct
pleas
notic
:
work
on
thi
topic
is
under
process
.
(
august
2014
)
mod_python
is
an
apach
http
server
modul
.
It
's
purpos
is
to
integr
python
program
with
the
apach
web
server
,
or
in
other
word
a
python
languag
bind
for
the
apach
http
server
.
the
offici
websit
of
mod_python
say
that
it
possibl
to
write
``
with
mod_python
web-bas
applic
in
python
that
run
mani
time
faster
than
tradit
cgi
and
will
have
access
to
advanc
featur
such
as
abil
to
retain
databas
connect
and
other
data
between
hit
and
access
to
apach
intern
.
''
mod_python
ha
been
pronounc
dead
some
year
ago
.
So
it
did
n't
look
to
be
a
good
idea
to
use
it
for
new
project
.
It
never
die
,
it
wa
onli
``
sleep
''
.
It
came
to
life
again
in
2013
!
python
and
mod_python
If
we
want
to
use
python
on
am
apach
web
server
,
we
need
the
mod_python
modul
for
apach
.
thi
modul
provid
a
python
languag
bind
so
that
we
can
integr
python
.
It
's
a
more
effici
approach
than
use
cgi
,
becaus
cgi
will
start
a
new
python
process
for
everi
request
.
mod_python
consist
of
two
compon
:
the
dynam
loadabl
modul
mod_python.so
for
apach
and
the
python
packag
mod_python
.
If
you
are
use
debian
or
ubuntu
linux
,
it
's
satisfi
to
instal
the
packag
libapache2-mod-python
for
thi
purpos
,
assum
apache2
is
alreadi
instal
:
sudo
apt-get
instal
libapache2-mod-python
If
apache2
ha
to
be
instal
as
well
,
do
the
follow
instal
first
:
sudo
apt-get
instal
apache2
you
have
to
add
the
follow
line
into
/etc/apache2/sites-enabled/000-default
:
addhandl
mod_python
.pi
pythonhandl
mod_python.publish
pythondebug
On
It
may
look
like
thi
:
serveradmin
webmast
@
localhost
documentroot
/var/www/html
addhandl
mod_python
.pi
pythonhandl
mod_python.publish
pythondebug
On
now
we
have
to
restart
the
apach
server
:
sudo
/etc/init.d/apache2
restart
A
simpl
dynam
page
with
mod_python
We
will
creat
a
subdirectori
``
test
''
in
the
document
root
of
the
apach
server
.
In
case
of
debian
and
ubuntu
,
thi
will
be
/var/www/html/
.
We
save
the
follow
python
program
as
``
hello.pi
''
in
the
previous
creat
subdirectori
:
def
index
(
)
:
return
``
hello
python
!
''
We
have
to
start
a
browser
and
go
to
the
locat
``
localhost/tests/hello.py/index
''
.
It
work
with
``
localhost/tests/hello.pi
''
as
well
.
We
get
the
follow
output
in
the
browser
window
:
anoth
more
``
use
''
webpag
We
save
the
follow
websit
as
timesite.pi
.
It
will
print
out
the
current
date
and
time
,
as
well
as
the
timezon
:
import
time
def
index
(
)
:
html
=
``
''
''
<
html
>
<
head
>
<
titl
>
mod_python.publish
first
html
page
<
/titl
>
<
/head
>
<
bodi
>
<
h1
>
thi
page
wa
gener
by
mod_python.publish
<
/h1
>
<
hr
>
the
local
time
of
thi
server
is
:
%
s
<
br
>
the
timezon
of
thi
server
is
:
%
s
<
/bodi
>
<
/html
>
``
''
''
%
(
time.ctim
(
time.tim
(
)
)
,
time.timezone/3600
)
return
html
<
/pre
>
We
get
the
follow
output
:
anoth
page
name
So
far
we
use
index
as
the
default
websit
name
.
We
can
also
defin
other
function
and
by
do
so
creat
websit
with
other
name
.
We
write
the
get_tim
function
in
follow
exampl
and
modifi
the
index
function
:
import
time
def
index
(
)
:
return
``
index
(
)
..
noth
here
,
but
you
will
find
some
info
at
get_tim
..
''
def
get_tim
(
)
:
html
=
``
''
''
<
html
>
<
head
>
<
titl
>
get_tim
function
<
/titl
>
<
/head
>
<
bodi
>
<
h1
>
get_tim
function
<
/h1
>
<
hr
>
the
local
time
of
thi
server
is
:
%
s
<
br
>
the
timezon
of
thi
server
is
:
%
s
<
br
>
<
/bodi
>
<
/html
>
''
''
''
%
(
time.ctim
(
time.tim
(
)
)
,
time.timezone/3600
)
return
html
call
the
locat
``
http
:
//localhost/tests/timesite2.py/get_tim
''
,
return
the
follow
output
:
use
the
address
``
http
:
//localhost/tests/timesite2.py/index
''
,
suppli
thi
:
use
form
html
form
are
use
to
pass
data
to
a
server
.
We
can
do
thi
with
mod_python
as
well
.
the
follow
html
form
insid
our
python
program
``
form.pi
''
contain
field
for
the
first
name
,
last
name
email
address
and
radio
button
for
the
gender
:
def
index
(
)
:
return
``
''
''
<
html
>
<
head
>
<
titl
>
formular
<
/titl
>
<
/head
>
<
bodi
>
<
form
value=
''
form
''
action=
''
get_info
''
method=
''
post
''
>
<
P
>
<
label
for=
''
firstnam
''
>
first
name
:
<
/label
>
<
input
type=
''
text
''
name=
''
firstnam
''
>
<
BR
>
<
label
for=
''
lastnam
''
>
last
name
:
<
/label
>
<
input
type=
''
text
''
name=
''
lastnam
''
>
<
BR
>
<
label
for=
''
email
''
>
email
:
<
/label
>
<
input
type=
''
text
''
name=
''
email
''
>
<
BR
>
<
input
type=
''
radio
''
name=
''
gender
''
value=
''
male
''
>
male
<
BR
>
<
input
type=
''
radio
''
name=
''
gender
''
value=
''
femal
''
>
femal
<
BR
>
<
input
type=
''
submit
''
value=
''
send
''
>
<
input
type=
''
reset
''
>
<
/P
>
<
/form
>
<
/bodi
>
<
/html
>
``
''
''
def
get_info
(
req
)
:
info
=
req.form
first
=
info
[
'firstnam
'
]
last
=
info
[
'lastnam
'
]
email
=
info
[
'email
'
]
gender
=
info
[
'gender
'
]
return
``
''
''
<
html
>
<
head
>
<
titl
>
post
method
use
mod_python
<
/titl
>
<
/head
>
<
bodi
>
<
h1
>
post
method
use
mod_python
<
/h1
>
<
hr
>
thank
for
use
our
servic
:
<
br
>
your
first
name
:
%
s
<
br
>
your
last
name
:
%
s
<
br
>
your
email
address
:
%
s
<
br
>
your
gender
:
%
s
<
br
>
<
/bodi
>
<
/html
>
``
''
''
%
(
first
,
last.upp
(
)
,
email
,
gender.low
(
)
)
call
the
abov
program
with
the
url
``
http
:
//localhost/tests/form.py/index
''
give
us
the
follow
entri
form
:
To
see
the
result
page
,
i.e
.
the
result
of
the
function
get_info
,
we
have
to
push
the
``
send
''
button
:
wsgi
what
is
wsgi
?
wsgi
is
the
web
server
gateway
interfac
.
It
is
a
specif
that
describ
how
web
server
commun
with
web
applic
.
It
is
a
framework
for
the
python
.
It
wa
origin
specifi
in
2003
.
wsgi
ha
becom
a
standard
for
python
web
applic
develop
.
wsgi
ha
been
specifi
in
pep
3333
.
the
abstract
say
``
thi
document
specifi
a
propos
standard
interfac
between
web
server
and
python
web
applic
or
framework
,
to
promot
web
applic
portabl
across
a
varieti
of
web
server
.
''
previou
chapter
:
creat
dynam
websit
with
wsgi
next
chapter
:
dynam
websit
with
pylon
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
