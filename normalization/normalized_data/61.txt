python
tutori
:
A
tutori
python
cours
numer
program
numpi
introductioncr
numpi
arraysdata
type
object
,
dtypenumer
oper
on
numpi
arrayschang
the
dimens
of
arrayspython
,
numpi
and
probabilityweight
choic
and
weight
samplescr
of
synthet
test
databoolean
mask
of
arraysmatrix
arithmeticread
and
write
ndarraysmatplotlib
introductionspin
and
tickslegend
and
annotationsmultipl
figur
and
axeshistogramscontour
plotspython
imag
process
tutorialimag
process
techniquespanda
tutorialpanda
dataframespanda
data
filesd
with
nanbin
datapanda
tutori
continu
:
multi-level
indexingdata
visual
with
panda
and
pythonpython
,
date
and
timepython
,
panda
and
timeserieslinear
combin
time
``
It
is
an
old
stori
,
thi
irresist
and
ceaseless
onflow
of
life
and
time
;
time
alway
scatter
the
flower
of
life
with
a
lavish
hand
along
it
cours
...
''
(
hamilton
wright
mabi
,
1846â€“1916
,
``
new
year
's
eve
''
(
c.1885
)
,
My
studi
fire
)
surpris
``
how
often
the
morn
sun
ha
surpris
him
work
on
some
chart
which
he
had
begun
at
night
,
and
how
often
night
ha
surpris
him
at
a
task
begun
at
the
break
of
day
!
''
(
``
quotien
ilium
lux
noctu
aliquid
describer
ingressum
,
quotien
nox
oppressit
cum
mane
coepisset
!
''
)
(
cicero
,
De
senectut
)
panda
the
first
thing
peopl
think
about
,
when
they
hear
the
name
panda
is
the
panda
bear
.
A
cute
,
cuddli
look
be
with
dreami
black
eye
,
but
potenti
it
can
also
be
aggress
or
danger
,
if
they
feel
threaten
.
So
,
it
's
nice
name
for
a
piec
of
softwar
,
or
better
a
python
modul
.
It
's
round
up
the
capabl
of
numpi
,
matplotlib
and
scipi
to
be
the
perfect
replac
for
R
and
matlab
in
scientif
,
financi
or
engineer
work
field
.
the
acronym
panda
the
aconym
ha
been
deriv
from
``
python
and
data
analysi
''
and
``
panel
data
''
.
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
train
class
thi
websit
aim
at
provid
you
with
educ
materi
suitabl
for
self-learn
.
nevertheless
,
it
is
faster
and
more
effici
to
attend
a
``
real
''
python
cours
in
a
classroom
,
with
an
experienc
trainer
.
So
whi
not
attend
one
of
the
live
python
cours
in
strasbourg
,
pari
,
london
,
berlin
,
munich
,
hamburg
,
frankfurt
,
or
lake
constanc
by
bernd
klein
,
the
author
of
thi
tutori
?
in-hous
train
cours
If
you
like
it
,
we
will
come
to
your
compani
or
institut
and
provid
a
special
train
for
your
employe
,
as
we
've
done
it
mani
time
in
amsterdam
(
the
netherland
)
,
berlin
(
germani
)
,
bern
(
switzerland
)
,
basel
(
switzerland
)
,
zurich
(
switzerland
)
,
frankfurt
(
germani
)
,
locarno
(
switzerland
)
,
den
haag
(
the
hagu
)
,
hamburg
,
munich
(
germani
)
,
bucharest
(
romania
)
,
toronto
(
canada
)
,
edmonton
(
canada
)
,
and
mani
other
citi
.
We
do
train
cours
in
england
,
switzerland
,
liechtenstein
,
austria
,
germani
,
franc
,
belgium
,
the
netherland
,
luxembourg
,
romania
,
UK
,
itali
,
spain
and
other
locat
in
europ
and
in
canada
.
thi
way
you
will
get
a
perfect
train
up
to
your
need
and
it
will
be
extrem
cost
effici
as
well
.
contact
us
so
we
can
find
the
ideal
cours
to
meet
your
need
.
skill
python
programm
you
are
look
for
experienc
python
develop
or
programm
?
We
can
help
you
,
pleas
contact
us
.
quot
of
the
day
:
''
for
instanc
,
on
the
planet
earth
,
man
had
alway
assum
that
he
wa
more
intellig
than
dolphin
becaus
he
had
achiev
so
much
-
the
wheel
,
new
york
,
war
and
so
on
-
whilst
all
the
dolphin
had
ever
done
wa
muck
about
in
the
water
have
a
good
time
.
but
convers
,
the
dolphin
had
alway
believ
that
they
were
far
more
intellig
than
man
for
precis
the
same
reason
''
(
dougla
adam
,
the
hitchhik
's
guid
to
the
galaxi
)
data
protect
declar
data
protect
declar
previou
chapter
:
data
visual
with
panda
and
python
next
chapter
:
python
,
panda
and
timeseri
python
,
date
and
timeintroduct
python
provid
rich
function
for
deal
with
date
and
time
data
.
the
standard
librari
contain
the
modul
time
calendar
datetim
these
modul
suppli
class
for
manipul
date
and
time
in
both
simpl
and
complex
way
.
especi
,
the
datetim
class
will
be
veri
import
for
the
timeseri
of
panda
.
python
standard
modul
for
time
datath
most
import
modul
of
python
deal
with
time
are
the
modul
time
,
calendar
and
datetim
.
the
datetim
modul
provid
variou
class
,
method
and
function
to
deal
with
date
,
time
,
and
time
interv
.
the
datetim
modul
provid
the
follow
class
:
the
instanc
of
the
date
class
repres
date
,
wherea
the
year
can
rang
between
1
and
9999
.
the
instanc
of
the
datetim
class
are
made
up
both
by
a
date
and
a
time
.
the
time
class
implement
time
object
.
the
timedelta
class
is
use
to
hold
the
differ
between
two
time
or
two
date
object
.
the
tzinfo
class
is
use
to
implement
timezon
support
for
time
and
datetim
object
.
let
's
start
with
a
date
object
.
the
date
class
from
datetim
import
date
x
=
date
(
1993
,
12
,
14
)
print
(
x
)
1993-12-14
We
can
instanti
date
in
the
rang
from
januari
1
,
1
to
decemb
31
,
9999
.
thi
can
be
inquir
from
the
attribut
min
and
max
:
from
datetim
import
date
print
(
date.min
)
print
(
date.max
)
0001-01-01
9999-12-31
We
can
appli
variou
method
to
the
date
instanc
abov
.
the
method
toordin
return
the
prolept
gregorian
ordin
.
the
prolept
gregorian
calendar
is
produc
by
extend
the
gregorian
calendar
backward
to
date
preced
it
offici
introduct
in
1582
.
januari
1
of
year
1
is
day
1.
x.toordin
(
)
the
previou
code
return
the
follow
:
727911
It
is
possibl
to
calcul
a
date
from
a
ordin
by
use
the
class
method
``
fromordin
''
:
date.fromordin
(
727911
)
the
previou
code
return
the
follow
:
datetime.d
(
1993
,
12
,
14
)
If
you
want
to
know
the
weekday
of
a
certain
date
,
you
can
calcul
it
by
use
the
method
weekday
:
x.weekday
(
)
after
have
execut
the
python
code
abov
we
receiv
the
follow
:
1
date.today
(
)
the
abov
python
code
return
the
follow
result
:
datetime.d
(
2017
,
4
,
12
)
We
can
access
the
day
,
month
and
year
with
attribut
:
print
(
x.day
)
print
(
x.month
)
print
(
x.year
)
14
12
1993
the
time
classth
time
class
is
similarli
organ
than
the
date
class
.
from
datetim
import
time
t
=
time
(
15
,
6
,
23
)
print
(
t
)
15:06:23
the
possibl
time
rang
between
:
print
(
time.min
)
print
(
time.max
)
00:00:00
23:59:59.999999
access
'hour
'
,
'minut
'
and
'second
'
:
t.hour
,
t.minut
,
t.second
the
previou
code
return
the
follow
:
(
15
,
6
,
23
)
each
compon
of
a
time
instanc
can
be
chang
by
use
'replac
'
:
t
=
t.replac
(
hour=11
,
minute=59
)
t
the
previou
code
return
the
follow
result
:
datetime.tim
(
11
,
59
,
23
)
We
can
render
a
date
as
a
c-style
like
string
,
correspond
to
the
C
ctime
function
:
x.ctime
(
)
after
have
execut
the
python
code
abov
we
receiv
the
follow
result
:
'tue
dec
14
00:00:00
1993
'
the
datetim
classth
datetim
modul
provid
us
with
function
and
method
for
manipul
date
and
time
.
It
suppli
function
for
date
and
time
arithmet
,
i.e
.
addit
and
subtract
.
anoth
focu
of
the
implement
is
on
attribut
extract
for
output
manipul
and
format
.
there
are
two
kind
of
date
and
time
object
:
naiv
awar
If
a
time
or
date
object
is
naiv
it
doe
n't
contain
inform
to
compar
or
locat
itself
rel
to
other
date
or
time
object
.
the
semant
,
if
such
a
naiv
object
belong
to
a
certain
time
zone
,
e.g
.
coordin
univers
time
(
utc
)
,
local
time
,
or
some
other
timezon
is
contain
in
the
logic
of
the
program
.
An
awar
object
on
the
other
hand
possess
knowledg
of
the
time
zone
it
belong
to
or
the
daylight
save
time
inform
.
thi
way
it
can
locat
itself
rel
to
other
awar
object
.
how
can
you
tell
if
a
datetim
object
t
is
awar
?
t
is
awar
if
t.tzinfo
is
not
none
and
t.tzinfo.utcoffset
(
t
)
is
not
none
.
both
condit
have
to
be
fulfil
On
the
other
hand
an
object
t
is
naiv
if
t.tzinfo
is
none
or
t.tzinfo.utcoffset
(
t
)
is
none
let
's
creat
a
datetim
object
:
from
datetim
import
datetim
t
=
datetim
(
2017
,
4
,
19
,
16
,
31
,
0
)
t
the
previou
code
return
the
follow
output
:
datetime.datetim
(
2017
,
4
,
19
,
16
,
31
)
t
is
naiv
,
becaus
the
follow
is
true
:
t.tzinfo
==
none
after
have
execut
the
python
code
abov
we
receiv
the
follow
result
:
true
We
will
creat
an
awar
datetim
object
from
the
current
date
.
for
thi
purpos
we
need
the
modul
pytz
.
pytz
is
a
modul
,
which
bring
the
olson
tz
databas
into
python
.
the
olson
timezon
are
nearli
complet
support
by
thi
modul
.
from
datetim
import
datetim
import
pytz
t
=
datetime.now
(
pytz.utc
)
We
can
see
that
both
t.tzinfo
and
t.tzinfo.utcoffset
(
t
)
are
differ
from
none
,
so
t
is
an
awar
object
:
t.tzinfo
,
t.tzinfo.utcoffset
(
t
)
after
have
execut
the
python
code
abov
we
receiv
the
follow
result
:
(
<
utc
>
,
datetime.timedelta
(
0
)
)
from
datetim
import
datetim
,
timedelta
as
delta
nday
=
15
start
=
datetim
(
1991
,
4
,
30
)
date
=
[
start
-
delta
(
days=x
)
for
x
in
rang
(
0
,
nday
)
]
date
after
have
execut
the
python
code
abov
we
receiv
the
follow
result
:
[
datetime.datetim
(
1991
,
4
,
30
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
29
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
28
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
27
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
26
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
25
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
24
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
23
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
22
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
21
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
20
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
19
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
18
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
17
,
0
,
0
)
,
datetime.datetim
(
1991
,
4
,
16
,
0
,
0
)
]
differ
between
timeslet
's
see
what
happen
,
if
we
subtract
to
datetim
object
:
from
datetim
import
datetim
delta
=
datetim
(
1993
,
12
,
14
)
-
datetim
(
1991
,
4
,
30
)
delta
,
type
(
delta
)
thi
get
us
the
follow
output
:
(
datetime.timedelta
(
959
)
,
datetime.timedelta
)
the
result
of
the
subtract
of
the
two
datetim
object
is
a
timedelta
object
,
as
we
can
see
from
the
exampl
abov
.
We
can
get
inform
about
the
number
of
day
elaps
by
use
the
attribut
'day
'
:
delta.day
We
receiv
the
follow
result
:
959
t1
=
datetim
(
2017
,
1
,
31
,
14
,
17
)
t2
=
datetim
(
2015
,
12
,
15
,
16
,
59
)
delta
=
t1
-
t2
delta.day
,
delta.second
after
have
execut
the
python
code
abov
we
receiv
the
follow
:
(
412
,
76680
)
It
is
possibl
to
add
or
subtract
a
timedelta
to
a
datetim
object
to
calcul
a
new
datetim
object
by
ad
or
subtract
the
delta
in
day
:
from
datetim
import
datetim
,
timedelta
d1
=
datetim
(
1991
,
4
,
30
)
d2
=
d1
+
timedelta
(
10
)
print
(
d2
)
print
(
d2
-
d1
)
d3
=
d1
-
timedelta
(
100
)
print
(
d3
)
d4
=
d1
-
2
*
timedelta
(
50
)
print
(
d4
)
1991-05-10
00:00:00
10
day
,
0:00:00
1991-01-20
00:00:00
1991-01-20
00:00:00
It
is
also
possibl
to
add
day
and
minut
to
t
datetim
object
:
from
datetim
import
datetim
,
timedelta
d1
=
datetim
(
1991
,
4
,
30
)
d2
=
d1
+
timedelta
(
10,100
)
print
(
d2
)
print
(
d2
-
d1
)
1991-05-10
00:01:40
10
day
,
0:01:40
convert
datetim
object
to
stringsth
easiest
way
to
convert
a
datetim
object
into
a
string
consist
in
use
str
.
s
=
str
(
d1
)
s
the
python
code
abov
return
the
follow
:
'1991-04-30
00:00:00
'
convers
with
strftimeth
method
call
datetime.strftim
(
format
)
return
a
string
repres
the
date
and
time
,
control
by
an
explicit
format
string
.
A
complet
list
of
format
direct
can
be
found
at
strftime
:
print
(
d1.strftime
(
'
%
Y-
%
m-
%
d
'
)
)
print
(
``
weekday
:
``
+
d1.strftime
(
'
%
a
'
)
)
print
(
``
weekday
as
a
full
name
:
``
+
d1.strftime
(
'
%
A
'
)
)
#
weekday
as
a
decim
number
,
where
0
is
sunday
#
and
6
is
saturday
print
(
``
weekday
as
a
decim
number
:
``
+
d1.strftime
(
'
%
w
'
)
)
1991-04-30
weekday
:
tue
weekday
as
a
full
name
:
tuesday
weekday
as
a
decim
number
:
2
format
month
:
#
day
of
the
month
as
a
zero-pad
decim
number
.
#
01
,
02
,
...
,
31
print
(
d1.strftime
(
'
%
d
'
)
)
#
month
as
local
â€™
s
abbrevi
name
.
#
jan
,
feb
,
...
,
dec
(
en_u
)
;
#
jan
,
feb
,
...
,
dez
(
de_d
)
print
(
d1.strftime
(
'
%
b
'
)
)
#
month
as
local
â€™
s
full
name
.
#
januari
,
februari
,
...
,
decemb
(
en_u
)
;
#
januar
,
februar
,
...
,
dezemb
(
de_d
)
print
(
d1.strftime
(
'
%
B
'
)
)
#
month
as
a
zero-pad
decim
number
.
#
01
,
02
,
...
,
12
print
(
d1.strftime
(
'
%
m
'
)
)
30
apr
april
04
creat
datetim
object
from
stringsw
can
use
strptime
to
creat
new
datetim
object
by
pars
a
string
contain
a
data
and
time
.
the
argument
of
strptime
are
the
string
to
be
pars
and
a
format
specif
.
from
datetim
import
datetim
t
=
datetime.strptim
(
``
30
nov
00
''
,
``
%
d
%
b
%
y
''
)
print
(
t
)
2000-11-30
00:00:00
dt
=
``
2007-03-04t21:08:12
''
datetime.strptim
(
dt
,
``
%
Y-
%
m-
%
dT
%
H
:
%
M
:
%
S
''
)
the
abov
python
code
return
the
follow
output
:
datetime.datetim
(
2007
,
3
,
4
,
21
,
8
,
12
)
dt
=
'12/24/1957
4:03:29
AM
'
dt
=
datetime.strptim
(
dt
,
'
%
m/
%
d/
%
Y
%
I
:
%
M
:
%
S
%
p
'
)
dt
the
previou
python
code
return
the
follow
:
datetime.datetim
(
1957
,
12
,
24
,
4
,
3
,
29
)
We
can
creat
an
english
date
string
on
a
linux
machin
with
the
shell
command
lc_all=en_en.utf8
date
dt
=
'wed
apr
12
20:29:53
cest
2017
'
dt
=
datetime.strptim
(
dt
,
'
%
a
%
b
%
d
%
H
:
%
M
:
%
S
%
Z
%
Y
'
)
print
(
dt
)
2017-04-12
20:29:53
though
datetime.strptim
is
an
easi
way
to
pars
a
date
with
a
known
format
,
it
can
be
quot
complic
and
cumbersom
to
write
everi
time
a
new
specif
string
for
new
date
format
.
use
the
pars
method
from
dateutil.pars
:
from
dateutil.pars
import
pars
pars
(
'2011-01-03
'
)
the
abov
code
return
the
follow
:
datetime.datetim
(
2011
,
1
,
3
,
0
,
0
)
pars
(
'wed
apr
12
20:29:53
cest
2017
'
)
the
code
abov
return
the
follow
:
datetime.datetim
(
2017
,
4
,
12
,
20
,
29
,
53
,
tzinfo=tzloc
(
)
)
previou
chapter
:
data
visual
with
panda
and
python
next
chapter
:
python
,
panda
and
timeseri
Â©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
