gui
program
with
python
:
label
in
tkinter
python
tkinter
cours
tkinter
tutori
say
hello
with
labelsmessag
widgetbuttonsvari
classesradiobuttonscheckboxesentri
widgetscanva
widgetssliderstext
widgetdialogslayout
managementbul
and
cow
/
mastermind
in
tkcreat
menusev
and
bind
label
peopl
``
onc
you
label
me
you
negat
me
.
''
(
soren
kierkegaard
)
``
when
we
label
anyon
'bad
'
,
we
will
have
more
troubl
deal
with
him
than
if
we
could
have
settl
for
a
lesser
label
.
''
(
william
glasser
)
the
german-born
american
compos
and
conductor
luka
foss
wrote
about
label
artist
:
``
whi
do
we
pigeonhol
and
label
an
artist
?
It
is
a
sure
way
of
miss
the
import
,
the
contradictori
,
the
thing
that
make
him
or
her
uniqu
.
''
support
by
:
linux
and
python
cours
and
seminar
thi
websit
is
free
of
annoy
ad
.
We
want
to
keep
it
like
thi
.
you
can
help
with
your
donat
:
the
need
for
donat
bernd
klein
on
facebook
search
thi
websit
:
thi
topic
in
german
/
deutsch
übersetzung
:
hello
tkinter
label
classroom
train
thi
websit
contain
a
free
and
extens
onlin
tutori
by
bernd
klein
,
use
materi
from
hi
live
python
class
.
If
you
are
interest
in
an
instructor-l
classroom
train
cours
,
you
may
have
a
look
at
the
python
and
tkinter
cours
by
bernd
klein
at
bodenseo
.
you
can
attend
one
of
hi
python
cours
in
pari
,
london
,
toronto
,
berlin
,
munich
,
hamburg
,
amsterdam
,
den
haag
(
the
hagu
)
or
lake
constanc
/
zurich
.
It
is
also
possibl
to
book
an
on-sit
train
cours
at
your
compani
or
institut
.
quot
of
the
day
:
``
Do
n't
have
good
idea
if
you
are
n't
will
to
be
respons
for
them.
``
(
alan
perli
)
graphic
user
interfac
A
graphic
user
interfac
(
gui
)
is
a
type
of
user
interfac
that
allow
user
to
interact
with
electron
devic
in
a
graphic
way
,
i.e
.
with
imag
,
rather
than
text
command
.
origin
interact
user
interfac
to
comput
were
not
graphic
,
they
were
text
orient
and
usual
consist
of
command
,
which
had
to
be
rememb
.
the
do
oper
system
from
microsoft
and
the
bourn
shell
under
linux
are
exampl
of
such
user-comput
interfac
.
data
protect
declar
data
protect
declar
next
chapter
:
messag
widget
tkinter
hello
tkinter
label
We
will
start
our
tutori
with
one
of
the
easiest
widget
of
Tk
(
tkinter
)
,
i.e
.
a
label
.
A
label
is
a
tkinter
widget
class
,
which
is
use
to
display
text
or
an
imag
.
the
label
is
a
widget
that
the
user
just
view
but
not
interact
with
.
there
is
hardli
ani
book
or
introduct
into
a
program
languag
,
which
doe
n't
start
with
the
``
hello
world
''
exampl
.
We
will
draw
on
tradit
but
will
slightli
modifi
the
output
to
``
hello
tkinter
''
instead
of
``
hello
world
''
.
the
follow
python
script
use
tkinter
to
creat
a
window
with
the
text
``
hello
tkinter
''
.
you
can
use
the
python
interpretor
to
type
thi
script
line
after
line
,
or
you
can
save
it
in
a
file
,
for
exampl
,
``
hello.pi
''
:
import
tkinter
as
tk
#
if
you
are
still
work
under
a
python
2
version
,
#
comment
out
the
previou
line
and
uncom
the
follow
line
#
import
tkinter
as
tk
root
=
tk.tk
(
)
w
=
tk.label
(
root
,
text=
''
hello
tkinter
!
''
)
w.pack
(
)
root.mainloop
(
)
start
our
exampl
If
we
save
the
script
under
the
name
hello.pi
,
we
can
start
it
like
thi
use
the
command
shell
:
$
python3
hello.pi
If
you
run
the
command
under
the
gnome
and
linux
,
the
window
the
window
will
look
like
thi
:
under
window
it
appear
in
the
window
look
and
feel
:
explan
the
tkinter
modul
,
contain
the
Tk
toolkit
,
ha
alway
to
be
import
.
In
our
exampl
,
we
import
tkinter
by
renam
it
into
tk
,
which
is
the
prefer
way
to
do
it
:
import
tkinter
as
tk
To
initi
tkinter
,
we
have
to
creat
a
Tk
root
widget
,
which
is
a
window
with
a
titl
bar
and
other
decor
provid
by
the
window
manag
.
the
root
widget
ha
to
be
creat
befor
ani
other
widget
and
there
can
onli
be
one
root
widget
.
root
=
tk.tk
(
)
the
next
line
of
code
contain
the
label
widget
.
the
first
paramet
of
the
label
call
is
the
name
of
the
parent
window
,
in
our
case
``
root
''
.
So
our
label
widget
is
a
child
of
the
root
widget
.
the
keyword
paramet
``
text
''
specifi
the
text
to
be
shown
:
w
=
tk.label
(
root
,
text=
''
hello
tkinter
!
''
)
the
pack
method
tell
Tk
to
fit
the
size
of
the
window
to
the
given
text
.
w.pack
(
)
the
window
wo
n't
appear
until
we
enter
the
tkinter
event
loop
:
root.mainloop
(
)
our
script
will
remain
in
the
event
loop
until
we
close
the
window
.
use
imag
in
label
As
we
have
alreadi
mention
,
label
can
contain
text
and
imag
.
the
follow
exampl
contain
two
label
,
one
with
a
text
and
the
other
one
with
an
imag
.
import
tkinter
as
tk
root
=
tk.tk
(
)
logo
=
tk.photoimag
(
file=
''
python_logo_small.gif
''
)
w1
=
tk.label
(
root
,
image=logo
)
.pack
(
side=
''
right
''
)
explan
=
``
''
''
At
present
,
onli
gif
and
ppm/pgm
format
are
support
,
but
an
interfac
exist
to
allow
addit
imag
file
format
to
be
ad
easili
.
''
''
''
w2
=
tk.label
(
root
,
justify=tk.left
,
padx
=
10
,
text=explan
)
.pack
(
side=
''
left
''
)
root.mainloop
(
)
If
you
start
thi
script
,
it
will
look
like
thi
use
ubuntu
linux
with
gnome
desktop
:
the
``
justifi
''
paramet
can
be
use
to
justifi
a
text
on
the
left
,
right
or
center
.
padx
can
be
use
to
add
addit
horizont
pad
around
a
text
label
.
the
default
pad
is
1
pixel
.
padi
is
similar
for
vertic
pad
.
the
previou
exampl
without
justifi
(
default
is
centr
)
and
padx
look
like
thi
:
you
want
the
text
drawn
on
top
of
the
imag
?
No
problem
!
We
need
just
one
label
and
use
the
imag
and
the
text
option
at
the
same
time
.
By
default
,
if
an
imag
is
given
,
it
is
drawn
instead
of
the
text
.
To
get
the
text
as
well
,
you
have
to
use
the
compound
option
.
If
you
set
the
compound
option
to
center
the
text
will
be
drawn
on
top
of
the
imag
:
import
tkinter
as
tk
root
=
tk.tk
(
)
logo
=
tk.photoimag
(
file=
''
python_logo_small.gif
''
)
explan
=
``
''
''
At
present
,
onli
gif
and
ppm/pgm
format
are
support
,
but
an
interfac
exist
to
allow
addit
imag
file
format
to
be
ad
easili
.
''
''
''
w
=
tk.label
(
root
,
compound
=
tk.center
,
text=explan
,
image=logo
)
.pack
(
side=
''
right
''
)
root.mainloop
(
)
We
can
have
the
imag
on
the
right
side
and
the
text
left
justifi
with
a
pad
of
10
pixel
on
the
left
and
right
side
by
chang
the
label
command
like
thi
:
w
=
label
(
root
,
justify=left
,
compound
=
left
,
padx
=
10
,
text=explan
,
image=logo
)
.pack
(
side=
''
right
''
)
If
the
compound
option
is
set
to
bottom
,
left
,
right
,
or
top
,
the
imag
is
drawn
correspondingli
to
the
bottom
,
left
,
right
or
top
of
the
text
.
color
label
in
variou
font
some
Tk
widget
,
like
the
label
,
text
,
and
canva
widget
,
allow
you
to
specifi
the
font
use
to
display
text
.
thi
can
be
achiev
by
set
the
attribut
``
font
''
.
typic
via
a
``
font
''
configur
option
.
you
have
to
consid
that
font
are
one
of
sever
area
that
are
not
platform-independ
.
the
attribut
fg
can
be
use
to
have
the
text
in
anoth
colour
and
the
attribut
bg
can
be
use
to
chang
the
background
colour
of
the
label
.
import
tkinter
as
tk
root
=
tk.tk
(
)
tk.label
(
root
,
text=
''
red
text
in
time
font
''
,
fg
=
``
red
''
,
font
=
``
time
''
)
.pack
(
)
tk.label
(
root
,
text=
''
green
text
in
helvetica
font
''
,
fg
=
``
light
green
''
,
bg
=
``
dark
green
''
,
font
=
``
helvetica
16
bold
ital
''
)
.pack
(
)
tk.label
(
root
,
text=
''
blue
text
in
verdana
bold
''
,
fg
=
``
blue
''
,
bg
=
``
yellow
''
,
font
=
``
verdana
10
bold
''
)
.pack
(
)
root.mainloop
(
)
the
result
look
like
thi
:
dynam
content
in
a
label
the
follow
script
show
an
exampl
,
where
a
label
is
dynam
increment
by
1
until
the
stop
button
is
press
:
import
tkinter
as
tk
counter
=
0
def
counter_label
(
label
)
:
def
count
(
)
:
global
counter
counter
+=
1
label.config
(
text=str
(
counter
)
)
label.aft
(
1000
,
count
)
count
(
)
root
=
tk.tk
(
)
root.titl
(
``
count
second
''
)
label
=
tk.label
(
root
,
fg=
''
green
''
)
label.pack
(
)
counter_label
(
label
)
button
=
tk.button
(
root
,
text='stop
'
,
width=25
,
command=root.destroy
)
button.pack
(
)
root.mainloop
(
)
the
result
of
the
previou
script
look
like
thi
:
next
chapter
:
messag
widget
©
2011
-
2018
,
bernd
klein
,
bodenseo
;
design
by
denis
mitchinson
adapt
for
python-course.eu
by
bernd
klein
